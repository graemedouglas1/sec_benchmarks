---

inspec_rules:
  "1.1":
    title: '1.1 | Ensure All Apple-provided Software Is Current - manual'
    section: 'Install Updates, Patches and Additional Security Software'
    description: |
        Software vendors release security patches and software updates for their products when security vulnerabilities are
        discovered. There is no simple way to complete this action without a network connection to an Apple software repository.
        Please ensure appropriate access for this control. This check is only for what Apple provides through software update.
        Software updates should be run at minimum every 30 days. Run the following command to verify when software update was
        previously run             /usr/bin/sudo /usr/bin/defaults read /Library/Preferences/com.apple.SoftwareUpdate  grep e
        LastFullSuccessfulDate
        . The response should be in the last 30 days            Example
                    LastFullSuccessfulDate  20200730 124525 0000
    remediation: |
        Graphical Method: Perform the following steps to install all available software updates:
        Open                  System Preferences

        Select                  Software Update

        Select                  Show Updates

        Select                  Update All
                              Terminal Method: Run the following command to verify what packages need to be installed: $
        /usr/bin/sudo /usr/sbin/softwareupdate -l

        The output will include the following:
                       Software Update found the following new or updated software:
                           Run the following command to install all the packages that need to be updated: $ /usr/bin/sudo
        /usr/sbin/softwareupdate -i -a -R
         Or run the following command to install individual packages: $ /usr/bin/sudo /usr/sbin/softwareupdate -i '<package
        name>'
         example:
        $ /usr/bin/sudo /usr/sbin/softwareupdate -l
        Software Update Tool

        Finding available software
        Software Update found the following new or updated software:
           * iTunesX-12.8.2
        	iTunes (12.8.2), 273614K [recommended]

        $ sudo /usr/sbin/softwareupdate -i 'iTunesX-12.8.2'
        Software Update Tool


        Downloaded iTunes
        Installing iTunes
        Done with iTunes
        Done.
                     Impact: Missing patches can lead to more exploit opportunities.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.1', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.2":
    title: '1.2 | Ensure Auto Update Is Enabled - manual'
    section: 'Install Updates, Patches and Additional Security Software'
    description: |
        Auto Update verifies that your system has the newest security patches and software updates. If Automatically check for
        updates is not selected, background updates for new malware definition files from Apple for XProtect and Gatekeeper will
        not occur. http//macops.ca/osxadminsyourclientsarenotgettingbackgroundsecurityupdates/
        https//derflounder.wordpress.com/2014/12/17/forcingxprotectblacklistupdatesonmavericksandyosemite/
    remediation: |
        Graphical Method: Perform the following steps to enable the system to automatically check for updates:
        Open                  System Preferences

        Select                  Software Update

        Select                  Advanced

        Set                  Check for updates
         to enabled               Terminal Method: Run the following command to enable auto update: $ /usr/bin/sudo
        /usr/bin/defaults write /Library/Preferences/com.apple.SoftwareUpdate AutomaticCheckEnabled -bool true
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                  com.apple.SoftwareUpdate

        The key to include is                  AutomaticCheckEnabled

        The key must be set to                  <true/>
                              Impact: Without automatic update, updates may not be made in a timely manner and the system will
        be exposed to additional risk.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.2', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.3":
    title: '1.3 | Ensure Download New Updates When Available Is Enabled - manual'
    section: 'Install Updates, Patches and Additional Security Software'
    description: |
        In the GUI, both Install macOS updates and Install app updates from the App Store are dependent on whether Download new
        updates when available is selected.
    remediation: |
        Graphical Method: Perform the following steps to enable the system to automatically check for updates:
        Open                  System Preferences

        Select                  Software Update

        Select                  Advanced

        Set                  Download new updates when available
         to enabled               Terminal Method: Run the following command to enable auto update: $ /usr/bin/sudo
        /usr/bin/defaults write /Library/Preferences/com.apple.SoftwareUpdate AutomaticDownload -bool true
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                  com.apple.SoftwareUpdate

        The key to include is                  AutomaticDownload

        The key must be set to                  <true/>
                              Impact: If "Download new updates when available" is not selected, updates may not be made in a
        timely manner and the system will be exposed to additional risk.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.3', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.4":
    title: '1.4 | Ensure Installation of App Update Is Enabled - manual'
    section: 'Install Updates, Patches and Additional Security Software'
    description: |
        Ensure that application updates are installed after they are available from Apple. These updates do not require reboots
        or administrator privileges for end users.
    remediation: |
        Graphical Method: Perform the following steps to enable App Store updates to install automatically:
        Open                  System Preferences

        Select                  Software Updates

        Select                  Advanced

        Set                  Install app updates from the App Store
         to enabled               Terminal Method: Run the following command to to enable automatic checking and installing of
        macOS updates: $ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.commerce AutoUpdate -bool TRUE
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                  com.apple.SoftwareUpdate

        The key to include is                  AutomaticallyInstallAppUpdates

        The key must be set to                  <true/>
                              Impact: Unpatched software may be exploited.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.4', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.5":
    title: '1.5 | Ensure System Data Files and Security Updates Are Downloaded Automatically Is Enabled - manual'
    section: 'Install Updates, Patches and Additional Security Software'
    description: |
        Ensure that system and security updates are installed after they are available from Apple. This setting enables
        definition updates for XProtect and Gatekeeper. With this setting in place, new malware and adware that Apple has added
        to the list of malware or untrusted software will not execute. These updates do not require reboots or end user admin
        rights. Silently updated security data files in Monterey https//support.apple.com/enus/HT202491 XProtect is Apples
        builtin, signaturebased security tool for detection and removal of malware. Protecting against malware in macOS
    remediation: |
        Graphical Method: Perform the following steps to enable system data files and security updates to install automatically:
        Open                  System Preferences

        Select                  Software Updates

        Select                  Advanced

        Set                  Install system data files and security updates
         to enabled               Terminal Method: Run the following commands to enable automatic checking of system data files
        and security updates:
        $ /usr/bin/sudo  /usr/bin/defaults write /Library/Preferences/com.apple.SoftwareUpdate ConfigDataInstall -bool true

        $ /usr/bin/sudo  /usr/bin/defaults write /Library/Preferences/com.apple.SoftwareUpdate CriticalUpdateInstall -bool true
                     Note:
         This remediation requires a log out and log in to show in the GUI.             Profile Method: Create or edit a
        configuration profile with the following information:
        The PayloadType string is                  com.apple.SoftwareUpdate

        The key to include is                  ConfigDataInstall

        The key must be set to                  <true/>

        The key to also include is                  CriticalUpdateInstall

        The key must be set to                  <true/>
                              Impact: Unpatched software may be exploited.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.5', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.6":
    title: '1.6 | Ensure Install of macOS Updates Is Enabled - manual'
    section: 'Install Updates, Patches and Additional Security Software'
    description: |
        Ensure that macOS updates are installed after they are available from Apple. This setting enables macOS updates to be
        automatically installed. Some environments will want to approve and test updates before they are delivered. It is best
        practice to test first where updates can and have caused disruptions to operations. Automatic updates should be turned
        off where changes are tightly controlled and there are mature testing and approval processes. Automatic updates should
        not be turned off simply to allow the administrator to contact users in order to verify installation. A dependable,
        repeatable process involving a patch agent or remote management tool should be in place before autoupdates are turned
        off.
    remediation: |
        Graphical Method: Perform the following steps to enable macOS updates to run automatically:
        Open                  System Preferences

        Select                  Software Updates

        Select                  Advanced

        Set                  Install macOS updates
         to enabled               Terminal Method: Run the following commands to enable automatic checking of system data files
        and security updates: $ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.SoftwareUpdate
        AutomaticallyInstallMacOSUpdates -bool TRUE
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                  com.apple.SoftwareUpdate

        The key to include is                  AutomaticallyInstallMacOSUpdates

        The key must be set to                  <true/>
                              Impact: Unpatched software may be exploited.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.6', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.7":
    title: '1.7 | Ensure Software Update Deferment Is Less Than or Equal to 30 Days - manual'
    section: 'Install Updates, Patches and Additional Security Software'
    description: |
        Apple provides the capability to manage software updates on Apple devices through mobile device management. Part of
        those capabilities permit organizations to defer software updates and allow for testing. Many organizations have
        specialized software and configurations that may be negatively impacted by Apple updates. If software updates are
        deferred, they should not be deferred for more than 30 days. This control only verifies that deferred software updates
        are not deferred for more than 30 days. Manage software updates for Apple devices
    remediation: |
        Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                  com.apple.applicationaccess

        The key to include is                  enforcedSoftwareUpdateDelay

        The key must be set to                  <integer><1-30></integer>
                              Impact: Some organizations may need more than 30 days to evaluate the impact of software updates.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.7', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.8":
    title: '1.8 | Ensure Computer Name Does Not Contain PII or Protected Organizational Information - manual'
    section: 'Install Updates, Patches and Additional Security Software'
    description: |
        If the computer is used in an organization that assigns host names, it is a good idea to change the computer name to the
        host name. This is more of a best practice than a security measure. If the host name and the computer name are the same,
        computer support may be able to track problems down more easily. For organizations or for users that selfadminister
        their own computers, it is important to not use sensitive or personal information in computer names. The name of a
        computer that uses untrusted networks will be exposed at a minimum to the responsible network team of that network.
        While I may not care if the computer name of Ron Colvins MacBook Pro is visible on a Hooters WiFi network, other uses
        may not feel the same way. Examples of possibly inappropriate content in computer names include User directory account
        names Computer directory account names where machine accounts exist Contact phone numbers Physical locations of offices
        or residences Personal information that can be augmented with Facebook data to assist social engineering attacks
        Standard naming patterns avoid collisions and mitigate risk for computer users. With mobile devices, using DHCP IP
        tracking has serious drawbacks hostname or computer name tracking makes much more sense for those organizations that can
        implement it. If the computer is using different names for the Computer Name DNS and Directory environments, it can be
        difficult to manage Macs in an Enterprise asset inventory.
    remediation: |
        Graphical Method: Perform the following steps to set the computer name:
        Open                  System Preferences

        Select                  Sharing

        Set                  Computer Name
         to your organization's parameters
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_1.8', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.1.1":
    title: '2.1.1 | Ensure Show Bluetooth Status in Menu Bar Is Enabled'
    section: 'Bluetooth'
    description: |
        By showing the Bluetooth status in the menu bar, a small Bluetooth icon is placed in the menu bar. This icon quickly
        shows the status of Bluetooth, and can allow the user to quickly turn Bluetooth on or off.
    remediation: |
        Graphical Method: Perform the following steps to enable Bluetooth status in the menu bar:
        Open                    System Preferences

        Select                    Bluetooth

        Set                    Show Bluetooth in menu bar
         to enabled                 Terminal Method: For each user, run the following command to enable Bluetooth status in the
        menu bar: $ /usr/bin/sudo -u <username> /usr/bin/defaults write
        /Users/<username>/Library/Preferences/com.apple.systemuiserver menuExtras -array-add "/System/Library/CoreServices/Menu
        Extras/Bluetooth.menu"
         example
        :               $ /usr/bin/sudo -u firstuser /usr/bin/defaults write
        /Users/firstuser/Library/Preferences/com.apple.systemuiserver menuExtras -array-add "/System/Library/CoreServices/Menu
        Extras/Bluetooth.menu"
         Note:
         If the remediation is run multiple times, multiple instances of the Bluetooth status will appear after rebooting the
        system. Command-click and drag the unwanted icons off the menu bar.               Impact: Bluetooth is a useful wireless
        tool that has been widely exploited when configured improperly. The user should have insight into the Bluetooth status.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.1.1', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.2.1":
    title: '2.2.1 | Ensure Set time and date automatically Is Enabled - manual'
    section: 'Date & Time'
    description: |
        Correct date and time settings are required for authentication protocols, file creation, modification dates, and log
        entries. Note
         If your organization has internal time servers, enter them here. Enterprise mobile devices may need to use a mix of
        internal and external time servers. If multiple servers are required, use the Date  Time System Preference with each
        server separated by a space.           Additional Note
         The default Apple time server is time.apple.com. Variations include time.euro.apple.com. While it is certainly more
        efficient to use internal time servers, there is no reason to block access to global Apple time servers or to add a
        time.apple.com alias to internal DNS records. There are no reports that Apple gathers any information from NTP
        synchronization, as the computers already phone home to Apple for Apple services including iCloud use and software
        updates. Best practice is to allow DNS resolution to an authoritative time service for time.apple.com, preferably to
        connect to Apple servers, but local servers are acceptable as well.
    remediation: |
        Graphical Method: Perform the following steps to enable the date and time to be set automatically:
        Open                    System Preferences

        Select                    Date & Time

        Set                    Set date and time automatically
         to enabled                 Note:
         By default, the operating system will use                  time.apple.com
         as the time server. You can change to any time server that meets your organization's requirements.
        Terminal Method: Run the following commands to enable the date and time setting automatically:
        $ /usr/bin/sudo /usr/sbin/systemsetup -setnetworktimeserver <your.time.server>

        setNetworkTimeServer: <your.time.server>

        $ /usr/bin/sudo /usr/sbin/systemsetup -setusingnetworktime on

        setUsingNetworkTime: On
                       example
        :
        $ /usr/bin/sudo /usr/sbin/systemsetup -setnetworktimeserver time.apple.com

        setNetworkTimeServer: time.apple.com

        $ /usr/bin/sudo /usr/sbin/systemsetup -setusingnetworktime on

        setUsingNetworkTime: On
                       Run the following commands if you have not set, or need to set, a new time zone:
        $ /usr/bin/sudo /usr/sbin/systemsetup -listtimezones

        $ /usr/bin/sudo /usr/sbin/systemsetup -settimezone <selected time zone>
                              example
        :
        $ /usr/bin/sudo /usr/sbin/systemsetup -listtimezones

        Time Zones:
         Africa/Abidjan
         Africa/Accra
         ...
         Pacific/Wake
         Pacific/Wallis

        $ /usr/bin/sudo /usr/sbin/systemsetup -settimezone America/New_York

        Set TimeZone: America/New_York
                       Impact:
        The                    timed
         service will periodically synchronize with named time servers and will make the computer time more accurate.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.2.1', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.2.2":
    title: '2.2.2 | Ensure Time Is Set Within Appropriate Limits - manual'
    section: 'Date & Time'
    description: |
        Correct date and time settings are required for authentication protocols, file creation, modification dates and log
        entries. Ensure that time on the computer is within acceptable limits. Truly accurate time is measured within
        milliseconds. For this audit, a drift under four and a half minutes passes the control check. Since Kerberos is one of
        the important features of macOS integration into Directory systems, the guidance here is to warn you before there could
        be an impact to operations. From the perspective of accurate time, this check is not strict, so it may be too great for
        your organization. Your organization can adjust to a smaller offset value as needed. If there are consistent drift
        issues on the OS, some of the most common drift issues should be investigated The chosen time server is not reachable
        based on network firewall rules on the current network The computer is offline often and the battery drains, and the
        network is not immediately available The chosen time server is a special internal or nonpublic time server that does not
        provide a reliable time source Note ntpdate
         has been deprecated with 10.14.              sntp
         replaces that command.
    remediation: |
        Run the following commands to ensure your time is set within an appropriate limit: $ /usr/bin/sudo /usr/sbin/systemsetup
        -getnetworktimeserver

        The output will include                  Network Time Server:
         and the name of your time server
                         example
        :                  Network Time Server: time.apple.com
        .               $ /usr/bin/sudo /usr/bin/sntp -sS <your.time.server>
         example
        :
        $ /usr/bin/sudo /usr/sbin/systemsetup -getnetworktimeserver

        Network Time Server: time.apple.com

        $ /usr/bin/sudo /usr/bin/sntp -sS time.apple.com
                       Impact: Accurate time is required for many computer functions.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.2.2', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.3.1":
    title: '2.3.1 | Ensure an Inactivity Interval of 20 Minutes Or Less for the Screen Saver Is Enabled - manual'
    section: 'Desktop & Screen Saver'
    description: |
        A locking screen saver is one of the standard security controls to limit access to a computer and the current users
        session when the computer is temporarily unused or unattended. In macOS, the screen saver starts after a value is
        selected in the dropdown menu. 20 minutes or less is an acceptable value. Any value can be selected through the command
        line or script, but a number that is not reflected in the GUI can be problematic. 20 minutes is the default for new
        accounts.
    remediation: |
        Graphical Method: Perform the following steps to set the screen saver to activate in 20 minutes or less:
        Open                    System Preferences

        Select                    Desktop & Screen Saver

        Select                    Screen Saver

        Select on option for                    Start after
         that is 20 minutes or less (≤1200)                 Terminal Method: Run the following command to set individual users
        to an idle time of the screen saver is set to 20 minutes or less (≤1200): $ /usr/bin/sudo -u <username>
        /usr/bin/defaults -currentHost write com.apple.screensaver idleTime -int <value ≤1200>
         example
        :
        $ /usr/bin/sudo -u seconduser /usr/bin/defaults -currentHost write com.apple.screensaver idleTime -int 600

        $ /usr/bin/sudo -u seconduser /usr/bin/defaults -currentHost read com.apple.screensaver idleTime

        600
                       Note:
         Issues arise if the command line is used to make the setting something other than what is available in the GUI Menu.
        Choose either 1 (60), 2 (120), 5 (300), 10 (600), or 20 (1200) minutes to avoid any issues.               Profile
        Method:
        The PayloadType string is                    com.apple.screensaver

        The key to include is                    idleTime

        The key must be set to                    <integer><≤1200></integer>
                                 Note:
         Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred
        method. It is always better to set system-wide than per user.               Impact: If the screen saver is not set,
        users may leave the computer available for an unauthorized person to access information.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.3.1', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.3.2":
    title: '2.3.2 | Ensure Screen Saver Corners Are Secure - manual'
    section: 'Desktop & Screen Saver'
    description: |
        Hot Corners can be configured to disable the screen saver by moving the mouse cursor to a corner of the screen.
    remediation: |
        Graphical Method: Perform the following steps to disable a Hot Corner set to Disable Screen Saver:
        Open                    System Preferences

        Select                    Desktop & Screen Saver

        Select                    Screen Saver

        Select                    Hot Corners...
         and set any corner that is set to                    Disable Screen Saver
         to another setting that corresponds to your organization's requirements                 Terminal Method:

        Run the following command to turn off Disable Screen Saver for a Hot Corner:               $ /usr/bin/sudo -u <username>
        /usr/bin/defaults write com.apple.dock <corner that is set to '6'> -int 0
         example
        :
        $ /usr/bin/sudo -u seconduser /usr/bin/defaults write com.apple.dock wvous-tl-corner -int 0

        $ /usr/bin/sudo -u seconduser /usr/bin/defaults read com.apple.dock wvous-tl-corner

        0
                       Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.dock

        The key to include is                    Forced
                                 The key must be set to the following:
        <array>
        	<dict>
        		<key>mcx_preference_settings</key>
        			<dict>
        				<key>wvous-bl-corner</key>
        				<integer><≠6></integer>
        				<key>wvous-br-corner</key>
        				<integer><≠6></integer>
        				<key>wvous-tl-corner</key>
        				<integer><≠6></integer>
        				<key>wvous-tr-corner</key>
        				<integer><≠6></integer>
        			</dict>
        		</dict>
        </array>
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_2.3.2', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.4.1":
    title: '2.4.1 | Ensure Remote Apple Events Is Disabled - manual'
    section: 'Sharing'
    description: |
        Apple Events is a technology that allows one program to communicate with other programs. Remote Apple Events allows a
        program on one computer to communicate with a program on a different computer.
    remediation: |
        Graphical Method: Perform the following steps to disable Remote Apple Events: Open `System Preferences Select `Sharing
        Set                    Remote Apple Events
         to disabled                 Terminal Method: Run the following commands to set Remote Apple Events to Off:
        $ /usr/bin/sudo /usr/sbin/systemsetup -setremoteappleevents off

        setremoteappleevents: Off
                       Impact: With remote Apple events turned on, an AppleScript program running on another Mac can interact
        with the local computer.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.4.1', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.4.2":
    title: '2.4.2 | Ensure Internet Sharing Is Disabled - manual'
    section: 'Sharing'
    description: |
        Internet Sharing uses the open source              natd
         process to share an internet connection with other computers and devices on a local network. This allows the Mac to
        function as a router and share the connection to other, possibly unauthorized, devices.
    remediation: |
        Graphical Method: Perform the following steps to disable Internet Sharing:
        Open                    System Preferences

        Select                    Sharing

        Set                    Internet Sharing
         to disabled                 Terminal Method: Run the following command to turn off Internet Sharing: $ usr/bin/sudo
        /usr/bin/defaults write /Library/Preferences/SystemConfiguration/com.apple.nat NAT -dict Enabled -int 0
         Note:
         Using the Terminal Method will not be reflected in the GUI, but will disable the underlying service.
        Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.MCX

        The key to include is                    forceInternetSharingOff

        The key must be set to                    <true/>
                                 Impact: Internet Sharing allows the computer to function as a router and other computers to use
        it for access. This can expose both the computer itself and the networks it is accessing to unacceptable access from
        unapproved devices.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.4.2', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.4.3":
    title: '2.4.3 | Ensure Screen Sharing Is Disabled - manual'
    section: 'Sharing'
    description: |
        Screen Sharing allows a computer to connect to another computer on a network and display the computers screen. While
        sharing the computers screen, the user can control what happens on that computer, such as opening documents or
        applications, opening, moving, or closing windows, and even shutting down the computer. While mature administration and
        management does not use graphical connections for standard maintenance, most help desks have capabilities to assist
        users in performing their work when they have technical issues and need support. Help desks use graphical remote tools
        to understand what the user sees and assist them so they can get back to work. For MacOS, some of these remote
        capabilities can use Apples OS tools. Control is therefore not meant to prohibit the use of a justintime graphical view
        from authorized personnel with authentication controls. Sharing should not be enabled except in narrow windows when help
        desk support is required.
    remediation: |
        Graphical Method: Perform the following steps to disable Screen Sharing:
        Open                    System Preferences

        Select                    Sharing

        Set                    Screen Sharing
         to disabled                 Terminal Method: Run the following command to turn off Screen Sharing: $ /usr/bin/sudo
        /bin/launchctl disable system/com.apple.screensharing
         Impact: Help desks may require the periodic use of a graphical connection mechanism to assist users. Any support that
        relies on native MacOS components will not work unless a scripted solution to enable and disable sharing as neccessary.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.4.3', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.4.4":
    title: '2.4.4 | Ensure Printer Sharing Is Disabled - manual'
    section: 'Sharing'
    description: |
        By enabling Printer Sharing, the computer is set up as a print server to accept print jobs from other computers.
        Dedicated print servers or direct IP printing should be used instead.
    remediation: |
        Graphical Method: Perform the following steps to disable Printer Sharing:
        Open                    System Preferences

        Select                    Sharing

        Set                    Printer Sharing
         to disabled                 Terminal Method: Run the following command to disable Printer Sharing: $ /usr/bin/sudo
        /usr/sbin/cupsctl --no-share-printers
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.4.4', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.4.5":
    title: '2.4.5 | Ensure Remote Login Is Disabled - manual'
    section: 'Sharing'
    description: |
        Remote Login allows an interactive terminal connection to a computer.
    remediation: |
        Graphical Method: Perform the following steps to disable Remote Login:
        Open                    System Preferences

        Select                    Sharing

        Set                    Remote Login
         to disabled                 Terminal Method: Run the following command to disable Remote Login:
        $ /usr/bin/sudo /usr/sbin/systemsetup -setremotelogin off

        Do you really want to turn remote login off? If you do, you will lose this connection and can only turn it back on
        locally at the server (yes/no)?
                       Entering yes will disable remote login. Impact: The SSH server built into macOS should not be enabled on
        a standard user computer, particularly one that changes locations and IP addresses. A standard user that runs local
        applications, including email, web browser, and productivity tools, should not use the same device as a server. There
        are Enterprise management toolsets that do utilize SSH. If they are in use, the computer should be locked down to only
        respond to known, trusted IP addresses and appropriate administrator service accounts. For macOS computers that are
        being used for specialized functions, there are several options to harden the SSH server to protect against unauthorized
        access including brute force attacks. There are some basic criteria that need to be considered: Do not open an SSH
        server to the internet without controls in place to mitigate SSH brute force attacks. This is particularly important for
        systems bound to Directory environments. It is great to have controls in place to protect the system, but if they
        trigger after the user is already locked out of their account, they are not optimal. If authorization happens after
        authentication, directory accounts for users that don't even use the system can be locked out. Do not use SSH key pairs
        when there is no insight to the security on the client system that will authenticate into the server with a private key.
        If an attacker gets access to the remote system and can find the key, they may not need a password or a key logger to
        access the SSH server. Detailed instructions on hardening an SSH server, if needed, are available in the CIS Linux
        Benchmarks, but it is beyond the scope of this benchmark.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.4.5', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.4.6":
    title: '2.4.6 | Ensure DVD or CD Sharing Is Disabled - manual'
    section: 'Sharing'
    description: |
        DVD or CD Sharing allows users to remotely access the systems optical drive. While Apple does not ship Macs with builtin
        optical drives any longer, external optical drives are still recognized when they are connected. In testing, the sharing
        of an external optical drive persists when a drive is reconnected.
    remediation: |
        Graphical Method: Perform the following steps to disable DVD or CD Sharing:
        Open                    System Preferences

        Select                    Sharing

        Set                    DVD or CD sharing
         to disabled                 Terminal Method: Run the following command to disable DVD or CD Sharing: $ /usr/bin/sudo
        /bin/launchctl disable system/com.apple.ODSAgent
         Note:
         If using the Terminal method, the GUI will still show the service checked until after a reboot.               Impact:
        Many Apple devices are now sold without optical drives, however drive sharing may be needed for legacy optical media.
        The media should be explicitly re-shared as needed rather than using a persistent share. Optical drives should not be
        used for long-term storage. To store necessary data from an optical drive it should be copied to another form of
        external storage. Optionally, an image can be made of the optical drive so that it is stored in its original form on
        another form of external storage.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.4.6', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.4.7":
    title: '2.4.7 | Ensure Bluetooth Sharing Is Disabled - manual'
    section: 'Sharing'
    description: |
        Bluetooth Sharing allows files to be exchanged with Bluetoothenabled devices.
    remediation: |
        Graphical Method: Perform the following steps to disable Bluetooth Sharing:
        Open                    System Preferences

        Select                    Sharing

        Set                    Bluetooth Sharing
         to disabled                 Terminal Method: Run the following command to disable Bluetooth Sharing is disabled: $
        /usr/bin/sudo -u <username> /usr/bin/defaults -currentHost write com.apple.Bluetooth PrefKeyServicesEnabled -bool false
         $ /usr/bin/sudo -u firstuser /usr/bin/defaults -currentHost write com.apple.Bluetooth PrefKeyServicesEnabled -bool
        false
         Impact: Control 2.1.1 discusses disabling Bluetooth if no paired devices exist. There is a general expectation that
        Bluetooth peripherals will be used by most users in Apple's ecosystem. It is possible that sharing is required and
        Bluetooth peripherals are not. Bluetooth must be enabled if sharing is an acceptable use case.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.4.7', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.4.8":
    title: '2.4.8 | Ensure File Sharing Is Disabled - manual'
    section: 'Sharing'
    description: |
        File sharing from a user workstation creates additional risks, such as Open ports are created that can be probed and
        attacked Passwords are attached to user accounts for access that may be exposed and endanger other parts of the
        organizational environment, including directory accounts Increased complexity makes security more difficult and may
        expose additional attack vectors Apples File Sharing uses a combination of SMB Windows sharing and AFP Mac sharing Two
        common ways to share files using File Sharing are Apple File Protocol AFP AFP automatically uses encrypted logins, so
        this method of sharing files is fairly secure. The entire hard disk is shared to administrator user accounts. Individual
        home folders are shared to their respective user accounts. Users Public folders and the Drop Box folder inside are
        shared to any user account that has sharing access to the computer i.e. anyone in the staff group, including the guest
        account if it is enabled. Server Message Block SMB, Common Internet File System CIFS When Windows or possibly Linux
        computers need to access file shared on a Mac, SMB/CIFS file sharing is commonly used. Apple warns that SMB sharing
        stores passwords is a less secure fashion than AFP sharing and anyone with system access can gain access to the password
        for that account. When sharing with SMB, each user that will access the Mac must have SMB enabled. Apple warns that SMB
        sharing stored passwords is less secure, and anyone with system access can gain access to the password for that account.
        When sharing with SMB, each user accessing the Mac must have SMB enabled. Storing passwords, especially copies of valid
        directory passwords, decrease security for the directory account and should not be used.
    remediation: |
        Graphical Method: Perform the following steps to disable File Sharing:
        Open                    System Preferences

        Select                    Sharing

        Set                    File Sharing
         to disabled                 Terminal Method: Run the following command to disable File Sharing:
        $ /usr/bin/sudo /bin/launchctl disable system/com.apple.AppleFileServer

        $ /usr/bin/sudo /bin/launchctl disable system/com.apple.smbd
                       Impact: File Sharing can be used to share documents with other users, but hardened servers should be used
        rather than user endpoints. Turning on File Sharing increases the visibility and attack surface of a system
        unnecessarily.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.4.8', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.4.9":
    title: '2.4.9 | Ensure Remote Management Is Disabled - manual'
    section: 'Sharing'
    description: |
        Remote Management is the client portion of Apple Remote Desktop ARD. Remote Management can be used by remote
        administrators to view the current screen, install software, report on, and generally manage client Macs. The screen
        sharing options in Remote Management are identical to those in the Screen Sharing section. In fact, only one of the two
        can be configured. If Remote Management is used, refer to the Screen Sharing section above on issues regard screen
        sharing. Remote Management should only be enabled when a Directory is in place to manage the accounts with access.
        Computers will be available on port 5900 on a macOS System and could accept connections from untrusted hosts depending
        on the configuration, which is a major concern for mobile systems. As with other sharing options, an open port even for
        authorized management functions can be attacked, and both unauthorized access and DenialofService vulnerabilities could
        be exploited. If remote management is required, the pf firewall should restrict access only to known, trusted management
        consoles. Remote management should not be used across the Internet without the use of a VPN tunnel.
    remediation: |
        Graphical Method: Perform the following steps to disable Remote Management:
        Open                    System Preferences

        Select                    Sharing

        Set                    Remote Management
         to disabled                 Terminal Method: Run the following command to disable Remote Management:
        $ /usr/bin/sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -deactivate
        -stop

        Starting...
        Removed preference to start ARD after reboot.
        Done.
                       Impact: Many organizations utilize ARD for client management.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.4.9', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.4.10":
    title: '2.4.10 | Ensure Content Caching Is Disabled - manual'
    section: 'Sharing'
    description: |
        Starting with 10.13 macOS High Sierra, Apple introduced a service to make it easier to deploy data from Apple, including
        software updates, where there are bandwidth constraints to the Internet and fewer constraints or greater bandwidth exist
        on the local subnet. This capability can be very valuable for organizations that have throttled and possibly metered
        Internet connections. In heterogeneous enterprise networks with multiple subnets, the effectiveness of this capability
        would be determined by how many Macs were on each subnet at the time new, large updates were made available upstream.
        This capability requires the use of mac OS clients as P2P nodes for updated Apple content. Unless there is a business
        requirement to manage operational Internet connectivity and bandwidth user endpoints should not store content and act as
        a cluster to provision data. Content types supported by Content Caching in macOS
    remediation: |
        Graphical Method: Perform the following steps to disable Content Caching:
        Open                    System Preferences

        Select                    Sharing

        Set                    Content Caching
         to disabled                 Terminal Method: Run the following command to disable Content Caching: $ /usr/bin/sudo
        /usr/bin/AssetCacheManagerUtil deactivate

        The output will include                  Content caching deactivated
                              Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.applicationaccess

        The key to include is                    allowContentCaching

        The key must be set to                    <false/>
                                 Impact: This setting will adversely affect bandwidth usage between local subnets and the
        Internet.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_2.4.10', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.4.11":
    title: '2.4.11 | Ensure AirDrop Is Disabled - manual'
    section: 'Sharing'
    description: |
        AirDrop is Apples builtin on demand ad hoc file exchange system that is compatible with both macOS and iOS. It uses
        Bluetooth LE for discovery that limits connectivity to Mac or iOS users that are in close proximity. Depending on the
        setting it allows everyone or only Contacts to share files when they are nearby to each other. In many ways this
        technology is far superior to the alternatives. The file transfer is done over a TLS encrypted session, does not require
        any open ports that are required for file sharing, does not leave file copies on email servers or within cloud storage,
        and allows for the service to be mitigated so that only people already trusted and added to contacts can interact with
        you. While there are positives to AirDrop, there are privacy concerns that could expose personal information. For that
        reason, AirDrop should be disabled, and should only be enabled when needed and disabled afterwards. The recommendation
        against enabling the sharing is not based on any known lack of security in the protocol but for specific user
        operational concerns. If AirDrop is enabled the Mac is advertising that a Mac is addressable on the local network and
        open to either unwanted AirDrop upload requests or for a negotiation on whether the remote user is in the users contacts
        list Neither process is desirable. In most known use cases AirDrop use is ad hoc networking where AirDrop use is where
        Apple device users decide that a file should be exchanged and opt to use AirDrop which can be abled on the fly for that
        exchange. For organizations concerned about any use of AirDrop because of Digital Loss Prevention DLP monitoring on
        other protocols JAMF has an article on reviewing AirDrop logs. Detecting outbound AirDrop transfers and logging them
    remediation: |
        Graphical Method: Perform the following steps to disable AirDrop:
        Open                    System Settings
         in the Menu Bar
        Select                    General

        Select                    AirDrop & Handoff

        Set                    AirDrop
         to                    No One

        Open                    System Settings

        Select                    Control Center

        Set                    AirDrop
         to                    Don't show in Menu Bar
                                 Terminal Method: Run the following commands to disable AirDrop: $ /usr/bin/sudo -u <username>
        defaults write com.apple.NetworkBrowser DisableAirDrop -bool true
         example
        :               $ /usr/bin/sudo -u seconduser defaults write com.apple.NetworkBrowser DisableAirDrop -bool true
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.applicationaccess

        The key to include is                    allowAirDrop

        The key must be set to                    <false/>
                                 Note:
         AirDrop can only be enabled or disabled through configuration profiles. Any additional settings need to be set through
        the GUI or CL               Note:
         Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred
        method. It is always better to set system-wide than per user.               Impact: Disabling AirDrop can limit the
        ability to move files quickly over the network without using file shares.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.4.11', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.4.12":
    title: '2.4.12 | Ensure Media Sharing Is Disabled - manual'
    section: 'Sharing'
    description: |
        Starting with macOS 10.15, Apple has provided a control which permits a user to share Apple downloaded content on all
        Apple devices that are signed in with the same Apple ID. This allows users to share downloaded Movies, Music, or TV
        shows with other controlled macOS, iOS and iPadOS devices, as well as photos with Apple TVs. With this capability, guest
        users can also use media downloaded on the computer. The recommended best practice is not to use the computer as a
        server, but to utilize Apples cloud storage in order to download and use content stored there if content stored with
        Apple is used on multiple devices. https//support.apple.com/guide/machelp/setupmediasharingonmacmchlp13371337/mac
    remediation: |
        Graphical Method: Perform the following steps to disable Media Sharing:
        Open                    System Preferences

        Select                    Sharing

        Set                    Media Sharing
         to disabled                 Terminal Method: Run the following command to disable Media Sharing: $ /usr/bin/sudo -u
        <username> /usr/bin/defaults write com.apple.amp.mediasharingd home-sharing-enabled -int 0
         example
        :               $ sudo -u test2 /usr/bin/defaults write com.apple.amp.mediasharingd home-sharing-enabled -int 0
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.preferences.sharing.SharingPrefsExtension

        The key to include is                    homeSharingUIStatus

        The key must be set to                    <integer>0</integer>
                                 The key to also include is legacySharingUIStatus
        The key must be set to                    <integer>0</integer>
                                 The key to also include is mediaSharingUIStatus
        The key must be set to                    <integer>0</integer>
                                 Note:
         Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred
        method. It is always better to set system-wide than per user.               Impact: Media Sharing allows for pre-
        downloaded content on a Mac to be available to other Apple devices on the same network. Leaving this disabled forces
        device users to stream or download content from each Apple authorized device. This sharing could even allow unauthorized
        devices on the same network media access.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_2.4.12', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.5.1.1":
    title: '2.5.1.1 | Ensure FileVault Is Enabled - manual'
    section: 'Encryption'
    description: |
        FileVault secures a systems data by automatically encrypting its boot volume and requiring a password or recovery key to
        access it. FileVault should be used with a saved escrow key to ensure that the owner can decrypt their data if the
        password is lost.
        FileVault may also be enabled using command line using the                fdesetup
         command. To use this functionality, consult the Der Flounder blog for more details see link below under References.
    remediation: |
        Graphical Method: Perform the following steps to enable FileVault:
        Open                      System Preferences

        Select                      Security & Privacy

        Select                      FileVault

        Select                      Turn On FileVault
                                    Note:
         This will allow you to create a recovery key for FileVault. Keep the key saved securely in case it is needed at a later
        date.                 Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                      com.apple.MCX

        The key to include is                      dontAllowFDEDisable

        The key must be set to                      <true/>
                                    Note:
         This profile is required to pass the audit.                 Impact: Mounting a FileVault encrypted volume from an
        alternate boot source will require a valid password to decrypt it.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.5.1.1', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.5.1.2":
    title: '2.5.1.2 | Ensure all user storage APFS volumes are encrypted - manual'
    section: 'Encryption'
    description: |
        Apple developed a new file system which was first made available in 10.12 and then became the default in 10.13. The file
        system is optimized for Flash and SolidState storage and encryption.
                       https//en.wikipedia.org/wiki/AppleFileSystem

        macOS computers generally have several volumes created as part of APFS formatting, including Preboot, Recovery and
        Virtual Memory VM, as well as traditional user disks.             All APFS volumes that do not have specific roles and
        do not require encryption should be encrypted. Role disks include Preboot, Recovery and VM. User disks are labelled with
        No specific role by default.
    remediation: |
        Use Disk Utility to erase a user disk and format as APFS (Encrypted). Note:
         APFS Encrypted disks will be described as "FileVault" whether they are the boot volume or not in the ap list.
        Impact: While FileVault protects the boot volume, data may be copied to other attached storage and reduce the protection
        afforded by FileVault. Ensure all user volumes are encrypted to protect data.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_2.5.1.2', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.5.1.3":
    title: '2.5.1.3 | Ensure all user storage CoreStorage volumes are encrypted - manual'
    section: 'Encryption'
    description: |
        Apple introduced CoreStorage with 10.7. It is used as the default for formatting on macOS volumes prior to 10.13. All
        HFS and CoreStorage Volumes should be encrypted.
    remediation: |
        Use Disk Utility to erase a disk and format as macOS Extended (Journaled, Encrypted). Impact: While FileVault protects
        the boot volume, data may be copied to other attached storage and reduce the protection afforded by FileVault. Ensure
        all user volumes are encrypted to protect data.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_2.5.1.3', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.5.2.1":
    title: '2.5.2.1 | Ensure Firewall Is Enabled - manual'
    section: 'Firewall'
    description: |
        A firewall is a piece of software that blocks unwanted incoming connections to a system. Apple has posted general
        documentation about the application firewall http//support.apple.com/enus/HT201642
    remediation: |
        Graphical Method: Perform the following steps to turn the firewall on:
        Open                      System Preferences

        Select                      Security & Privacy

        Select                      Firewall

        Select                      Turn On Firewall
                                    Terminal Method: Run the following command to enable the firewall: $ /usr/bin/sudo
        /usr/bin/defaults write /Library/Preferences/com.apple.alf globalstate -int <value>

        For the                    <value>
        , use either                    1
        , specific services, or                    2
        , essential services only.                 Profile Method: Create or edit a configuration profile with the following
        information:
        The PayloadType string is                      com.apple.security.firewall

        The key to include is                      EnableFirewall

        The key must be set to                      <true/>
                                    Impact: The firewall may block legitimate traffic. Applications that are unsigned will
        require special handling.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.5.2.1', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.5.2.2":
    title: '2.5.2.2 | Ensure Firewall Stealth Mode Is Enabled - manual'
    section: 'Firewall'
    description: |
        While in Stealth mode, the computer will not respond to unsolicited probes, dropping that traffic.
        http//support.apple.com/enus/HT201642
    remediation: |
        Graphical Method: Perform the following steps to enable stealth mode:
        Open                      System Preferences

        Select                      Security & Privacy

        Select                      Firewall Options...

        Set                      Enable stealth mode
         to enabled                   Terminal Method: Run the following command to enable stealth mode:
        $ /usr/bin/sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setstealthmode on

        Stealth mode enabled
                         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                      com.apple.security.firewall

        The key to include is                      EnableStealthMode

        The key must be set to                      <true/>
                                    Note:
         This key must be set in the same configuration profile with                    EnableFirewall
         set to                    <true/>
        . If it is set in its own configuration profile, it will fail.                 Impact: Traditional network discovery
        tools like ping will not succeed. Other network tools that measure activity and approved applications will work as
        expected. This control aligns with the primary macOS use case of a laptop that is often connected to untrusted networks
        where host segregation may be non-existent. In that use case, hiding from the other inmates is likely more than
        desirable. In use cases where use is only on trusted LANs with static IP addresses, stealth mode may not be desirable.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.5.2.2', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.5.3":
    title: '2.5.3 | Ensure Location Services Is Enabled - manual'
    section: 'Security & Privacy'
    description: |
        macOS uses location information gathered through local WiFi networks to enable applications to supply relevant
        information to users. With the operating system verifying the location, users do not need to change the time or the time
        zone. The computer will change them based on the users location. They do not need to specify their location for weather
        or travel times, and they will receive alerts on travel times to meetings and appointment where location information is
        supplied. Location Services simplify some processes with mobile computers, such as asset management and time or log
        management. There are some use cases where it is important that the computer not be able to report its exact location.
        While the general use case is to enable Location Services, it should not be allowed if the physical location of the
        computer and the user should not be public knowledge.
    remediation: |
        Graphical Method: Perform the following steps to enable Location Services:
        Open                    System Preferences

        Select                    Security & Privacy

        Select                    Privacy

        Set                    Enable Location Services
         to enabled                 Terminal Method: Run the following command to enable Location Services: $ /usr/bin/sudo
        /bin/launchctl load -w /System/Library/LaunchDaemons/com.apple.locationd.plist

        If the                  com.apple.locationd.plist
         outputs                  0
        , run the following command to also ensure Location Services is running:
        $ /usr/bin/sudo /usr/bin/defaults write /var/db/locationd/Library/Preferences/ByHost/com.apple.locationd
        LocationServicesEnabled -bool false

        $ /usr/bin/sudo /bin/launchctl kickstart -k system/com.apple.locationd
                       Note:
         In some use cases, organizations may not want Location Services running. To disable Location Services, System Integrity
        Protection must be disabled.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_2.5.3', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.5.4":
    title: '2.5.4 | Audit Location Services Access - manual'
    section: 'Security & Privacy'
    description: |
        macOS uses location information gathered through local WiFi networks to enable applications to supply relevant
        information to users. While Location Services may be very useful, it may not be desirable to allow all applications that
        can use Location Services to use your location for Internet queries in order to provide tailored content based on your
        current location. Ensure applications that can use Location Services are authorized and provide that information where
        the application interacts with external systems. Apple offers feedback within System Preferences and may be enabled to
        supply information on the menu bar when Location Services are used. Safari can deny access from websites or prompt for
        access. Applications that support Location Services can be individually controlled in the Privacy tab in Security
        Privacy under System Preferences. Access should be evaluated to ensure that privacy controls are as expected.
    remediation: |
        Graphical Method: Perform the following to disable unnecessary applications from accessing Location Services:
        Open                    System Preferences

        Select                    Security & Privacy

        Select                    Privacy

        Select                    Location Services
                                 Set any applications that are not approved for access to Location Service information to
        disabled Perform the following to set websites to ask for permission to access Location Services:
        Open                    Safari

        Select                    Safari
         from the                    menu bar

        Select                    Preferences

        Select                    Websites

        Select                    Location
                                 Set When visiting other websites to Ask or Deny Impact: Many macOS features rely on Location
        Services for tailored information. Users expect their time zone and weather to be relevant to where they are without
        manual intervention. Find my Mac needs to know where your Mac is actually located. Where possible, the tolerance between
        location privacy and convenience may be best left to the user when the location itself is not sensitive. If facility
        locations are not public, location information should be tightly controlled.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_2.5.4', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.5.5":
    title: '2.5.5 | Ensure Sending Diagnostic and Usage Data to Apple Is Disabled - manual'
    section: 'Security & Privacy'
    description: |
        Apple provides a mechanism to send diagnostic and analytics data back to Apple to help them improve the platform.
        Information sent to Apple may contain internal organizational information that should be controlled and not available
        for processing by Apple.
        Turn off all Analytics and Improvements sharing. Share Mac Analytics Share with App Developers dependent on Mac Analytic
        sharing Includes diagnostics, usage and location data Share iCloud Analytics Includes iCloud data and usage information
    remediation: |
        Graphical Method: Perform the following steps to disable diagnostic data being sent to Apple:
        Open                    System Preferences

        Select                    Security & Privacy

        Select                    Privacy

        Select                    Analytics & Improvements

        Set                    Share Mac Analytics
         to disabled
        Set                    Share with App Developers
         to disabled                 Terminal Method: Run the following commands to disable the sending of diagnostic data to
        Apple:
        $ /usr/bin/sudo /usr/bin/defaults write /Library/Application\ Support/CrashReporter/DiagnosticMessagesHistory.plist
        AutoSubmit -bool false

        /usr/bin/sudo /usr/bin/defaults write /Library/Application\ Support/CrashReporter/DiagnosticMessagesHistory.plist
        ThirdPartyDataSubmit -bool false

        $ /usr/bin/sudo /bin/chmod 644 /Library/Application\ Support/CrashReporter/DiagnosticMessagesHistory.plist

        $ /usr/bin/sudo /usr/sbin/chgrp admin /Library/Application\ Support/CrashReporter/DiagnosticMessagesHistory.plist

        $ /usr/bin/sudo -u <username> /usr/bin/defaults write /Users/<username>/Library/Preferences/com.apple.assistant.support
        "Siri Data Sharing Opt-In Status" -int 2
                       example
        :               $ /usr/bin/sudo -u seconduser /usr/bin/defaults write
        /Users/seconduser/Library/Preferences/com.apple.assistant.support "Siri Data Sharing Opt-In Status" -int 2
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.applicationaccess

        The key to include is                    allowDiagnosticSubmission

        The key must be set to                    <false/>

        The key to also include is                    Siri Data Sharing Opt-In Status

        The key must be set to                    <integer>2<integer/>

        There must also be a second PayloadType string of                    com.apple.SubmitDiagInfo

        The key to include is                    AutoSubmit

        The key must be set to                    <false/>
                                 Note:
         Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred
        method. It is always better to set system-wide than per user.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_2.5.5', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.5.6":
    title: '2.5.6 | Ensure Limit Ad Tracking Is Enabled - manual'
    section: 'Security & Privacy'
    description: |
        Apple provides a framework that allows advertisers to target Apple users and endusers with advertisements. While many
        people prefer to see advertising that is relevant to them and their interests, the detailed information that is
        collected, correlated, and available to advertisers in repositories via data mining is often disconcerting. This
        information is valuable to both advertisers and attackers, and has been used with other metadata to reveal users
        identities. Organizations should manage advertising settings on computers rather than allow users to configure the
        settings. Apple Information Ad tracking should be limited on 10.15 and prior.
    remediation: |
        Graphical Method: Perform the following steps to set limited ad tracking:
        Open                    System Preferences

        Select                    Security & Privacy

        Select                    Privacy

        Select                    Apple Advertising

        Set                    Personalized Ads
         to disabled                 Terminal Method: For each needed user, run the following command to enable limited ad
        tracking: $ /usr/bin/sudo -u <username> /usr/bin/defaults write
        /Users/<username>/Library/Preferences/com.apple.Adlib.plist allowApplePersonalizedAdvertising -bool false
         example
        :               $ /usr/bin/sudo -u seconduser /usr/bin/defaults write
        /Users/seconduser/Library/Preferences/com.apple.Adlib.plist allowApplePersonalizedAdvertising -bool false
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.applicationaccess

        The key to include is                    allowApplePersonalizedAdvertising

        The key must be set to                    <false/>
                                 Note:
         Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred
        method. It is always better to set system-wide than per user.               Impact: Uses will see generic advertising
        rather than targeted advertising. Apple warns that this will reduce the number of relevant ads.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.5.6', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.5.7":
    title: '2.5.7 | Ensure Gatekeeper Is Enabled - manual'
    section: 'Security & Privacy'
    description: |
        Gatekeeper is Apples application that utilizes allowlisting to restrict downloaded applications from launching. It
        functions as a control to limit applications from unverified sources from running without authorization.
    remediation: |
        Graphical Method: Perform the following steps to enable Gatekeeper:
        Open                    System Preferences

        Select                    Security & Privacy

        Select                    General
                                 Set 'Allow apps downloaded from:' to 'App Store and identified developers' Terminal Method: Run
        the following command to enable Gatekeeper to allow applications from App Store and identified developers: $
        /usr/bin/sudo /usr/sbin/spctl --master-enable
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.systempolicy.control

        The key to include is                    AllowIdentifiedDevelopers

        The key must be set to                    <true/>

        The key to also include is                    EnableAssessment

        The key must be set to                    <true/>
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.5.7', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.5.8":
    title: '2.5.8 | Ensure a Custom Message for the Login Screen Is Enabled - manual'
    section: 'Security & Privacy'
    description: |
        An access warning informs the user that the system is reserved for authorized use only, and that the use of the system
        may be monitored.
    remediation: |
        Graphical Method: Perform the following steps to enable a login banner set to your organization's required text:
        Open                    System Preferences

        Select                    Security & Privacy

        Select                    Show a message when the screen is locked

        Select                    Set Lock Message

        Insert text in the                    Set a message to appear on the lock screen
         that matches your organization's required text                 Terminal Method: Run the following command to enable a
        custom login screen message: $ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.loginwindow
        LoginwindowText "<custom message>"
         example
        :               $ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.loginwindow LoginwindowText
        "Center for Internet Security Test Message"
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.loginwindow

        The key to include is                    LoginwindowText

        The key must be set to                    <string><Your organization's required text></string>
                                 Impact: If users are not informed of their responsibilities, unapproved activities may occur.
        Users that are not approved for access may take the lack of a warning banner as implied consent to access.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.5.8', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.5.9":
    title: '2.5.9 | Ensure an Administrator Password Is Required to Access System-Wide Preferences - manual'
    section: 'Security & Privacy'
    description: |
        System Preferences controls system and user settings on a macOS Computer. System Preferences allows the user to tailor
        their experience on the computer as well as allowing the System Administrator to configure global security settings.
        Some of the settings should only be altered by the person responsible for the computer.
    remediation: |
        Graphical Method: Perform the following steps to verify that an administrator password is required to access system-wide
        preferences:
        Open                    System Preferences

        Select                    Security & Privacy

        Select                    General

        Select                    Advanced...

        Set                    Require an administrator password to access system-wide preferences
         to enabled                 Terminal Method: The authorizationdb settings cannot be written to directly, so the plist
        must be exported out to temporary file. Changes can be made to the temporary plist, then imported back into the
        authorizationdb settings. Run the following commands to enable that an administrator password is required to access
        system-wide preferences:
        $ /usr/bin/sudo /usr/bin/security authorizationdb read system.preferences > /tmp/system.preferences.plist

        YES (0)

        $ /usr/bin/sudo /usr/bin/defaults write /tmp/system.preferences.plist shared -bool false

        $ /usr/bin/sudo /usr/bin/security authorizationdb write system.preferences < /tmp/system.preferences.plist

        YES (0)
                       Impact: Users will need to enter their password to unlock some additional preference panes that are
        unlocked by default like Network, Startup and Printers & Scanners.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.5.9', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.5.10":
    title: '2.5.10 | Ensure a Password is Required to Wake the Computer From Sleep or Screen Saver Is Enabled - manual'
    section: 'Security & Privacy'
    description: |
        Sleep and screen saver modes are low power modes that reduce electrical consumption while the system is not in use.
    remediation: |
        Graphical Method: Perform the following steps to enable a password for unlock after a screen saver begins or after
        sleep:
        Open                    System Preferences

        Select                    Security & Privacy

        Select                    General

        Set                    Require password after or screensaver begins
         with a time of                    immediately
         or                    5 seconds
                                 Terminal Method: Run the following command to require a password to unlock the computer after
        the screen saver engages or the computer sleeps: $ /usr/bin/sudo /usr/sbin/sysadminctl -screenLock immediate -password
        <administrator password>
         or $ /usr/bin/sudo /usr/sbin/sysadminctl -screenLock 5 seconds -password <administrator password>
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.screensaver

        The key to include is                    askForPassword

        The key must be set to                    <true/>

        The key to also include is                    askForPasswordDelay

        The key must be set to                    <integer><0,5></integer>
                                 Impact: Without a screenlock in place anyone with physical access to the computer would be
        logged in and able to use the active user's session.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.5.10', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.6.1.1":
    title: '2.6.1.1 | Audit iCloud Keychain'
    section: 'iCloud'
    description: |
        The iCloud keychain is Apples password manager that works with macOS and iOS. The capability allows users to store
        passwords in either iOS or macOS for use in Safari on both platforms and other iOSintegrated applications. The most
        pervasive use is driven by iOS use rather than macOS. The passwords stored in a macOS keychain on an Enterprisemanaged
        computer could be stored in Apples cloud and then be available on a personal computer using the same account. The stored
        passwords could be for organizational as well as for personal accounts. If passwords are no longer being used as
        organizational tokens, they are not in scope for iCloud keychain storage.
    remediation: |
        Graphical Method: Perform the following steps to set iCloud keychain sync based on your organization's requirements:
        Open                      System Preferences

        Select                      Apple ID

        Select                      iCloud

        Set                      Keychain
         to meet your organization's requirements                   Profile Method: Create or edit a configuration profile with
        the following information:
        The PayloadType string is                      com.apple.applicationaccess

        The key to include is                      allowCloudKeychainSync

        The key should be set                      <true/>
        , to allow iCloud keychain syncing, or                      <false/>
        , to disable it, based on your organization's requirements                   Note:
         Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred
        method. It is always better to set system-wide than per user.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_2.6.1.1', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.6.1.2":
    title: '2.6.1.2 | Audit iCloud Drive'
    section: 'iCloud'
    description: |
        iCloud Drive is Apples storage solution for applications on both macOS and iOS to use the same files that are resident
        in Apples cloud storage. The iCloud Drive folder is available much like Dropbox, Microsoft OneDrive, or Google Drive.
        One of the concerns in public cloud storage is that proprietary data may be inappropriately stored in an end users
        personal repository. Organizations that need specific controls on information should ensure that this service is turned
        off or the user knows what information must be stored on services that are approved for storage of controlled
        information.
    remediation: |
        Graphical Method: Perform the following steps to set iCloud Drive to your organization's requirements:
        Open                      System Preferences

        Select                      Apple ID

        Select                      iCloud

        Set                      iCloud Drive
         to for your organization's requirements                   Profile Method: Create or edit a configuration profile with
        the following information:
        The PayloadType string is                      com.apple.applicationaccess

        The key to include is                      allowCloudDocumentSync

        The key should be set                      <true/>
        , to allow iCloud Drive, or                      <false/>
        , to disable it, based on your organization's requirements                   Note:
         Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred
        method. It is always better to set system-wide than per user.                 Impact: Users will not be able to use
        continuity on macOS to resume the use of newly composed but unsaved files.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_2.6.1.2', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.6.1.3":
    title: '2.6.1.3 | Ensure iCloud Drive Document and Desktop Sync Is Disabled - manual'
    section: 'iCloud'
    description: |
        With macOS 10.12, Apple introduced the capability to have a users Desktop and Documents folders automatically
        synchronize to the users iCloud Drive, provided they have enough room purchased through Apple on their iCloud Drive.
        This capability mirrors what Microsoft is doing with the use of OneDrive and Office 365. There are concerns with using
        this capability. The storage space that Apple provides for free is used by users with iCloud mail, all of a users Photo
        Library created with the ever larger MultiPixel iPhone cameras, and all iOS Backups. Adding a synchronization capability
        for users who have files going back a decade or more, storage may be tight using the free 5GB provided without
        purchasing much larger storage capacity from Apple. Users with multiple computers running 10.12 and above with unique
        content on each will have issues as well. Enterprise users may not be allowed to store Enterprise information in a
        thirdparty public cloud. In previous implementations, such as iCloud Drive or DropBox, the user selected what files were
        synchronized even if there were no other controls. The new feature synchronizes all files in a folder widely used to put
        working files. The automatic synchronization of all files in a users Desktop and Documents folders should be disabled.
        https//derflounder.wordpress.com/2016/09/23/iclouddesktopanddocumentsinmacossierrathegoodthebadandtheugly/
    remediation: |
        Graphical Method: Perform the following steps to disable iCloud Desktop and Document syncing: Open `System Preferences
        Select `Apple ID Select `iCloud
        Select                      Options...
         next to                      iCloud Drive

        Set                      Desktop & Documents Folders
         to disabled                   Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                      com.apple.applicationaccess

        The key to include is                      allowCloudDesktopAndDocuments

        The key must be set to                      <false/>
                                    Note:
         Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred
        method. It is always better to set system-wide than per user.                 Impact: Users will not be able to use
        iCloud for the automatic sync of the Desktop and Documents folders.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_2.6.1.3', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.6.2":
    title: '2.6.2 | Audit App Store Password Settings - manual'
    section: 'Apple ID'
    description: |
        With OS X 10.11, Apple added settings for password storage for the App Store in macOS. These settings parallel the
        settings in iOS. As with iOS, the choices are a requirement to provide a password after every purchase or to have a
        15minute grace period, and whether or not to require a password for free purchases. The response to this setting is
        stored in a cookie and processed by iCloud. There is plenty of risk information on the wisdom of this setting for
        parents with children buying games on iPhones and iPads. The most relevant information here is the likelihood that users
        who are not authorized to download software may have physical access to an unlocked computer where someone who is
        authorized recently made a purchase. If that is a concern, a password should be required at all times for App Store
        access in the Password Settings controls.
    remediation: |
        Graphical Method: Perform the following steps to set App Store Passwords to your organization's requirements:
        Open                    System Preferences

        Select                    Apple ID

        Select                    Media & Purchases

        Select the setting for                    Free Downloads
         that are withing your organization's requirements
        Select the setting for                    Purchases and In-App Purchases
         that are within your organization's requirements
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_2.6.2', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.7.1":
    title: '2.7.1 | Ensure Backup Automatically is Enabled If Time Machine Is Enabled - manual'
    section: 'Time Machine'
    description: |
        Backup solutions are only effective if the backups run on a regular basis. The time to check for backups is before the
        hard drive fails or the computer goes missing. In order to simplify the user experience so that backups are more likely
        to occur, Time Machine should be on and set to Back Up Automatically whenever the target volume is available.
        Operational staff should ensure that backups complete on a regular basis and the backups are tested to ensure that file
        restoration from backup is possible when needed. Backup dates are available even when the target volume is not available
        in the Time Machine plist. SnapshotDates   20120820 121022 0000, 20130203 234322 0000, 20140219 213721 0000, 20150222
        130725 0000, 20160820 140714 0000 When the backup volume is connected to the computer more extensive information is
        available through tmutil. See man tmutil
    remediation: |
        Graphical Method: Perform the following steps to enable to backup automatically if Time Machine is enabled:
        Open                    System Preferences

        Select                    Time Machine

        Verify that                    Time Machine
         is enabled
        Set                    Back Up Automatically
         to enabled                 Terminal Method: Run the following command to enable automatic backups if Time Machine is
        enabled: $ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.TimeMachine.plist AutoBackup -bool true
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.TimeMachine

        The key to include is                    Forced
                                 The key must be set to:
        <array>
        	<dict>
        		<key>mcx_preference_settings</key>
        			<dict>
        				<key>AutoBackup</key>
        				<true/>
        			</dict>
        	</dict>
        </array>
                       Impact: The backup will run periodically in the background and could have user impact while running.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_2.7.1', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.7.2":
    title: '2.7.2 | Ensure Time Machine Volumes Are Encrypted If Time Machine Is Enabled - manual'
    section: 'Time Machine'
    description: |
        One of the most important security tools for data protection on macOS is FileVault. With encryption in place it makes it
        difficult for an outside party to access your data if they get physical possession of the computer. One very large
        weakness in data protection with FileVault is the level of protection on backup volumes. If the internal drive is
        encrypted but the external backup volume that goes home in the same laptop bag is not it is selfdefeating. Apple tries
        to make this mistake easily avoided by providing a checkbox to enable encryption when settingup a Time Machine backup.
        Using this option does require some password management, particularly if a large drive is used with multiple computers.
        A unique complex password to unlock the drive can be stored in keychains on multiple systems for ease of use. While some
        portable drives may contain nonsensitive data and encryption may make interoperability with other systems difficult
        backup volumes should be protected just like boot volumes.
    remediation: |
        Graphical Method: Perform the following steps to enable encryption on the Time Machine drive: Open `System Preferences
        Select `Time Machine
        Select                    Backup Disk...
                                 Select the existing Time Machine backup drive from the Available Drive list
        Set                    Encrypt backups
         to enabled
        Select                    Use Disk
                                 Note
        : You can set encryption through Disk Utility or                  /usr/bin/sudo /usr/sbin/diskutil
         in terminal, but it is advised to use the GUI.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.7.2', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.8.1":
    title: '2.8.1 | Ensure Wake for Network Access Is Disabled - manual'
    section: 'Energy Saver'
    description: |
        This feature allows the computer to take action when the user is not present and the computer is in energy saving mode.
        These tools require FileVault to remain unlocked and fully rejoin known networks. This macOS feature is meant to allow
        the computer to resume activity as needed regardless of physical security controls. This feature allows other users to
        be able to access your computers shared resources, such as shared printers or Apple Music playlists, even when your
        computer is in sleep mode. In a closed network when only authorized devices could wake a computer, it could be valuable
        to wake computers in order to do management push activity. Where mobile workstations and agents exist, the device will
        more likely check in to receive updates when already awake. Mobile devices should not be listening for signals on any
        unmanaged network or where untrusted devices exist that could send wake signals.
    remediation: |
        Graphical Method: Perform the following steps to disable Wake for network access:
        Open                    System Preferences

        Select                    Battery

        Select                    Power Adapter

        Set                    Wake for network access
         to disabled                 Terminal Method: Run the following command to disable Wake for network access: $
        /usr/bin/sudo /usr/bin/pmset -a womp 0
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.MCX

        The key to include is                    com.apple.EnergySaver.desktop.ACPower
                                 The key must be set to:
        <dict>
        	<key>Wake On LAN</key>
        	<integer>0</integer>
        	<key>Wake On Modem Ring</key>
        	<integer>0</integer>
        </dict>

        The key to also include is                    com.apple.EnergySaver.portable.ACPower
                                 The key must be set to:
        <dict>
        	<key>Wake On LAN</key>
        	<integer>0</integer>
        	<key>Wake On Modem Ring</key>
        	<integer>0</integer>
        </dict>

        The key to also include is                    com.apple.EnergySaver.portable.BatteryPower
                                 The key must be set to:
        <dict>
        	<key>Wake On LAN</key>
        	<integer>0</integer>
        	<key>Wake On Modem Ring</key>
        	<integer>0</integer>
        </dict>
                       Note:
         Both                  Wake on LAN
         and                  Wake on Modem Ring
         need to be set. Only setting                  Wake On LAN
         will allow the profile to install but not set any settings. This profile will only apply the setting at installation
        and is not sticky.               Impact: Management programs like Apple Remote Desktop Administrator use wake-on-LAN to
        connect with computers. If turned off, such management programs will not be able to wake a computer over the LAN. If the
        wake-on-LAN feature is needed, do not turn off this feature. The control to prevent computer sleep has been retired for
        this version of the Benchmark. Forcing the computer to stay on and use energy in case a management push is needed is
        contrary to most current management processes. Only keep computers unslept if after hours pushes are required on closed
        LANs.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.8.1', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.8.2":
    title: '2.8.2 | Ensure Power Nap Is Disabled for Intel Macs - manual'
    section: 'Energy Saver'
    description: |
        Power Nap allows the system to stay in low power mode, especially while on battery power, and periodically connect to
        previously known networks with stored credentials for user applications to phone home and get updates. This capability
        requires FileVault to remain unlocked and the use of previously joined networks to be risk accepted based on the SSID
        without user input. This control has been updated to check the status on both battery and AC Power. The presence of an
        electrical outlet does not completely correlate with logical and physical security of the device or available networks.
    remediation: |
        Graphical Method: Perform the following steps to disable Power Nap:
        Open                    System Preferences

        Select                    Battery

        Select                    Battery

        Set                    Enable Power Nap
         to enabled
        Select                    Power Adapter

        Set                    Enable Power Nap
         to enabled
        Select                    UPS

        Set                    Enable Power Nap
         to enabled                 Terminal Method: Run the following command to disable Power Nap: $ /usr/bin/sudo
        /usr/bin/pmset -a powernap 0
         Impact: Power Nap exists for unattended user application updates like email and social media clients. With Power Nap
        disabled, the computer will not wake and reconnect to known wireless SSIDs intermittently when slept.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.8.2', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.8.3":
    title: '2.8.3 | Ensure the OS is not Activate When Resuming from Sleep - manual'
    section: 'Energy Saver'
    description: |
        In order to use a computer with Full Disk Encryption FDE, macOS must keep encryption keys in memory to allow the use of
        the disk that has been FileVault protected. The storage volume has been unlocked and acts as if it were not encrypted.
        When the system is not in use, the volume is protected through encryption. When the system is sleeping and available to
        quickly resume, the encryption keys remain in memory. If an unauthorized party has possession of the computer and the
        computer is only slept, there are known attack vectors that can be attempted against the RAM that has the encryption
        keys or the running operating system protected by a login screen. Network attacks if network interfaces are on, as well
        as USB or other open device ports, are possible. Most of these attacks require knowledge of unpatched vulnerabilities or
        a high level of sophistication if all the other controls function as intended. There is little impact on hibernating the
        system rather than sleeping after an appropriate time period to remediate the risk of OS level attacks. Hibernation
        writes the keys to disk and requires FileVault to be unlocked prior to the OS being available. In the case of
        unauthorized personnel with access to the computer, encryption would have to be broken prior to attacking the operating
        system in order to recover data from the system. https//www.helpnetsecurity.com/2018/08/20/laptopsleepsecurity/ Mac
        systems should be set to hibernate after sleeping for a riskacceptable time period. The default value for standbydelay
        is three hours 10800 seconds. This value is likely appropriate for most desktops. If Mac desktops are deployed in
        unmonitored, less physically secure areas with confidential data, this value might be adjusted. The desktop would have
        to retain power, however, so that the running OS or physical RAM could be attacked. MacBooks should be set so that the
        standbydelay is 15 minutes 900 seconds or less. This setting should allow laptop users in most cases to stay within
        physically secured areas while going to a conference room, auditorium, or other internal location without having to
        unlock the encryption. When the user goes home at night, the laptop will autohibernate after 15 minutes and require the
        FileVault password to unlock prior to logging back into system when it resumes. MacBooks should also be set to a
        hibernate mode that removes power from the RAM. This will stop the possibility of cold boot attacks on the system.
    remediation: |
        Terminal Method: Run the following command to set the hibernate delays and to ensure the FileVault keys are set to be
        destroyed on standby:
        $ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow <value≤900>
        $ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh <value≤900>
        $ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold <value≥90>
        $ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1
        $ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25
                       example
        :
        $ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow 500
        $ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh 500
        $ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold 100
        $ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1
        $ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25
                       Impact: The laptop will take additional time to resume normal operation then if only sleeping rather than
        hibernating.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_2.8.3', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.9":
    title: '2.9 | Ensure Legacy EFI Is Valid and Updating - manual'
    section: 'System Preferences'
    description: |
        In order to mitigate firmware attacks, Apple has created an automated Firmware check to ensure that the EFI version
        running is a known good version from Apple. There is also an automated process to check it every seven days. This check
        is only valid on T1 chips and prior. Neither T2 chips nor Apple silicon require this control check
    remediation: |
        If EFI does not pass the integrity check, you may send a report to Apple. Backing up files and clean installing a known
        good Operating System and Firmware is recommended.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.9', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.10":
    title: '2.10 | Audit Siri Settings - manual'
    section: 'System Preferences'
    description: |
        With macOS 10.12 Sierra, Apple has introduced Siri from iOS to macOS. While there are data spillage concerns with the
        use of datagathering personal assistant software, the risk here does not seem greater in sending queries to Apple
        through Siri than in sending search terms in a browser to Google or Microsoft. While it is possible that Siri will be
        used for local actions rather than Internet searches, Siri could, in theory, tell Apple about confidential Programs and
        Projects that should not be revealed. This appears be a usage edge case. In cases where sensitive or protected data is
        processed and Siri could expose that information through assisting a user in navigating their machine, it should be
        disabled. Siri does need to phone home to Apple, so it should not be available from airgapped networks as part of its
        requirements. Most of the use case data published has shown that Siri is a tremendous time saver on iOS where multiple
        screens and menus need to be navigated through. Information like sports scores, weather, movie times, and simple todo
        items on existing calendars can be easily found with Siri. None of the standard use cases should be more risky than
        already approved activity.
        For information on Apples privacy policy for Siri,            click here
        .
    remediation: |
        Graphical Method: Perform the following steps to set Siri to your organization's parameters:
        Open                  System Preferences

        Select                  Siri
                              Select the settings that are within your organization's requirements
        Select                  Show All

        Select                  Accessibility

        Select                  Siri

        7 Select                  Enable Type to Siri
         to your organization's requirements               Terminal Method: Run the following commands to enable or disable Siri
        settings:
        $ /usr/bin/sudo -u <username> /usr/bin/defaults write com.apple.assistant.support.plist 'Assistant Enabled' -bool
        <true/false>

        $ /usr/bin/sudo -u <username> /usr/bin/defaults write com.apple.Siri.plist LockscreenEnabled -bool <true/false>

        $ /usr/bin/sudo -u <username> /usr/bin/defaults write com.apple.Siri.plist StatusMenuVisible -bool <true/false>

        $ /usr/bin/sudo -u <username> /usr/bin/defaults write com.apple.Siri.plist TypeToSiriEnabled -bool <true/false>

        $ /usr/bin/sudo -u <username> /usr/bin/defaults write com.apple.Siri.plist VoiceTriggerUserEnabled -bool <true/false>
                     After running the default writes, the WindowServer needs to be restarted and the caches cleared. Run the
        following commands to perform that action:
        $ /usr/bin/sudo /usr/bin/killall -HUP cfprefsd

        $ /usr/bin/sudo /usr/bin/killall SystemUIServer
                     example:
        $ /usr/bin/sudo -u firstuser /usr/bin/defaults write com.apple.assistant.support.plist 'Assistant Enabled' -bool true

        $ /usr/bin/sudo -u firstuser /usr/bin/defaults write com.apple.Siri.plist StatusMenuVisible -bool true

        $ /usr/bin/sudo -u firstuser /usr/bin/defaults write com.apple.Siri.plist LockscreenEnabled -bool false

        $ /usr/bin/sudo /usr/bin/killall -HUP cfprefsd

        $ /usr/bin/sudo /usr/bin/killall SystemUIServer

        $ /usr/bin/sudo -u seconduser /usr/bin/defaults write com.apple.assistant.support.plist 'Assistant Enabled' -bool false

        $ /usr/bin/sudo /usr/bin/killall -HUP cfprefsd

        $ /usr/bin/sudo /usr/bin/killall SystemUIServer

        $ /usr/bin/sudo -u thirduser /usr/bin/defaults write com.apple.Siri.plist VoiceTriggerUserEnabled -bool false

        $ /usr/bin/sudo -u thirduser /usr/bin/defaults write com.apple.Siri.plist TypeToSiriEnabled -bool false

        $ /usr/bin/sudo /usr/bin/killall -HUP cfprefsd

        $ /usr/bin/sudo /usr/bin/killall SystemUIServer
                     Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                  com.apple.applicationaccess

        The key to include is                  allowAssistant

        Set the key to                  <true/>
         or                  <false/>
         based on your organization's requirements               Note:
         Siri can only be enabled or disabled through configuration profiles. Any additional settings need to be set through
        either                System Settings
         or                Terminal
        .
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_2.10', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.11":
    title: '2.11 | Audit Sidecar Settings - manual'
    section: 'System Preferences'
    description: |
        Apple introduced a technology called Sidecar with the release of mac OS 10.15 Catalina that allows the use of an Apple
        iPad as an additional screen. There are no known security issues with the use of Sidecar at the time of the publication
        of this Benchmark.
        There are security concerns with some of the underlying technology that allows this feature to work. The Apple support
        article below has the additional requirements that are reproduced below. So while Sidecar may not have an explicit
        security concern some organizations may have requirements that block the use of the features required to allow Sidecar
        to work. https//support.apple.com/enafri/HT210380 Additional requirements Both devices must be signed in to iCloud with
        the same Apple ID using twofactor authentication. To use Sidecar wirelessly, both devices must be within 10 meters 30
        feet of each other and have Bluetooth, WiFi, and Handoff turned on. Also make sure that the iPad is not sharing its
        cellular connection and the Mac is not sharing its Internet connection. To use Sidecar over USB, make sure that your
        iPad is set to trust your Mac. Organizations that do not allow the use of iCloud and more specifically Handoff will not
        be able to use Sidecar. Some organizations may not allow the use of mixed ownership for P2P wireless or USB connections
        so that unless the organization controls both the Mac and the iPad connections may not be approved and the use of a
        single Apple ID for distinctly managed devices may be prohibited.
    remediation: |
        Graphical Method: Perform the following steps to set Sidecar to your organization's parameters:
        Open                  System Preferences

        Select                  Sidecar
                              Select the settings that are within your organization's parameters Terminal Method: Run the
        following to enable or disable Sidecar settings:
        $ /usr/bin/sudo /usr/bin/defaults write com.apple.sidecar.display AllowAllDevices -bool <true/false>

        $ /usr/bin/sudo /usr/bin/defaults write com.apple.sidecar.display hasShownPref -bool <true/false>
                     Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                  com.apple.sidecar.display

        The key to include is                  Forced
                              The key must be set to:
        <dict>
        	<key>Forced</key>
        		<array>
        			<dict>
        				<key>mcx_preference_settings</key>
        					<dict>
        						<key>AllowAllDevices</key>
        						<<true/false>/>
        						<key>hasShownPref</key>
        						<<true/false>/>
        					</dict>
        			</dict>
        		</array>
        </dict>
                     Note:
         Using the Terminal and Profile Methods will not display in System Preferences, but will disable the underlying service.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_2.11', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.12":
    title: '2.12 | Audit Touch ID and Wallet  Apple Pay Settings - manual'
    section: 'System Preferences'
    description: |
        Apple has integrated Touch ID with macOS and allows fingerprint use for many common operations. All use of Touch ID
        requires the presence of a password and the use of that password after every reboot, or when more than 48 hours has
        elapsed since the device was last unlocked. Touch ID is a prerequisite for using Apple Pay and Wallet on macOS. Apple
        Pay allows an Apple account holder to enroll their credit cards in Apple Pay and pay enrolled vendors without using the
        physical card or number. Apples service eliminates the requirement to send the credit card number itself to the vendor.
        Apple Pay on a Mac allows the use of credit cards the user has already enrolled and reduces user risk for credit card
        purchases.
    remediation: |
        Graphical Method: Perform the following steps to set Touch ID to your organization's settings:
        Open                  System Preferences

        Select                  Touch ID

        Select the                  Touch ID
         settings match your organization's settings
        Open                  System Preferences

        Select                  Wallet & Apple Pay

        Select the                  Wallet & Apple Pay
         settings match your organization's settings               Impact: Touch ID is more convenient for use with aggressive
        screen lock controls.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_2.12', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.1":
    title: '3.1 | Ensure Security Auditing Is Enabled - manual'
    section: 'Logging and Auditing'
    description: |
        macOSs audit facility,            auditd
        , receives notifications from the kernel when certain system calls, such as            open
        ,            fork
        , and            exit
        , are made. These notifications are captured and written to an audit log.
    remediation: |
        Terminal Method: Perform the following to enable security auditing: Run the following command to load auditd: $
        /usr/bin/sudo /bin/launchctl load -w /System/Library/LaunchDaemons/com.apple.auditd.plist
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.1', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.2":
    title: '3.2 | Ensure Security Auditing Flags For User-Attributable Events Are Configured Per Local Organizational Requirements - manual'
    section: 'Logging and Auditing'
    description: |
        Auditing is the capture and maintenance of information about securityrelated events. Auditable events often depend on
        differing organizational requirements.
    remediation: |
        Terminal Method: Perform the following to set the required Security Auditing Flags:
        Edit the                /etc/security/audit_control
         file and add                -fm
        ,                ad
        ,                -ex
        ,                aa
        ,                -fr
        ,                lo
        , and                -fw
         to                flags
        . You can also substitute                -all
         for                -fm
        ,                -ex
        ,                -fr
        , and                -fw
        .
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_3.2', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.3":
    title: '3.3 | Ensure install.log Is Retained for 365 or More Days and No Maximum Size - manual'
    section: 'Logging and Auditing'
    description: |
        macOS writes information pertaining to systemrelated events to the file            /var/log/install.log
         and has a configurable retention policy for this file. The default logging setting limits the file size of the logs and
        the maximum size for all logs. The default allows for an errant application to fill the log files and does not enforce
        sufficient log retention. The Benchmark recommends a value based on standard use cases. The value should align with
        local requirements within the organization.         The default value has an allmax file limitation, no reference to a
        minimum retention, and a less precise rotation argument. The allmax flag control will remove old log entries based only
        on the size of the log files. Log size can vary widely depending on how verbose installing applications are in their log
        entries. The decision here is to ensure that logs go back a year, and depending on the applications a size restriction
        could compromise the ability to store a full year. While this Benchmark is not scoring for a rotation flag, the default
        rotation is sequential rather than using a timestamp. Auditors may prefer timestamps in order to simply review specific
        dates where event information is desired. Please review the File Rotation section in the man page for more information.
        man asl.conf
         The maximum file size limitation string should be removed allmax An organization appropriate retention should be added
        ttl The rotation should be set with timestamps rotateutc or rotatelocal
    remediation: |
        Terminal Method: Perform the following to ensure that install logs are retained for at least 365 days:
        Edit the                /etc/asl/com.apple.install
         file and add or modify the                ttl
         value to                365
         or greater on the                file
         line. Also, remove the                all_max=
         setting and value from the                file
         line.             Impact: Without log files system maintenance and security forensics cannot be properly performed.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.3', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.4":
    title: '3.4 | Ensure Security Auditing Retention Is Enabled - manual'
    section: 'Logging and Auditing'
    description: |
        The macOS audit capability contains important information to investigate security or operational issues. This resource
        is only completely useful if it is retained long enough to allow technical staff to find the root cause of anomalies in
        the records. Retention can be set to respect both size and longevity. To retain as much as possible under a certain
        size, the recommendation is to use the following expireafter60d OR 5G This recomendation is based on minimum storage for
        review and investigation. When a third party tool is in use to allow remote logging or the store and forwarding of logs,
        this local storage requirement is not required.
    remediation: |
        Terminal Method: Perform the following to set the audit retention length:
        Edit the                /etc/security/audit_control
         file so that                expire-after:
         is at least                60d OR 5G
                           Impact: The recommendation is that at least 60 days or 5 gigabytes of audit records are retained.
        Systems that have very little remaining disk space may have issues retaining sufficient data.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.4', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.5":
    title: '3.5 | Ensure Access to Audit Records Is Controlled - manual'
    section: 'Logging and Auditing'
    description: |
        The audit system on macOS writes important operational and security information that can be both useful for an attacker
        and a place for an attacker to attempt to obfuscate unwanted changes that were recorded. As part of defenseindepth, the
        /etc/security/auditcontrol configuration and the files in /var/audit should be owned only by root with group wheel with
        readonly rights and no other access allowed. macOS ACLs should not be used for these files.
    remediation: |
        Terminal Method: Run the following to commands to set the audit records to the root user and wheel group:
        $ /usr/bin/sudo /usr/sbin/chown -R root:wheel /etc/security/audit_control

        $ /usr/bin/sudo /bin/chmod -R o-rw /etc/security/audit_control

        $ /usr/bin/sudo /usr/sbin/chown -R root:wheel /var/audit/

        $ /usr/bin/sudo /bin/chmod -R o-rw /var/audit/
                     Note:
         It is recommended to do a thorough verification process on why the audit logs have been changed before following the
        remediation steps. If the system has different access controls on the audit logs, and the changes cannot be traced, a
        new install may be prudent. Check for signs of file tampering as well as unapproved OS changes.             Impact: This
        control is only checking the default configuration to ensure that unwanted access to audit records is not available.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.5', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.6":
    title: '3.6 | Ensure Firewall Logging Is Enabled and Configured - manual'
    section: 'Logging and Auditing'
    description: |
        The socketfilter Firewall is what is used when the Firewall is turned on in the Security  Privacy Preference Pane. In
        order to appropriately monitor what access is allowed and denied, logging must be enabled.
        The logging level must be set to detailed to be useful in monitoring connection attempts that the firewall detects.
        Throttled login is not sufficient for examine Firewall connection attempts. In depth log monitoring on macOS may require
        changes to the EnablePrivateData key in SystemLogging.System to ensure more complete logging. Reviewing macOS Unified
        Logs
    remediation: |
        Terminal Method: Run the following command to enable logging of the firewall:
        $ /usr/bin/sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setloggingmode on

        Turning on log mode

        $ /usr/bin/sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setloggingopt detail

        Setting detail log option
                     Note:
         If the Firewall settings are set through a configuration profile, then modifications cannot be done through the command
        line. If attempted, you will receive the message                Firewall settings cannot be modified from command line
        on managed Mac computers.
                           Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                  com.apple.security.firewall

        The key to include is                  EnableFirewall

        The key must be set to                  <true/>

        The key to also include is                  EnableLogging

        The key must be set to                  <true/>

        The key to also include is                  LoggingOption

        The key must be set to                  <string>detail</string>
                              Note:
         Firewall Logging must be enabled with this profile. It can either be set with the Firewall and Stealth Mode (2.5.2.2
        and 2.5.2.3) or as a separate profile. Setting logging with its own profile will not cause a conflict.
        Impact: Detailed logging may result in excessive storage.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.6', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.7":
    title: '3.7 | Audit Software Inventory - manual'
    section: 'Logging and Auditing'
    description: |
        With the introduction of Mac OS X 10.6.6, Apple added a new application, App Store, which resides in the Applications
        directory. This application allows a user with admin privileges and an Apple ID to browse Apples online App Store,
        purchase including nocost purchases, and install new applications, bypassing Enterprise software inventory controls. Any
        admin user can install software in the /Applications directory whether from internet downloads, thumb drives, optical
        media, cloud storage, or even binaries through email. Even standard users can run executables downloaded to their home
        folder by default. The source of the software is not nearly as important as a consistent audit of all installed software
        for patch compliance and appropriateness. A single user desktop where the user, administrator, and the person approving
        software are all the same person probably does not need to audit software inventory to this extent. It is helpful in the
        case of stability problems or malware, however. Scan systems on a monthly basis and determine the number of unauthorized
        pieces of software that are installed. Verify that if an unauthorized piece of software is found one month, it is
        removed from the system the next. Export System Information through the builtin System Information Application or other
        thirdparty tools on an organizationally defined timetable.
    remediation: |
        Delete any unnecessary applications from the system.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_3.7', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "4.1":
    title: '4.1 | Ensure Bonjour Advertising Services Is Disabled - manual'
    section: 'Network Configurations'
    description: |
        Bonjour is an autodiscovery mechanism for TCP/IP devices which enumerate devices and services within a local subnet. DNS
        on macOS is integrated with Bonjour and should not be turned off, but the Bonjour advertising service can be disabled.
    remediation: |
        Terminal Method: Run the following command to disable Bonjour Advertising services: $ /usr/bin/sudo /usr/bin/defaults
        write /Library/Preferences/com.apple.mDNSResponder.plist NoMulticastAdvertisements -bool true
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                  com.apple.mDNSResponder

        The key to include is                  NoMulticastAdvertisements
                              Impact:
        Some applications, like Final Cut Studio and AirPort Base Station management, may not operate properly if the
        mDNSResponder
         is turned off.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "4.2":
    title: '4.2 | Ensure Show Wi-Fi status in Menu Bar Is Enabled'
    section: 'Network Configurations'
    description: |
        The WiFi status in the menu bar indicates if the systems wireless internet capabilities are enabled. If so, the system
        will scan for available wireless networks in order to connect. At the time of this revision, all computers Apple builds
        have wireless network capability, which has not always been the case. This control only pertains to systems that have a
        wireless NIC available. Operating systems running in a virtual environment may not score as expected, either.
    remediation: |
        Graphical Method: Perform the following steps to enable Wi-Fi status in the menu bar:
        Open                  System Preferences

        Select                  Network

        Select                  Wi-Fi

        Set                  Show Wi-Fi status in menu bar
         to enabled               Terminal Method: For each user, run the following command to enable Wi-Fi status in the menu
        bar:
        $ /usr/bin/sudo -u <username> defaults -currentHost write com.apple.controlcenter.plist WiFi -int 18

        $ /usr/bin/sudo -u <username> /usr/bin/defaults write /Users/<username>/Library/Preferences/com.apple.systemuiserver
        menuExtras -array-add "/System/Library/CoreServices/Menu Extras/AirPort.menu"
                     example
        :             $ /usr/bin/sudo -u firstuser /usr/bin/defaults write
        /Users/firstuser/Library/Preferences/com.apple.systemuiserver.plist menuExtras -array-add
        "/System/Library/CoreServices/Menu Extras/AirPort.menu"
         Note:
         If the remediation is run multiple times, multiple instances of the Wi-Fi status will appear after rebooting the
        system. Command-click and drag the unwanted icons off the menu bar             Impact: The user of the system should
        have a quick check on their wireless network status available.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_4.2', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "4.3":
    title: '4.3 | Ensure HTTP Server Is Disabled - manual'
    section: 'Network Configurations'
    description: |
        macOS used to have a graphical frontend to the embedded Apache web server in the Operating System. Personal web sharing
        could be enabled to allow someone on another computer to download files or information from the users computer. Personal
        web sharing from a user endpoint has long been considered questionable, and Apple has removed that capability from the
        GUI. Apache, however, is still part of the Operating System and can be easily turned on to share files and provide
        remote connectivity to an enduser computer. Web sharing should only be done through hardened web servers and appropriate
        cloud services.
    remediation: |
        Terminal Method: Run the following command to disable the HTTP server services: $ sudo /usr/bin/sudo /bin/launchctl
        unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist
         Impact: The web server is both a point of attack for the system and a means for unauthorized file transfers.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_4.3', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "4.4":
    title: '4.4 | Ensure NFS Server Is Disabled - manual'
    section: 'Network Configurations'
    description: |
        macOS can act as an NFS fileserver. NFS sharing could be enabled to allow someone on another computer to mount shares
        and gain access to information from the users computer. File sharing from a user endpoint has long been considered
        questionable, and Apple has removed that capability from the GUI. NFSD is still part of the Operating System and can be
        easily turned on to export shares and provide remote connectivity to an enduser computer. The etc/exports file contains
        the list of NFS shared directories. If the file exists, it is likely that NFS sharing has been enabled in the past or
        may be available periodically. As an additional check, the audit verifies that there is no /etc/exports file.
    remediation: |
        Terminal Method: Run the following command to disable the nfsd fileserver services: $ /usr/bin/sudo /bin/launchctl
        disable system/com.apple.nfsd
         Remove the exported Directory listing. $ /usr/bin/sudo /bin/rm /etc/exports
         Impact: The nfs server is both a point of attack for the system and a means for unauthorized file transfers.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_4.4', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.1.1":
    title: '5.1.1 | Ensure Home Folders Are Secure - manual'
    section: 'File System Permissions and Access Controls'
    description: |
        By default, macOS allows all valid users into the top level of every other users home folder and restricts access to the
        Apple default folders within. Another user on the same system can see you have a Documents folder but cannot see inside
        it. This configuration does work for personal file sharing but can expose user files to standard accounts on the system.
        The best parallel for Enterprise environments is that everyone who has a Dropbox account can see everything that is at
        the top level but cant see your pictures. Similarly with macOS, users can see into every new Directory that is created
        because of the default permissions. Home folders should be restricted to access only by the user. Sharing should be used
        on dedicated servers or cloud instances that are managing access controls. Some environments may encounter problems if
        execute rights are removed as well as read and write. Either no access or execute only for group or others is
        acceptable.
    remediation: |
        Terminal Method: For each user, run the following command to secure all home folders: $ /usr/bin/sudo /bin/chmod -R og-
        rwx /Users/<username>
         Alternately, run the following command if there needs to be executable access for a home folder: $ /usr/bin/sudo
        /bin/chmod -R og-rw /Users/<username>
         example
        :
        $ /usr/bin/sudo /bin/chmod -R og-rw /Users/thirduser/

        $ /usr/bin/sudo /bin/chmod -R og-rwx /Users/fourthuser/

        # /bin/ls -l /Users/

        total 0
        drwxr-xr-x+ 12 Guest       _guest  384 24 Jul 13:42 Guest
        drwxrwxrwt   4 root        wheel   128 22 Jul 11:00 Shared
        drwx--x--x+ 18 firstuser   staff   576 10 Aug 14:36 firstuser
        drwx--x--x+ 15 seconduser  staff   480 10 Aug 09:16 seconduser
        drwx--x--x+ 11 thirduser   staff   352 10 Aug 14:53 thirduser
        drwx------+ 11 fourthuser  staff   352 10 Aug 14:53 fourthuser
                       Impact: If implemented, users will not be able to use the "Public" folders in other users' home folders.
        "Public" folders with appropriate permissions would need to be set up in the /Shared folder.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.1.1', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.1.2":
    title: '5.1.2 | Ensure System Integrity Protection Status SIP Is Enabled - manual'
    section: 'File System Permissions and Access Controls'
    description: |
        System Integrity Protection is a security feature introduced in OS X 10.11 El Capitan. System Integrity Protection
        restricts access to System domain locations and restricts runtime attachment to system processes. Any attempt to inspect
        or attach to a system process will fail. Kernel Extensions are now restricted to /Library/Extensions and are required to
        be signed with a Developer ID.
    remediation: |
        Terminal Method: Perform the following steps to enable System Integrity Protection:
        Reboot into the                    Recovery Partition
         (reboot and hold down                    Command (⌘)
         +                    R
        )
        Select                    Utilities

        Select                    Terminal
                                 Run the following command:
        $ /usr/bin/sudo /usr/bin/csrutil enable

        Successfully enabled System Integrity Protection. Please restart the machine for the changes to take effect.
                       Reboot the computer Note:
         If SIP has been disabled, the admin should research why it was disabled. You might also want to assume that the
        operating system has been compromised. If you believe that, back up any files, and do a clean install to a known good
        Operating System               It might be a better option to erase the Mac and reinstall the operating system. That is
        at your discretion. Note:
         You cannot enable System Integrity Protection from the booted operating system. If the remediation is attempted in the
        booted OS and not the Recovery Partition the output will give the error                  csrutil: failed to modify
        system integrity configuration. This tool needs to be executed from the Recovery OS.
                              Impact: System binaries and processes could become compromised.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.1.2', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.1.3":
    title: '5.1.3 | Ensure Apple Mobile File Integrity AMFI Is Enabled - manual'
    section: 'File System Permissions and Access Controls'
    description: |
        Apple Mobile File Integrity AMFI was first released in macOS 10.12. The daemon and service block attempts to run
        unsigned code. AMFI uses lanchd, code signatures, certificates, entitlements, and provisioning profiles to create a
        filtered entitlement dictionary for an app. AMFI is the macOS kernel module that enforces codesigning and library
        validation.
    remediation: |
        Terminal Method: Run the following command to enable the Apple Mobile File Integrity service: $ /usr/bin/sudo
        /usr/sbin/nvram boot-args=""
         Impact: Applications could be compromised with malicious code.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.1.3', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.1.4":
    title: '5.1.4 | Ensure Appropriate Permissions Are Enabled for System Wide Applications - manual'
    section: 'File System Permissions and Access Controls'
    description: |
        Applications in the System Applications Directory /Applications should be worldexecutable since that is their reason to
        be on the system. They should not be worldwritable and allow any process or user to alter them for other processes or
        users to then execute modified versions.
    remediation: |
        Terminal Method: Run the following command to change the permissions for each application that does not meet the
        requirements:
        $ /usr/bin/sudo IFS=$'\n'
        for apps in $( /usr/bin/find /Applications -iname "*\.app" -type d -perm -2 ); do
          /bin/chmod -R o-w "$apps"
        done
                       Note:
         Global changes should not be performed where mission-critical applications are part of the improperly permissioned
        applications.               Impact: Applications changed will no longer be world-writable. Depending on the environment,
        there will be different risk tolerances on each non-conforming application. Global changes should not be performed where
        mission-critical applications are misconfigured.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.1.4', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.1.5":
    title: '5.1.5 | Ensure No World Writable Files Exist in the System Folder - manual'
    section: 'File System Permissions and Access Controls'
    description: |
        Software sometimes insists on being installed in the              /System/Volumes/Data/System
         Directory and has inappropriate worldwritable permissions.           Macs with writable files in System should be
        investigated forensically. A file with open writable permissions is a sign of at best a rogue application.  It could
        also be a sign of a computer compromise and a persistent presence on the system.
    remediation: |
        Terminal Method: Run the following command to set permissions so that folders are not world-writable in the /System
        folder:
        $ /usr/bin/sudo IFS=$'\n'
        for sysPermissions in $( /usr/bin/find /System/Volumes/Data/System -type d -perm -2 | /usr/bin/grep -v "Drop Box" ); do
          /bin/chmod -R o-w "$sysPermissions"
        done
                       Impact: Changing file permissions could disrupt the use of applications that rely on files in the System
        Folder with vulnerable permissions.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.1.5', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.1.6":
    title: '5.1.6 | Ensure No World Writable Files Exist in the Library Folder - manual'
    section: 'File System Permissions and Access Controls'
    description: |
        Software sometimes insists on being installed in the              /System/Volumes/Data/Library Directory
         and has inappropriate worldwritable permissions.
    remediation: |
        Terminal Method:
        Run the following command to set permissions so that folders are not world-writable in the
        /System/Volumes/Data/Library
         folder:
        $ /usr/bin/sudo IFS=$'\n'
        for libPermissions in $( /usr/bin/find /System/Volumes/Data/Library -type d -perm -2 | /usr/bin/grep -v Caches |
        /usr/bin/grep -v /Preferences/Audio/Data ); do
          /bin/chmod -R o-w "$libPermissions"
        done
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_5.1.6', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.2.1":
    title: '5.2.1 | Ensure Password Account Lockout Threshold Is Configured - manual'
    section: 'Password Management'
    description: |
        The account lockout threshold specifies the amount of times a user can enter an incorrect password before a lockout will
        occur. Ensure that a lockout threshold is part of the password policy on the computer.
    remediation: |
        Terminal Method: Run the following command to set the maximum number of failed login attempts to less than or equal to
        5: $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy "maxFailedLoginAttempts=<value≤5>"
         Note:
         When the account lockout threshold is set with                  pwpolicy
        , it will also set a reset value to                  policyAttributeMinutesUntilFailedAuthenticationReset
         that defaults to 1 minute. You can change this value with the command:               $ /usr/bin/sudo /usr/bin/pwpolicy
        -n /Local/Default -setglobalpolicy "policyAttributeMinutesUntilFailedAuthenticationReset=<value in minutes>"
         example
        :
        $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy "maxFailedLoginAttempts=5"

        /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy
        "policyAttributeMinutesUntilFailedAuthenticationReset=10"
                       Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.mobiledevice.passwordpolicy

        The key to include is                    maxFailedAttempts

        The key must be set to                    <integer><value≤5></integer>
                                 Note:
         When setting the lockout threshold with a mobile configuration profile there is no default reset to the lockout. To set
        the reset value use the key                  autoEnableInSeconds
         and set the key to                  <integer><value in seconds></integer>
        .               Note:
         The profile method is the preferred method for setting password policy since                  -setglobalpolicy
         in                  pwpolicy
         is deprecated and will likely be removed in a future macOS release.               Impact: The number of incorrect log
        on attempts should be reasonably small to minimize the possibility of a successful password attack, while allowing for
        honest errors made during a normal user log on. The locked account will auto-unlock after a few minutes when bad
        password attempts stop. The computer will accept the still-valid password if remembered or recovered.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.1', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.2.2":
    title: '5.2.2 | Ensure Password Minimum Length Is Configured - manual'
    section: 'Password Management'
    description: |
        A minimum password length is the fewest number of characters a password can contain to meet a systems requirements.
        Ensure that a minimum of a 15character password is part of the password policy on the computer. Where the
        confidentiality of encrypted information in FileVault is more of a concern, requiring a longer password or passphrase
        may be sufficient rather than imposing additional complexity requirements that may be selfdefeating.
    remediation: |
        Terminal Method: Run the following command to set the password length to greater than or equal to 15: $ /usr/bin/sudo
        /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy "minChars=<value≥15>"
         example
        :               $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy "minChars=15"
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.mobiledevice.passwordpolicy

        The key to include is                    minLength

        The key must be set to                    <integer><value≥15></integer>
                                 Note:
         The profile method is the preferred method for setting password policy since                  -setglobalpolicy
         in                  pwpolicy
         is deprecated and will likely be removed in a future macOS release.               Impact: Short passwords can be easily
        attacked.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.2', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.2.3":
    title: '5.2.3 | Ensure Complex Password Must Contain Alphabetic Characters Is Configured - manual'
    section: 'Password Management'
    description: |
        Complex passwords contain one character from each of the following classes English uppercase letters, English lowercase
        letters, Westernized Arabic numerals, and nonalphanumeric characters. Ensure that an Alphabetic character is part of the
        password policy on the computer.
    remediation: |
        Terminal Method: Run the following command to set the that passwords must contain at least one letter: $ /usr/bin/sudo
        /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy -setaccountpolicies "requiresAlpha=<value≥1>"
         example
        :               $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy "requiresAlpha=1"
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.mobiledevice.passwordpolicy

        The key to include is                    requireAlphanumeric

        The key must be set to                    <true/>
                                 Note:
         This profile sets a requirement of both an alphabetical and a numeric character.               Note:
         The profile method is the preferred method for setting password policy since                  -setglobalpolicy
         in                  pwpolicy
         is deprecated and will likely be removed in a future macOS release.               Impact: Password policy should be in
        effect to reduce the risk of exposed services being compromised easily through dictionary attacks or other social
        engineering attempts.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_5.2.3', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.2.4":
    title: '5.2.4 | Ensure Complex Password Must Contain Numeric Character Is Configured - manual'
    section: 'Password Management'
    description: |
        Complex passwords contain one character from each of the following classes English uppercase letters, English lowercase
        letters, Westernized Arabic numerals, and nonalphanumeric characters. Ensure that a number or numeric value is part of
        the password policy on the computer.
    remediation: |
        Terminal Method: Run the following command to set passwords to require at least one number: $ /usr/bin/sudo
        /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy -setaccountpolicies "requiresNumeric=<value≥1>"
         example
        :               $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy "requiresNumeric=2"
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.mobiledevice.passwordpolicy

        The key to include is                    requireAlphanumeric

        The key must be set to                    <true/>
                                 Note:
         This profile sets a requirement of both an alphabetical and a numeric character.               Note:
         The profile method is the preferred method for setting password policy since                  -setglobalpolicy
         in                  pwpolicy
         is deprecated and will likely be removed in a future macOS release.               Impact: Password policy should be in
        effect to reduce the risk of exposed services being compromised easily through dictionary attacks or other social
        engineering attempts.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_5.2.4', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.2.5":
    title: '5.2.5 | Ensure Complex Password Must Contain Special Character Is Configured - manual'
    section: 'Password Management'
    description: |
        Complex passwords contain one character from each of the following classes English uppercase letters, English lowercase
        letters, Westernized Arabic numerals, and nonalphanumeric characters. Ensure that a special character is part of the
        password policy on the computer.
    remediation: |
        Terminal Method: Run the following command to set passwords to require at least one special character: $ /usr/bin/sudo
        /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy -setaccountpolicies "requiresSymbol=<value≥1>"
         example
        :               $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy "requiresSymbol=1"
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.mobiledevice.passwordpolicy

        The key to include is                    minComplexChars

        The key must be set to                    <integer><value≥1></integer>
                                 Note:
         The profile method is the preferred method for setting password policy since                  -setglobalpolicy
         in                  pwpolicy
         is deprecated and will likely be removed in a future macOS release.               Impact: Password policy should be in
        effect to reduce the risk of exposed services being compromised easily through dictionary attacks or other social
        engineering attempts.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_5.2.5', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.2.6":
    title: '5.2.6 | Ensure Complex Password Must Contain Uppercase and Lowercase Characters Is Configured - manual'
    section: 'Password Management'
    description: |
        Complex passwords contain one character from each of the following classes English uppercase letters, English lowercase
        letters, Westernized Arabic numerals, and nonalphanumeric characters. Ensure that both uppercase and lowercase letters
        are part of the password policy on the computer.
    remediation: |
        Terminal Method: Run the following command to set passwords to require at upper and lower case letter: $ /usr/bin/sudo
        /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy "requiresMixedCase=<value≥1>"
         example
        :               $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy "requiresMixedCase=1"
         Impact: Password policy should be in effect to reduce the risk of exposed services being compromised easily through
        dictionary attacks or other social engineering attempts.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_5.2.6', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.2.7":
    title: '5.2.7 | Ensure Password Age Is Configured - manual'
    section: 'Password Management'
    description: |
        Over time, passwords can be captured by third parties through mistakes, phishing attacks, thirdparty breaches, or merely
        bruteforce attacks. To reduce the risk of exposure and to decrease the incentives of password reuse passwords that are
        not forced to be changed periodically generally are not ever changed, users should reset passwords periodically.
        This control uses 365 days as the acceptable value. Some organizations may be more or less restrictive. This control
        mainly exists to mitigate against password reuse of the macOS account password in other realms that may be more prone to
        compromise. Attackers take advantage of exposed information to attack other accounts.
    remediation: |
        Terminal Method: Run the following command to require that passwords expire after at most 365 days: $ /usr/bin/sudo
        /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy "maxMinutesUntilChangePassword=<value≤525600>"
         example
        :               $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy
        "maxMinutesUntilChangePassword=43200"
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.mobiledevice.passwordpolicy

        The key to include is                    maxPINAgeInDays

        The key must be set to                    <integer><value≥365></integer>
                                 Note:
         The profile method is the preferred method for setting password policy since                  -setglobalpolicy
         in                  pwpolicy
         is deprecated and will likely be removed in a future macOS release.               Impact: Required password changes
        will lead to some locked computers requiring admin assistance.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.7', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.2.8":
    title: '5.2.8 | Ensure Password History Is Configured - manual'
    section: 'Password Management'
    description: |
        Over time, passwords can be captured by third parties through mistakes, phishing attacks, thirdparty breaches, or merely
        bruteforce attacks. To reduce the risk of exposure and to decrease the incentives of password reuse passwords that are
        not forced to be changed periodically generally are not ever changed, users must reset passwords periodically. This
        control ensures that previous passwords are not reused immediately by keeping a history of previous password hashes.
        Ensure that password history checks are part of the password policy on the computer. This control checks whether a new
        password is different than the previous 15.
        The latest NIST guidance based on exploit research referenced in this section details how one of the greatest risks is
        password exposure rather than password cracking. Passwords should be changed to a new unique value whenever a password
        might have been exposed to anyone other than the account holder. Attackers have maintained persistent control based on
        predictable password change patterns and substantially different patterns should be used in case of a leak.
    remediation: |
        Terminal Method: Run the following command to require that the password must to be different from at least the last 15
        passwords: $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy "usingHistory=<value≥15>"
         example
        :               $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy "usingHistory=15"
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.mobiledevice.passwordpolicy

        The key to include is                    pinHistory

        The key must be set to                    <integer><value≥15></integer>
                                 Note:
         The profile method is the preferred method for setting password policy since                  -setglobalpolicy
         in                  pwpolicy
         is deprecated and will likely be removed in a future macOS release.               Impact: Required password changes
        will lead to some locked computers requiring admin assistance.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.8', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.3":
    title: '5.3 | Ensure the Sudo Timeout Period Is Set to Zero - manual'
    section: 'System Access, Authentication and Authorization'
    description: |
        The sudo command allows the user to run programs as the root user. Working as the root user allows the user an extremely
        high level of configurability within the system. This control, along with the control to use a separate timestamp for
        each tty, limits the window where an unauthorized user, process, or attacker could utilize legitimate credentials that
        are valid for longer than required.
    remediation: |
        Terminal Method: Run the following command to edit the sudo settings: $ /usr/bin/sudo /usr/sbin/visudo -f
        /etc/sudoers.d/<configuration file name>
         example: $ /usr/bin/sudo /usr/sbin/visudo -f /etc/sudoers.d/10_cissudoconfiguration Note:
         Unlike other Unix and/or Linux distros, macOS will ignore configuration files in the sudoers.d folder that contain a
        .
         so do not add a file extension to the configuration file.
        Add the line                Defaults timestamp_timeout=0
         to the configuration file.             If /etc/sudoers.d/ is not owned by root or in the wheel group, run the following
        to change ownership and group: $ /usr/bin/sudo /usr/sbin/chown -R root:wheel /etc/security/sudoers.d/
         Impact: This control has a serious impact where users often have to use sudo. It is even more of an impact where users
        have to use sudo multiple times in quick succession as part of normal work processes. Organizations with that common use
        case will likely find this control too onerous and are better to accept the risk of not requiring a 0 grace period. In
        some ways the use of sudo -s, which is undesirable, is better than a long grace period since that use does change the
        hash to show that it is a root shell rather than a normal shell where sudo commands will be implemented without a
        password.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.3', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.4":
    title: '5.4 | Ensure a Separate Timestamp Is Enabled for Each Usertty Combo - manual'
    section: 'System Access, Authentication and Authorization'
    description: |
        Using tty tickets ensures that a user must enter the sudo password in each Terminal session. With sudo versions 1.8 and
        higher, introduced in 10.12, the default value is to have tty tickets for each interface so that root access is limited
        to a specific terminal. The default configuration can be overwritten or not configured correctly on earlier versions of
        macOS.
    remediation: |
        Terminal Method: Run the following command to edit the sudo settings: $ /usr/bin/sudo /usr/sbin/visudo -f
        /etc/sudoers.d/<configuration file name>
         example: $ /usr/bin/sudo /usr/sbin/visudo -f /etc/sudoers.d/10_cissudoconfiguration Note:
         Unlike other Unix and/or Linux distros, macOS will ignore configuration files in the sudoers.d folder that contain a
        .
         so do not add a file extension to the configuration file.
        Add the line                Defaults timestamp_type=tty
         to the configuration file.             Note:
         The                Defaults timestamp_type=tty
         line can be added to an existing configuration file or a new one. That will depend on your organization's preference
        and works either way.             Impact: This control should have no user impact. Developers or installers may have
        issues if background processes are spawned with different interfaces than where sudo was executed.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.4', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.5":
    title: '5.5 | Ensure the root Account Is Disabled - manual'
    section: 'System Access, Authentication and Authorization'
    description: |
        The root account is a superuser account that has access privileges to perform any actions and read/write to any file on
        the computer. With some versions of Linux, the system administrator may commonly use the root account to perform
        administrative functions.
    remediation: |
        Graphical Method: Perform the following steps to ensure that the root user is disabled:
        Open                  /System/Library/CoreServices/Applications/Directory Utility
                              Click the lock icon to unlock the service
        Click                  Edit
         in the                  menu bar

        Click                  Disable Root User
                              Terminal Method: Run the following command to disable the root user:
        $ /usr/bin/sudo /usr/sbin/dsenableroot -d

        username = root
        user password:
                     Impact: Some legacy POSIX software might expect an available root account.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.5', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.6":
    title: '5.6 | Ensure Automatic Login Is Disabled - manual'
    section: 'System Access, Authentication and Authorization'
    description: |
        The automatic login feature saves a users system access credentials and bypasses the login screen. Instead, the system
        automatically loads to the users desktop screen.
    remediation: |
        Graphical Method: Perform the following steps to set automatic login to off:
        Open                  System Preferences

        Select                  Users & Groups
                              Click the lock to authenticate
        Select                  Login Options

        Select                  Automatic login
         and set it to                  Off
                              Terminal Method: Run the following command to disable automatic login: $ /usr/bin/sudo
        /usr/bin/defaults delete /Library/Preferences/com.apple.loginwindow autoLoginUser
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                  com.apple.loginwindow

        The key to include is                  com.apple.login.mcx.DisableAutoLoginClient

        The key must be set to                  <true/>
                              Note:
         If both the profile is enabled and a user is set to autologin, the profile will take precedent. In this case, the
        graphical or terminal remediation method should also be applied in case the profile is ever removed.             Impact:
        If automatic login is not disabled, an unauthorized user could gain access to the system without supplying any
        credentials.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.6', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.7":
    title: '5.7 | Ensure an Administrator Account Cannot Login to Another Users Active and Locked Session - manual'
    section: 'System Access, Authentication and Authorization'
    description: |
        macOS has a privilege that can be granted to any user that will allow that user to unlock active users sessions.
    remediation: |
        Terminal Method: Run the following command to disable a user logging into another user's active and/or locked session:
        $ /usr/bin/sudo /usr/bin/security authorizationdb write system.login.screensaver use-login-window-ui

        YES (0)
                     Impact: While Fast user switching is a workaround for some lab environments, especially where there is even
        less of an expectation of privacy, this setting change may impact some maintenance workflows.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.7', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.8":
    title: '5.8 | Ensure a Login Window Banner Exists - manual'
    section: 'System Access, Authentication and Authorization'
    description: |
        A Login window banner warning informs the user that the system is reserved for authorized use only. It enforces an
        acknowledgment by the user that they have been informed of the use policy in the banner if required. The system
        recognizes either the            .txt
         and the            .rtf
         formats.
    remediation: |
        Terminal Method: Run the following commands to create or edit the login window text and set the proper permissions:
        Edit (or create) a                PolicyBanner.txt
         or                PolicyBanner.rtf
         file, in the                /Library/Security/
         folder, to include the required login window banner text.             Perform the following to set permissions on the
        policy banner file:
        $ /usr/bin/sudo /usr/sbin/chown o+r /Library/Security/PolicyBanner.txt

        $ /usr/bin/sudo /usr/sbin/chown o+r /Library/Security/PolicyBanner.rtf
                     Note:
         If your organization uses an                .rtfd
         file to set the policy banner, run                $ /usr/bin/sudo /usr/sbin/chown -R o+rx
        /Library/Security/PolicyBanner.rtfd
         to update the permissions.             Impact: Users will have to click on the window with the Login text before
        logging into the computer.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_5.8', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.9":
    title: '5.9 | Ensure Users Accounts Do Not Have a Password Hint - manual'
    section: 'System Access, Authentication and Authorization'
    description: |
        Password hints help the user recall their passwords for various systems and/or accounts. In most cases, password hints
        are simple and closely related to the users password.
    remediation: |
        Graphical Method: Perform the following steps to remove a user's password hint:
        Open                  System Preferences

        Select                  Users & Groups
                              Select the Current User
        Select                  Change Password
                              Change the password and ensure that no text is entered in the Password hint box Note:
         This will only change the currently logged-in user's password, and not any others that are not compliant on the Mac.
        Use the terminal method if multiple users are not in compliance.             Terminal Method: Run the following command
        to remove a user's password hint: $ /usr/bin/sudo /usr/bin/dscl . -list /Users hint . -delete /Users/<username> hint
         example
        :
        $ /usr/bin/sudo /usr/bin/dscl . -list /Users hint . -delete /Users/firstuser hint

        $ /usr/bin/sudo /usr/bin/dscl . -list /Users hint . -delete /Users/seconduser hint
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.9', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.10":
    title: '5.10 | Ensure Secure Keyboard Entry Terminal.app Is Enabled - manual'
    section: 'System Access, Authentication and Authorization'
    description: |
        Secure Keyboard Entry prevents other applications on the system and/or network from detecting and recording what is
        typed into Terminal. Unauthorized applications and malicious code could intercept keystrokes entered in the Terminal.
    remediation: |
        Graphical Method: Perform the following steps to enable secure keyboard entries in Terminal:
        Open the                  Applications
         folder
        Open the                  Utilities
         folder
        Open                  Terminal

        Select                  Terminal
         in the Menu Bar
        Set                  Secure Keyboard Entry
         to enabled               Terminal Method: $ /usr/bin/sudo -u <username> /usr/bin/defaults write -app Terminal
        SecureKeyboardEntry -bool true
         example
        :             $ /usr/bin/sudo -u firstuser /usr/bin/defaults write -app Terminal SecureKeyboardEntry -bool true
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                  com.apple.Terminal

        The key to include is                  SecureKeyboardEntry

        The key must be set to                  <true/>
                              Note:
         Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred
        method. It is always better to set system-wide than per user.             Impact: Enabling this in Terminal would
        prevent an application that is otherwise validly intercepting keyboard input from intercepting that input in
        Terminal.app. This could impact productivity tools.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.10', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.1.1":
    title: '6.1.1 | Ensure Login Window Displays as Name and Password Is Enabled - manual'
    section: 'Accounts Preferences Action Items'
    description: |
        The login window prompts a user for his/her credentials, verifies their authorization level, and then allows or denies
        the user access to the system.
    remediation: |
        Graphical Method: Perform the following steps to ensure the login window display name and password:
        Open                    System Preferences

        Select                    Users and Groups

        Select                    Login Options

        Set                    Display login window as:
         to                    Name and password
                                 Terminal Method: Run the following command to enable the login window to display name and
        password: $ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.loginwindow SHOWFULLNAME -bool true
         Note:
         The GUI will not display the updated setting until the current user(s) logs out.               Profile Method: Create
        or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.loginwindow

        The key to include is                    SHOWFULLNAME

        The key must be set to                    <true/>
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.1.1', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.1.2":
    title: '6.1.2 | Ensure Show Password Hints Is Disabled - manual'
    section: 'Accounts Preferences Action Items'
    description: |
        Password hints are usercreated text displayed when an incorrect password is used for an account.
    remediation: |
        Graphical Method: Perform the following steps to disable password hints from being shown:
        Open                    System Preferences

        Select                    Users & Groups

        Select                    Login Options

        Set                    Show password hints
         to disabled                 Terminal Method: Run the following command to disable password hints: $ /usr/bin/sudo
        /usr/bin/defaults write /Library/Preferences/com.apple.loginwindow RetriesUntilHint -int 0
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.loginwindow

        The key to include is                    RetriesUntilHint

        The key must be set to                    <integer>0</integer>
                                 Impact: The user can set the hint to any value, including the password itself or clues that
        allow trivial social engineering attacks.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.1.2', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.1.3":
    title: '6.1.3 | Ensure Guest Account Is Disabled - manual'
    section: 'Accounts Preferences Action Items'
    description: |
        The guest account allows users access to the system without having to create an account or password. Guest users are
        unable to make setting changes and cannot remotely login to the system. All files, caches, and passwords created by the
        guest user are deleted upon logging out.
    remediation: |
        Graphical Method: Perform the following steps to disable guest account availability:
        Open                    System Preferences

        Select                    Users & Groups

        Select                    Guest User

        Set                    Allow guests to log in to this computer
         to disabled                 Terminal Method: Run the following command to disable the guest account: $ /usr/bin/sudo
        /usr/bin/defaults write /Library/Preferences/com.apple.loginwindow GuestEnabled -bool false
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.MCX

        The key to include is                    DisableGuestAccount

        The key must be set to                    <true/>
                                 Impact: A guest user can use that access to find out additional information about the system
        and might be able to use privilege escalation vulnerabilities to establish greater access.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.1.3', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.1.4":
    title: '6.1.4 | Ensure Guest Access to Shared Folders Is Disabled - manual'
    section: 'Accounts Preferences Action Items'
    description: |
        Allowing guests to connect to shared folders enables users to access selected shared folders and their contents from
        different computers on a network.
    remediation: |
        Graphical Method: Perform the following steps to no longer allow guest user access to shared folders: Open `System
        Preferences Select `Users & Groups Select `Guest User
        Set                    Allow guest users to connect to shared folders
         to disabled                 Terminal Method: Run the following commands to verify that shared folders are not
        accessible to guest users: $ /usr/bin/sudo /usr/sbin/sysadminctl -smbGuestAccess off
         Impact: Unauthorized users could access shared files on the system.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.1.4', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.1.5":
    title: '6.1.5 | Ensure the Guest Home Folder Does Not Exist - manual'
    section: 'Accounts Preferences Action Items'
    description: |
        In the previous two controls, the guest account login has been disabled and sharing to guests has been disabled, as
        well. There is no need for the legacy Guest home folder to remain in the file system. When normal user accounts are
        removed, you have the option to archive it, leave it in place, or delete. In the case of the guest folder, the folder
        remains in place without a GUI option to remove it. If at some point in the future a Guest account is needed, it will be
        recreated. The presence of the Guest home folder can cause automated audits to fail when looking for compliant settings
        within all User folders, as well. Rather than ignoring the folders continued existence, it is best removed.
    remediation: |
        Terminal Method: Run the following command to remove the Guest user home folder: $ /usr/bin/sudo /bin/rm -R /Users/Guest
         Impact: The Guest account should not be necessary after it is disabled, and it will be automatically re-created if the
        Guest account is re-enabled
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.1.5', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.2":
    title: '6.2 | Ensure Show All Filename Extensions Setting is Enabled - manual'
    section: 'User Accounts and Environment'
    description: |
        A filename extension is a suffix added to a base filename that indicates the base filenames file format.
    remediation: |
        Graphical Method: Perform the following steps to enable secure keyboard entries in Terminal:
        Open the                  Applications
         folder
        Open the                  Utilities
         folder
        Open                  Terminal

        Select                  Terminal
         in the Menu Bar
        Set                  Secure Keyboard Entry
         to enabled               Terminal Method: $ /usr/bin/sudo -u <username> /usr/bin/defaults write -app Terminal
        SecureKeyboardEntry -bool true
         example
        :             $ /usr/bin/sudo -u firstuser /usr/bin/defaults write -app Terminal SecureKeyboardEntry -bool true
         Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                  com.apple.Terminal

        The key to include is                  SecureKeyboardEntry

        The key must be set to                  <true/>
                              Note:
         Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred
        method. It is always better to set system-wide than per user.             Impact: The user of the system can open files
        of unknown or unexpected filetypes if the extension is not visible.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.2', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.1.1":
    title: '7.1.1 | Ensure Protect Mail Activity in Mail Is Enabled - manual'
    section: 'Mail'
    description: |
        Apple provides privacy protection that should be enabled for the mail app on macOS to reduce information collection from
        a user that receives email.
    remediation: |
        Graphical Method: Perform the following steps to enabled protect mail activity:
        Open                    Mail

        Select                    Mail
         in the                    menu bar

        Select                    Preferences...

        Select                    Privacy

        Set                    Protect Mail Activity
         to enabled                 Impact: Some remote content may be access controlled and refuse to download with this
        setting enabled.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_7.1.1', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.2.1":
    title: '7.2.1 | Ensure Automatic Opening of Safe Files in Safari Is Disabled - manual'
    section: 'Safari'
    description: |
        Safari will automatically run or execute what it considers safe files. This can include installers and other files that
        execute on the operating system. Safari evaluates file safety by using a list of filetypes maintained by Apple. The list
        of files include text, image, video and archive formats that would be run in the context of the OS rather than the
        browser.
    remediation: |
        Graphical Method: Perform the following steps to set safe files to not open after downloading in Safari:
        Open                    Safari

        Select                    Safari
         from the                    menu bar

        Select                    Preferences

        Select                    General

        Set                    Open "safe" files after downloading
         to disabled                 Terminal Method: Run the following command to disable safe files from not opening when
        downloaded in Safari: $ /usr/bin/sudo -u <username> /usr/bin/defaults write
        /Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari AutoOpenSafeDownloads
        -bool false
         example
        :               $ /usr/bin/sudo -u firstuser /usr/bin/defaults write
        /Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari AutoOpenSafeDownloads
        -bool false
         Note:
         To run the Terminal commands, Terminal must be granted Full Disk Access in the Security & Privacy pane in System
        Preferences.               Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.Safari

        The key to include is                    AutoOpenSafeDownloads

        The key must be set to:                    <false/>
                                 Note:
         Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred
        method. It is always better to set system-wide than per user.               Impact: Apple considers many files that the
        operating system itself auto-executes as "safe files." Many of these files could be malicious and could execute locally
        without the user even knowing that a file of a specific type had been downloaded.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.2.1', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.2.2":
    title: '7.2.2 | Audit History and Remove History Items - manual'
    section: 'Safari'
    description: |
        Organizational management of user web browsing history is a challenge effected by multiple facets. Organizations should
        decide whether to manage browser history and how much history should be maintained.
    remediation: |
        Graphical Method: Perform the following steps to set Safari to remove history after a set amount of days:
        Open                    Safari

        Select                    Safari
         from the                    menu bar

        Select                    Preferences

        Select                    General

        Set                    Remove history items
         to your organization's requirements                 Terminal Method: Run the following command to set when Safari will
        remove history items: $ /usr/bin/sudo -u <username> /usr/bin/defaults write
        /Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari HistoryAgeInDaysLimit
        -int <1,7,14,31,365,36500>
         example
        :
        $ /usr/bin/sudo -u firstuser /usr/bin/defaults write
        /Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari HistoryAgeInDaysLimit
        -int 36500

        $ /usr/bin/sudo -u seconduser /usr/bin/defaults write
        /Users/seconduser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari HistoryAgeInDaysLimit
        -int 365

        $ /usr/bin/sudo -u thirduser /usr/bin/defaults write
        /Users/thirduser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari HistoryAgeInDaysLimit
        -int 31

        $ /usr/bin/sudo -u fourthuser /usr/bin/defaults write
        /Users/fourthuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari HistoryAgeInDaysLimit
        -int 14

        $ /usr/bin/sudo -u fifthuser /usr/bin/defaults write
        /Users/fifthuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari HistoryAgeInDaysLimit
        -int 7

        $ /usr/bin/sudo -u sixthuser /usr/bin/defaults write
        /Users/sixthuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari HistoryAgeInDaysLimit
        -int 1
                       Note:
         Setting the plist key to a value that is not represented by the GUI could cause issues.               Note:
         To run the Terminal commands, Terminal must be granted Full Disk Access in the Security & Privacy pane in System
        Preferences.               Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.Safari

        The key to include is                    HistoryAgeInDaysLimit

        The key must be set to:                    <integer><1,7,14,31,365,36500></integer>
                                 Note:
         Setting the plist key to a value that is not represented by the GUI could cause issues.               Note:
         Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred
        method. It is always better to set system-wide than per user.               Impact: If old browsing history is not
        available it will not be available to authorized or unauthorized users. Some users may find old and even stale
        information useful.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_7.2.2', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.2.3":
    title: '7.2.3 | Audit Passwords System Preference Setting - manual'
    section: 'Safari'
    description: |
        Apple has provided a new interface in macOS Monterey for managing passwords that mirrors the interfaced capability
        already available in iOS. Password management in macOS was previously available in both Safari Preferences and in
        Keychain Access. Apple is attempting to simplify password management for macOS and make the user experience more similar
        to iOS. Organizations are justifiably concerned about the risk of password managers, particularly as a possible backdoor
        to improved credential management regimes and greater use of MultiFactorAuthentication MFA. Apple has information posted
        on this system preference with additional information. Change Passwords preferences on Mac A warning icon is shown next
        to a website for any of the following reasons Easily guessed Appeared in a data leak Reused on another website
    remediation: |
        Graphical Method: Perform the following steps to set Password system settings to your organization's settings:
        Open                    System Preferences

        Select                    Passwords
                                 Enter the user password
        Select the                    Detect compromised passwords
         setting to match your organization's settings                 Remove stored passwords that should not be saved. Impact:
        Organizations using passwords are constantly reported as having their password databases leaked to the Internet so every
        password a user has should be unique. Locking down secure password management solutions so that it cannot be used pushes
        users to password reuse, sticky notes or always open text files with long lists of credentials.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_7.2.3', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.2.4":
    title: '7.2.4 | Ensure Warn When Visiting A Fradulent Website in Safari Is Enabled - manual'
    section: 'Safari'
    description: |
        Apple uses the Google Safe Browsing API to check for fraudulent websites and report them to the user attempting visit
        one.
    remediation: |
        Graphical Method: Perform the following steps to set Safari to warn when visiting a fraudulent site:
        Open                    Safari

        Select                    Safari
         from the                    menu bar

        Select                    Preferences

        Select                    Security

        Set                    Warn when visiting a fraudulent site
         to enabled                 Terminal Method: Run the following command to enable warn when visiting a fraudulent site in
        Safari: $ /usr/bin/sudo -u <username> /usr/bin/defaults write
        /Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari
        WarnAboutFraudulentWebsites -bool false
         example
        :               $ /usr/bin/sudo -u firstuser /usr/bin/defaults write
        /Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari
        WarnAboutFraudulentWebsites -bool false
         Note:
         To run the Terminal commands, Terminal must be granted Full Disk Access in the Security & Privacy pane in System
        Preferences.               Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.Safari

        The key to include is                    WarnAboutFraudulentWebsites

        The key must be set to:                    <true/>
                                 Note:
         Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred
        method. It is always better to set system-wide than per user.               Impact: Once compromised websites serving
        malware could be sanitized and remain in the database, though there is no widespread reporting of that risk.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.2.4', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.2.5":
    title: '7.2.5 | Ensure Prevent Cross-site Tracking in Safari Is Enabled - manual'
    section: 'Safari'
    description: |
        There is a vast network of groups that collect, use and sell user data. One method used to collect user data is pay and
        provide contented and services for website owners, along with that assistance the site owners push tracking cookies on
        visitors. In many cases the help allows a content owner to keep the site up. The tracking cookies allow information
        brokers to track web users across visited sites. For better privacy and to provide some resistance to data brokers
        prevent crosstracking.
    remediation: |
        Graphical Method: Perform the following steps to set prevent cross-site tracking in Safari to enabled:
        Open                    Safari

        Select                    Safari
         from the                    menu bar

        Select                    Preferences

        Select                    Privacy

        Set                    Prevent cross-site tracking
         is enable                 Terminal Method: Run the following command to enable Safari to prevent cross-site tracking:
        $ /usr/bin/sudo -u <username> /usr/bin/defaults write
        /Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari BlockStoragePolicy -int
        2

        $ /usr/bin/sudo -u <username> /usr/bin/defaults write
        /Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari
        WebKitPreferences.storageBlockingPolicy -int 1

        $ /usr/bin/sudo -u <username> /usr/bin/defaults write
        /Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari
        WebKitStorageBlockingPolicy -int 1
                       example
        :
        $ /usr/bin/sudo -u firstuser /usr/bin/defaults write
        /Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari BlockStoragePolicy -int 2

        $ /usr/bin/sudo -u firstuser /usr/bin/defaults write
        /Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari
        WebKitPreferences.storageBlockingPolicy -int 1

        $ /usr/bin/sudo -u firstuser /usr/bin/defaults write
        /Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari
        WebKitStorageBlockingPolicy -int 1
                       Note:
         To run the Terminal commands, Terminal must be granted Full Disk Access in the Security & Privacy pane in System
        Preferences.               Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.Safari

        The key to include is                    BlockStoragePolicy
                                 The key must be set to: 2
        The key to also include is                    WebKitPreferences.storageBlockingPolicy
                                 The key must be set to: 1
        The key to also include is                    WebKitStorageBlockingPolicy
                                 The key must be set to: 1 Note:
         Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred
        method. It is always better to set system-wide than per user.               Impact: Marketing companies will be unable
        to target you as effectively.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.2.5', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.2.6":
    title: '7.2.6 | Audit Hide IP Address in Safari Setting - manual'
    section: 'Safari'
    description: |
        Public Routable IP addresses can be used to track people to their current location, including home and business
        addresses. While a valid IP addess is necessary to load the site the valid address does not need to be provided to known
        trackers and should be hidden.
    remediation: |
        Graphical Method: Perform the following steps to set Safari whether or not to hide IP addresses from trackers:
        Open                    Safari

        Select                    Safari
         from the                    menu bar

        Select                    Preferences

        Select                    Privacy

        Set                    Hide IP address from trackers
         to your organization's requirements                 Terminal Method: Run the following command to enable or disable
        hiding IP addresses from trackers in Safari: $ /usr/bin/sudo -u <username> /usr/bin/defaults write
        /Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari
        WBSPrivacyProxyAvailabilityTraffic -int <3296/3300>
         3296
         will set hide IP address from trackers to disabled.                  3300
         will enable it.               example
        :
        $ /usr/bin/sudo -u firstuser /usr/bin/defaults write
        /Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari
        WBSPrivacyProxyAvailabilityTraffic -int 3300

        $ /usr/bin/sudo -u seconduser /usr/bin/defaults write
        /Users/seconduser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari
        WBSPrivacyProxyAvailabilityTraffic -int 3296
                       Note:
         To run the Terminal commands, Terminal must be granted Full Disk Access in the Security & Privacy pane in System
        Preferences.               Impact: Website address blocking through iCloud Private Relay made prevent some wanted pages
        to load that use IP geolocation access controls.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_7.2.6', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.2.7":
    title: '7.2.7 | Ensure Advertising Privacy Protection in Safari Is Enabled - manual'
    section: 'Safari'
    description: |
        Apple provides a framework that allows advertisers to target Apple users and endusers with advertisements. While many
        people prefer that when they see advertising it is relevant to them and their interests, the detailed information that
        is data mining collected, correlated, and available to advertisers in repositories is often disconcerting. This
        information is valuable to both advertisers and attackers and has been used with other metadata to reveal users
        identities. Organizations should manage advertising settings on computers rather than allow users to configure the
        settings. Apple Information Ad tracking should be limited on 10.15 and prior.
    remediation: |
        Graphical Method: Perform the following steps to set Safari to allow privacy-preserving measurement of ad effectiveness:
        Open                    Safari

        Select                    Safari
         from the                    menu bar

        Select                    Prefernces

        Select                    Privacy

        Set                    Warn when visiting a fraudulent site
         to enabled                 Terminal Method: Run the following command to enable allow privacy-preserving measurement of
        ad effectiveness in Safari: $ /usr/bin/sudo -u <username> /usr/bin/defaults write
        /Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari
        WebKitPreferences.privateClickMeasurementEnabled -bool true
         example
        :               $ /usr/bin/sudo -u firstuser /usr/bin/defaults write
        /Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari
        WebKitPreferences.privateClickMeasurementEnabled -bool true
         Note:
         To run the Terminal commands, Terminal must be granted Full Disk Access in the Security & Privacy pane in System
        Preferences.               Impact: Uses will see generic advertising rather than targeted advertising. Apple warns that
        this will reduce the number of relevant ads.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.2.7', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.2.8":
    title: '7.2.8 | Ensure Show Full Website Address in Safari Is Enabled - manual'
    section: 'Safari'
    description: |
        Attackers use websites with malicious or unwanted content to exploit the user or the computer. Part of the attack chain
        is to lure someone to load their content rather than the desired content. In order to reduce the risk in interacting
        with unwanted content the full website address should always be displayed in Safari.
    remediation: |
        Graphical Method: Perform the following steps to set Safari to show full website addresses:
        Open                    Safari

        Select                    Safari
         from the                    menu bar

        Select                    Preferences

        Select                    Security

        Set                    Show full website address
         to enabled                 Terminal Method: Run the following command to enable showing full website addresses in
        Safari: $ /usr/bin/sudo -u <username> /usr/bin/defaults write
        /Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari
        ShowFullURLInSmartSearchField -bool true
         example
        :               $ /usr/bin/sudo -u firstuser /usr/bin/defaults write
        /Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari
        ShowFullURLInSmartSearchField -bool true
         Note:
         To run the Terminal commands, Terminal must be granted Full Disk Access in the Security & Privacy pane in System
        Preferences.               Profile Method: Create or edit a configuration profile with the following information:
        The PayloadType string is                    com.apple.Safari

        The key to include is                    ShowFullURLInSmartSearchField

        The key must be set to:                    <true/>
                                 Note:
         Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred
        method. It is always better to set system-wide than per user.               Impact: Many URLs are very long and
        complicated, particularly for internal content management systems. Some complete URLS in the Smart Search Field may be
        difficult to parse.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.2.8', 'cis_apple_macos_10.15_catalina_benchmark']
    enabled: false
    properties:
      match: all
      rules:

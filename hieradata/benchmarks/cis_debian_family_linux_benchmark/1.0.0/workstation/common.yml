---

inspec_rules:
  "1.1.1.1":
    title: '1.1.1.1 | Ensure mounting of cramfs filesystems is disabled'
    section: 'Disable unused filesystems'
    description: |
        The                cramfs
         filesystem type is a compressed readonly Linux filesystem embedded in small footprint systems. A                cramfs
         image can be used without having to first decompress the image.
    remediation: |
        Edit or create a file in the                    /etc/modprobe.d/
         directory ending in .conf
        Example:                    vim /etc/modprobe.d/cramfs.conf
                         and add the following line: install cramfs /bin/true

        Run the following command to unload the                    cramfs
         module:                 # rmmod cramfs
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.1.1.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.1.2":
    title: '1.1.1.2 | Ensure mounting of freevxfs filesystems is disabled'
    section: 'Disable unused filesystems'
    description: |
        The                freevxfs
         filesystem type is a free version of the Veritas type filesystem. This is the primary filesystem type for HPUX
        operating systems.
    remediation: |
        Edit or create a file in the                    /etc/modprobe.d/
         directory ending in .conf
        Example:                    vi /etc/modprobe.d/freevxfs.conf
                         and add the following line: install freevxfs /bin/true

        Run the following command to unload the                    freevxfs
         module:                 rmmod freevxfs
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.1.1.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.1.3":
    title: '1.1.1.3 | Ensure mounting of jffs2 filesystems is disabled'
    section: 'Disable unused filesystems'
    description: |
        The                jffs2
         journaling flash filesystem 2 filesystem type is a logstructured filesystem used in flash memory devices.
    remediation: |
        Edit or create a file in the                    /etc/modprobe.d/
         directory ending in .conf
        Example:                    vi /etc/modprobe.d/jffs2.conf
                         and add the following line: install jffs2 /bin/true

        Run the following command to unload the                    jffs2
         module:                 # rmmod jffs2
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.1.1.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.1.4":
    title: '1.1.1.4 | Ensure mounting of hfs filesystems is disabled'
    section: 'Disable unused filesystems'
    description: |
        The                hfs
         filesystem type is a hierarchical filesystem that allows you to mount Mac OS filesystems.
    remediation: |
        Edit or create a file in the                    /etc/modprobe.d/
         directory ending in .conf
        Example:                    vi /etc/modprobe.d/hfs.conf
                         and add the following line: install hfs /bin/true

        Run the following command to unload the                    hfs
         module:                 # rmmod hfs
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.1.1.4', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.1.5":
    title: '1.1.1.5 | Ensure mounting of hfsplus filesystems is disabled'
    section: 'Disable unused filesystems'
    description: |
        The                hfsplus
         filesystem type is a hierarchical filesystem designed to replace                hfs
         that allows you to mount Mac OS filesystems.
    remediation: |
        Edit or create a file in the                    /etc/modprobe.d/
         directory ending in .conf
        Example:                    vi /etc/modprobe.d/hfsplus.conf
                         and add the following line: install hfsplus /bin/true

        Run the following command to unload the                    hfsplus
         module:                 # rmmod hfsplus
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.1.1.5', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.1.6":
    title: '1.1.1.6 | Ensure mounting of squashfs filesystems is disabled'
    section: 'Disable unused filesystems'
    description: |
        The                squashfs
         filesystem type is a compressed readonly Linux filesystem embedded in small footprint systems similar to
        cramfs
         . A                squashfs
         image can be used without having to first decompress the image.
    remediation: |
        Edit or create a file in the                    /etc/modprobe.d/
         directory ending in .conf
        Example:                      vi /etc/modprobe.d/squashfs.conf
                           Add the following line: install squashfs /bin/true

        Run the following command to unload the                    squashfs
         module:                 # rmmod squashfs
         Impact:
        Disabling                      squashfs
         will prevent the use of snap. Snap is a package manager for Linux for installing Snap packages.
        "Snap" application packages of software are self-contained and work across a range of Linux distributions. This is
        unlike traditional Linux package management approaches, like APT or RPM, which require specifically adapted packages per
        Linux distribution on an application update and delay therefore application deployment from developers to their
        software's end-user. Snaps themselves have no dependency on any external store ("App store"), can be obtained from any
        source and can be therefore used for upstream software deployment. When snaps are deployed on versions of Linux, the
        Ubuntu app store is used as default back-end, but other stores can be enabled as well.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_1.1.1.6', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.1.7":
    title: '1.1.1.7 | Ensure mounting of udf filesystems is disabled'
    section: 'Disable unused filesystems'
    description: |
        The                udf
         filesystem type is the universal disk format used to implement ISO/IEC 13346 and ECMA167 specifications. This is an
        open vendor filesystem type for data storage on a broad range of media. This filesystem type is necessary to support
        writing DVDs and newer optical disc formats.
    remediation: |
        Edit or create a file in the                    /etc/modprobe.d/
         directory ending in .conf
        Example:                    vi /etc/modprobe.d/udf.conf
                         and add the following line: install udf /bin/true

        Run the following command to unload the                    udf
         module:                 # rmmod udf
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.1.1.7', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.2":
    title: '1.1.2 | Ensure tmp is configured'
    section: 'Filesystem Configuration'
    description: |
        The              /tmp
         directory is a worldwritable directory used for temporary storage by all users and some applications.           Notes
        If an entry for /tmp exists in /etc/fstab it will take precedence over entries in the tmp.mount file. tmpfs
         can be resized using the sizesize parameter in                  /etc/fstab
         or on the Options line in the tmp.mount file. If we dont specify the size, it will be half the RAM.
        Resize                tmpfs
         examples             /etc/fstab   tmpfs   /tmp         tmpfs   rw,noexec,nodev,nosuid,size2G          0  0
         tmp.mount
          Mount
          Whattmpfs
          Where/tmp
          Typetmpfs
          Optionsmode1777,strictatime,size2G,noexec,nodev,nosuid
    remediation: |
        Configure                  /etc/fstab
          as appropriate.
        Example:

        tmpfs	/tmp	tmpfs     defaults,rw,nosuid,nodev,noexec,relatime  0 0
                       OR
        Run the following commands to enable systemd                  /tmp
          mounting:               Run the following command to create the tmp.mount file is the correct location:   # cp -v
        /usr/share/systemd/tmp.mount /etc/systemd/system/

        Edit                  /etc/systemd/system/tmp.mount
         to configure the                  /tmp
         mount:
          [Mount]
          What=tmpfs
          Where=/tmp
          Type=tmpfs
          Options=mode=1777,strictatime,nosuid,nodev,noexec
                       Run the following command to reload the systemd daemon with the unpdated tmp.mount unit file:   #
        systemctl daemon-reload
         Run the following command to enable and start tmp.mount   # systemctl --now enable tmp.mount
         Impact:
        Since the                    /tmp
         directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate
        partition.                 Running out of /tmp space is a problem regardless of what kind of filesystem lies under it,
        but in a default installation a disk-based /tmp will essentially have the whole disk available, as it only creates a
        single / partition. On the other hand, a RAM-based /tmp as with tmpfs will almost certainly be much smaller, which can
        lead to applications filling up the filesystem much more easily. /tmp utilizing tmpfs can be resized using the
        size={size} parameter on the Options line on the tmp.mount file
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.1.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.3":
    title: '1.1.3 | Ensure nodev option set on tmp partition'
    section: 'Filesystem Configuration'
    description: |
        The              nodev
         mount option specifies that the filesystem cannot contain special devices.
    remediation: |
        Edit the                  /etc/fstab
         file                  OR
         the                  /etc/systemd/system/local-fs.target.wants/tmp.mount
         file:
        IF                    /etc/fstab
         is used to mount                    /tmp

        Edit the                  /etc/fstab
         file and add                  nodev
         to the fourth field (mounting options) for the                  /tmp
          partition. See the                  fstab(5)
         manual page for more information.
        Run the following command to remount                  /tmp
        :               # mount -o remount,nodev /tmp
         OR
        IF systemd is used to mount                    /tmp
        :
        Edit                  /etc/systemd/system/local-fs.target.wants/tmp.mount
          to add                  nodev
          to the                  /tmp
          mount options:
        [Mount]
        Options=mode=1777,strictatime,noexec,nodev,nosuid
                       Run the following command to restart the systemd daemon: #  systemctl daemon-reload

        Run the following command to restart                  tmp.mount
                       # systemctl restart tmp.mount
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.1.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.4":
    title: '1.1.4 | Ensure nosuid option set on tmp partition'
    section: 'Filesystem Configuration'
    description: |
        The              nosuid
         mount option specifies that the filesystem cannot contain              setuid
          files.
    remediation: |
        Edit the                  /etc/fstab
          file and add                  nosuid
         to the fourth field (mounting options) for the                  /tmp
          partition. See the                  fstab(5)
         manual page for more information.
        Run the following command to remount                  /tmp
         :               # mount -o remount,nosuid /tmp
         OR
        Edit                  /etc/systemd/system/local-fs.target.wants/tmp.mount
          to add                  nosuid
          to the                  /tmp
          mount options:
        [Mount]
        Options=mode=1777,strictatime,noexec,nodev,nosuid

        Run the following command to remount                  /tmp
         :               # mount -o remount,nosuid /tmp
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.1.4', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.5":
    title: '1.1.5 | Ensure noexec option set on tmp partition'
    section: 'Filesystem Configuration'
    description: |
        The              noexec
         mount option specifies that the filesystem cannot contain executable binaries.
    remediation: |
        Edit the                  /etc/fstab
         file and add                  noexec
         to the fourth field (mounting options) for the                  /tmp
          partition. See the                  fstab(5)
         manual page for more information.
        Run the following command to remount                  /tmp
         :               # mount -o remount,noexec /tmp
         OR
        Edit                  /etc/systemd/system/local-fs.target.wants/tmp.mount
          to add                  noexec
          to the                  /tmp
          mount options:
        [Mount]
        Options=mode=1777,strictatime,noexec,nodev,nosuid

        Run the following command to remount                  /tmp
         :               # mount -o remount,noexec /tmp
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.1.5', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.6":
    title: '1.1.6 | Ensure separate partition exists for var'
    section: 'Filesystem Configuration'
    description: |
        The              /var
          directory is used by daemons and other system services to temporarily store dynamic data. Some directories created by
        these processes may be worldwritable.           Note
         When modifying              /var
         it is advisable to bring the system to emergency mode so auditd is not running, rename the existing directory, mount
        the new file system, and migrate the data over before returning to multiuser mode.
    remediation: |
        For new installations, during installation create a custom partition setup and specify a separate partition for
        /var
         .
        For systems that were previously installed, create a new partition and configure                  /etc/fstab
          as appropriate.               Impact: Resizing filesystems is a common activity in cloud-hosted servers. Separate
        filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for
        the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_1.1.6', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.7":
    title: '1.1.7 | Ensure separate partition exists for vartmp'
    section: 'Filesystem Configuration'
    description: |
        The              /var/tmp
         directory is a worldwritable directory used for temporary storage by all users and some applications.
    remediation: |
        For new installations, during installation create a custom partition setup and specify a separate partition for
        /var/tmp
         .
        For systems that were previously installed, create a new partition and configure                  /etc/fstab
          as appropriate.               Impact: Resizing filesystems is a common activity in cloud-hosted servers. Separate
        filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for
        the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_1.1.7', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.8":
    title: '1.1.8 | Ensure nodev option set on vartmp partition'
    section: 'Filesystem Configuration'
    description: |
        The              nodev
         mount option specifies that the filesystem cannot contain special devices.
    remediation: |
        Edit the                  /etc/fstab
         file and add                  nodev
         to the fourth field (mounting options) for the                  /var/tmp
          partition. See the                  fstab(5)
         manual page for more information.
        Run the following command to remount                  /var/tmp
         :               # mount -o remount,nodev /var/tmp
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.1.8', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.9":
    title: '1.1.9 | Ensure nosuid option set on vartmp partition'
    section: 'Filesystem Configuration'
    description: |
        The              nosuid
         mount option specifies that the filesystem cannot contain              setuid
          files.
    remediation: |
        Edit the                  /etc/fstab
          file and add                  nosuid
         to the fourth field (mounting options) for the                  /var/tmp
          partition. See the                  fstab(5)
         manual page for more information.
        Run the following command to remount                  /var/tmp
         :               # mount -o remount,nosuid /var/tmp
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.1.9', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.10":
    title: '1.1.10 | Ensure noexec option set on vartmp partition'
    section: 'Filesystem Configuration'
    description: |
        The              noexec
         mount option specifies that the filesystem cannot contain executable binaries.
    remediation: |
        Edit the                  /etc/fstab
         file and add                  noexec
         to the fourth field (mounting options) for the                  /var/tmp
          partition. See the                  fstab(5)
         manual page for more information.
        Run the following command to remount                  /var/tmp
         :               # mount -o remount,noexec /var/tmp
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.1.10', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.11":
    title: '1.1.11 | Ensure separate partition exists for varlog'
    section: 'Filesystem Configuration'
    description: |
        The              /var/log
          directory is used by system services to store log data.
        Note When modifying                /var/log
         it is advisable to bring the system to emergency mode so auditd is not running, rename the existing directory, mount
        the new file system, and migrate the data over before returning to multiuser mode
    remediation: |
        For new installations, during installation create a custom partition setup and specify a separate partition for
        /var/log
         .
        For systems that were previously installed, create a new partition and configure                  /etc/fstab
          as appropriate.               Impact: Resizing filesystems is a common activity in cloud-hosted servers. Separate
        filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for
        the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_1.1.11', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.12":
    title: '1.1.12 | Ensure separate partition exists for varlogaudit'
    section: 'Filesystem Configuration'
    description: |
        The auditing daemon,              auditd
         , stores log data in the              /var/log/audit
         directory.
        Note When modifying                /var/log/audit
         it is advisable to bring the system to emergency mode so auditd is not running, rename the existing directory, mount
        the new file system, and migrate the data over before returning to multiuser mode.
    remediation: |
        For new installations, during installation create a custom partition setup and specify a separate partition for
        /var/log/audit
         .
        For systems that were previously installed, create a new partition and configure                  /etc/fstab
          as appropriate.               Impact: Resizing filesystems is a common activity in cloud-hosted servers. Separate
        filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for
        the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_1.1.12', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.13":
    title: '1.1.13 | Ensure separate partition exists for home'
    section: 'Filesystem Configuration'
    description: |
        The              /home
          directory is used to support disk storage needs of local users.
    remediation: |
        For new installations, during installation create a custom partition setup and specify a separate partition for
        /home
         .
        For systems that were previously installed, create a new partition and configure                  /etc/fstab
          as appropriate.               Impact: Resizing filesystems is a common activity in cloud-hosted servers. Separate
        filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for
        the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_1.1.13', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.14":
    title: '1.1.14 | Ensure nodev option set on home partition'
    section: 'Filesystem Configuration'
    description: |
        The              nodev
         mount option specifies that the filesystem cannot contain special devices.
    remediation: |
        Edit the                  /etc/fstab
         file and add                  nodev
         to the fourth field (mounting options) for the                  /home
          partition. See the                  fstab(5)
         manual page for more information.               # mount -o remount,nodev /home
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.1.14', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.15":
    title: '1.1.15 | Ensure nodev option set on devshm partition'
    section: 'Filesystem Configuration'
    description: |
        The              nodev
         mount option specifies that the filesystem cannot contain special devices.
    remediation: |
        Edit the                  /etc/fstab
         file and add                  nodev
         to the fourth field (mounting options) for the                  /dev/shm
          partition. See the                  fstab(5)
         manual page for more information.
        Run the following command to remount                  /dev/shm
         :               # mount -o remount,nodev /dev/shm
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.1.15', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.16":
    title: '1.1.16 | Ensure nosuid option set on devshm partition'
    section: 'Filesystem Configuration'
    description: |
        The              nosuid
         mount option specifies that the filesystem cannot contain              setuid
          files.
    remediation: |
        Edit the                  /etc/fstab
         file and add                  nosuid
         to the fourth field (mounting options) for the                  /dev/shm
          partition. See the                  fstab(5)
         manual page for more information.
        Run the following command to remount                  /dev/shm
         :               # mount -o remount,nosuid /dev/shm
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.1.16', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.17":
    title: '1.1.17 | Ensure noexec option set on devshm partition'
    section: 'Filesystem Configuration'
    description: |
        The              noexec
         mount option specifies that the filesystem cannot contain executable binaries.
    remediation: |
        Edit the                  /etc/fstab
         file and add                  noexec
         to the fourth field (mounting options) for the                  /dev/shm
          partition. See the                  fstab(5)
         manual page for more information.
        Run the following command to remount                  /dev/shm
        :               # mount -o remount,noexec /dev/shm
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.1.17', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.18":
    title: '1.1.18 | Ensure nodev option set on removable media partitions - manual'
    section: 'Filesystem Configuration'
    description: |
        The              nodev
         mount option specifies that the filesystem cannot contain special devices.
    remediation: |
        Edit the                  /etc/fstab
         file and add                  nodev
          to the fourth field (mounting options) of all removable media partitions. Look for entries that have mount points that
        contain words such as floppy or cdrom. See the                  fstab(5)
         manual page for more information.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_1.1.18', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.1.19":
    title: '1.1.19 | Ensure nosuid option set on removable media partitions - manual'
    section: 'Filesystem Configuration'
    description: |
        The              nosuid
         mount option specifies that the filesystem cannot contain              setuid
          files.
    remediation: |
        Edit the                  /etc/fstab
         file and add                  nosuid
          to the fourth field (mounting options) of all removable media partitions. Look for entries that have mount points that
        contain words such as floppy or cdrom. See the                  fstab(5)
         manual page for more information.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_1.1.19', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.1.20":
    title: '1.1.20 | Ensure noexec option set on removable media partitions - manual'
    section: 'Filesystem Configuration'
    description: |
        The              noexec
         mount option specifies that the filesystem cannot contain executable binaries.
    remediation: |
        Edit the                  /etc/fstab
         file and add                  noexec
          to the fourth field (mounting options) of all removable media partitions. Look for entries that have mount points that
        contain words such as floppy or cdrom. See the                  fstab(5)
         manual page for more information.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_1.1.20', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.1.21":
    title: '1.1.21 | Ensure sticky bit is set on all world-writable directories - manual'
    section: 'Filesystem Configuration'
    description: |
        Setting the sticky bit on world writable directories prevents users from deleting or renaming files in that directory
        that are not owned by them.
    remediation: |
        Run the following command to set the sticky bit on all world writable directories: # df --local -P | awk '{if (NR!=1)
        print $6}' | xargs -I '{}' find '{}' -xdev -type d \( -perm -0002 -a ! -perm -1000 \) 2>/dev/null | xargs -I '{}' chmod
        a+t '{}'
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.1.21', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.1.22":
    title: '1.1.22 | Disable Automounting'
    section: 'Filesystem Configuration'
    description: |
        autofs
         allows automatic mounting of devices, typically including CD/DVDs and USB drives.           Note This control should
        align with the tolerance of the use of portable drives and optical media in the organization. On a server requiring an
        admin to manually mount media can be part of defenseindepth to reduce the risk of unapproved software or information
        being introduced or proprietary software or information being exfiltrated. If admins commonly use flash drives and
        Server access has sufficient physical controls, requiring manual mounting may not increase security.
    remediation: |
        Run one of the following commands:
        Run the following command to disable                  autofs
         :               # systemctl --now disable autofs
         OR
        Run the following command to remove                  autofs
                       # apt purge autofs
         Impact: The use of portable hard drives is very common for workstation users. If your organization allows the use of
        portable storage or media on workstations and physical access controls to workstations is considered adequate there is
        little value add in turning off automounting.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_1.1.22', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.1.23":
    title: '1.1.23 | Disable USB Storage'
    section: 'Filesystem Configuration'
    description: |
        USB storage provides a means to transfer and store files insuring persistence and availability of the files independent
        of network connection status.  Its popularity and utility has led to USBbased malware being a simple and common means
        for network infiltration and a first step to establishing a persistent threat within a networked environment. Note An
        alternative solution to disabling the usbstorage module may be found in USBGuard. Use of USBGuard and construction of
        USB device policies should be done in alignment with site policy.
    remediation: |
        Edit or create a file in the /etc/modprobe.d/ directory ending in .conf
        Example:                  vi /etc/modprobe.d/usb_storage.conf

        and add the following line:               install usb-storage /bin/true
         Run the following command to unload the usb-storage module: rmmod usb-storage
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_1.1.23', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.2.1":
    title: '1.2.1 | Ensure package manager repositories are configured - manual'
    section: 'Configure Software Updates'
    description: |
        Systems need to have package manager repositories configured to ensure they receive the latest patches and updates.
    remediation: |
        Configure your package manager repositories according to site policy.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_1.2.1', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.2.2":
    title: '1.2.2 | Ensure GPG keys are configured - manual'
    section: 'Configure Software Updates'
    description: |
        Most packages managers implement GPG key signing to verify package integrity during installation.
    remediation: |
        Update your package manager GPG keys in accordance with site policy.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_1.2.2', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.3.1":
    title: '1.3.1 | Ensure sudo is installed'
    section: 'Configure sudo'
    description: |
        sudo allows a permitted user to execute a command as the superuser or another user, as specified by the security policy.
        The invoking users real not effective user ID is used to determine the user name with which to query the security
        policy. Note Use the sudoldap package if you need LDAP support for sudoers
    remediation: |
        Install sudo using the following command. # apt install sudo
         OR # apt install sudo-ldap
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.3.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.3.2":
    title: '1.3.2 | Ensure sudo commands use pty'
    section: 'Configure sudo'
    description: |
        sudo can be configured to run only from a psuedopty Note visudo edits the sudoers file in a safe fashion, analogous to
        vipw8. visudo locks the sudoers file against multiple simultaneous edits, provides basic sanity checks, and checks or
        parse errors. If the sudoers file is currently being edited you will receive a message to try again later.
    remediation: |
        Edit the file                  /etc/sudoers
         or a file in                  /etc/sudoers.d/
         with visudo -f  and add the following line:               Defaults use_pty
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.3.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.3.3":
    title: '1.3.3 | Ensure sudo log file exists'
    section: 'Configure sudo'
    description: |
        sudo can use a custom log file. Note visudo edits the sudoers file in a safe fashion, analogous to vipw8. visudo locks
        the sudoers file against multiple simultaneous edits, provides basic sanity checks, and checks or parse errors. If the
        sudoers file is currently being edited you will receive a message to try again later.
    remediation: |
        Edit the file                  /etc/sudoers
         or a file in                  /etc/sudoers.d/
         with visudo -f  and add the following line: and add the following line:               Defaults  logfile="<PATH TO
        CUSTOM LOG FILE>"
         Example: Defaults  logfile="/var/log/sudo.log"
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.3.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.4.1":
    title: '1.4.1 | Ensure AIDE is installed'
    section: 'Filesystem Integrity Checking'
    description: |
        AIDE takes a snapshot of filesystem state including modification times, permissions, and file hashes which can then be
        used to compare against the current state of the filesystem to detect modifications to the system.
        Note The prelinking feature can interfere with AIDE because it alters binaries to speed up their start up times. Run
        prelink ua
         to restore the binaries to their prelinked state, thus avoiding false positives from AIDE.
    remediation: |
        Install AIDE using the appropriate package manager or manual installation:
        # apt install aide aide-common

                       Configure AIDE as appropriate for your environment. Consult the AIDE documentation for options.
        Initialize AIDE:
        Run the following commands:
        # aideinit
        # mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.4.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.4.2":
    title: '1.4.2 | Ensure filesystem integrity is regularly checked'
    section: 'Filesystem Integrity Checking'
    description: |
        Periodic checking of the filesystem integrity is needed to detect changes to the filesystem. Notes The checking in this
        recommendation occurs every day at 5am. Alter the frequency and time of the checks in compliance with site policy
        systemd timers, timer file                  aidecheck.timer
         and service file                  aidecheck.service
        , have been included as an optional alternative to using                  cron

        Ubuntu advises using                  /usr/bin/aide.wrapper
         rather than calling                  /usr/bin/aide
         directly in order to protect the database and prevent conflicts
    remediation: |
        If
         cron will be used to schedule and run aide check:               Run the following command: # crontab -u root -e
         Add the following line to the crontab: 0 5 * * * /usr/bin/aide.wrapper --config /etc/aide/aide.conf --check
         OR If
         aidecheck.service and aidecheck.timer will be used to schedule and run aide check:
        Create or edit the file                  /etc/systemd/system/aidecheck.service
         and add the following lines:
        [Unit]
        Description=Aide Check

        [Service]
        Type=simple
        ExecStart=/usr/bin/aide.wrapper --config /etc/aide/aide.conf --check

        [Install]
        WantedBy=multi-user.target

        Create or edit the file                  /etc/systemd/system/aidecheck.timer
         and add the following lines:
        [Unit]
        Description=Aide check every day at 5AM

        [Timer]
        OnCalendar=*-*-* 05:00:00
        Unit=aidecheck.service

        [Install]
        WantedBy=multi-user.target
                       Run the following commands:
        # chown root:root /etc/systemd/system/aidecheck.*
        # chmod 0644 /etc/systemd/system/aidecheck.*

        # systemctl daemon-reload

        # systemctl enable aidecheck.service
        # systemctl --now enable aidecheck.timer
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.4.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.5.1":
    title: '1.5.1 | Ensure permissions on bootloader config are configured'
    section: 'Secure Boot Settings'
    description: |
        emphasized textThe grub configuration file contains information on boot settings and passwords for unlocking boot
        options.
        The grub configuration is usually              grub.cfg
         stored in /boot/grub/.           Notes This recommendation is designed around the grub bootloader, if LILO or another
        bootloader is in use in your environment enact equivalent settings.
        Replace                  /boot/grub/grub.cfg
         with the appropriate grub configuration file for your environment
    remediation: |
        Run the following commands to set permissions on your grub configuration: # chown root:root /boot/grub/grub.cfg
         # chmod og-rwx /boot/grub/grub.cfg
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.5.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.5.2":
    title: '1.5.2 | Ensure bootloader password is set'
    section: 'Secure Boot Settings'
    description: |
        Setting the boot loader password will require that anyone rebooting the system must enter a password before being able
        to set command line boot parameters Notes This recommendation is designed around the grub bootloader, if LILO or another
        bootloader is in use in your environment enact equivalent settings.
        Replace                  /boot/grub/grub.cfg
         with the appropriate grub configuration file for your environment.
    remediation: |
        Create an encrypted password with                  grub-mkpasswd-pbkdf2
        :
        # grub-mkpasswd-pbkdf2
        Enter password: <password>
        Reenter password: <password>
        PBKDF2 hash of your password is <encrypted-password>

        Add the following into a custom                  /etc/grub.d
         configuration file:
        cat <<EOF
        set superusers="<username>"
        password_pbkdf2 <username> <encrypted-password>
        EOF
                       The superuser/user information and password should not be contained in the /etc/grub.d/00_header file as
        this file could be overwritten in a package update.
        If there is a requirement to be able to boot/reboot without entering the password, edit /etc/grub.d/10_linux and add
        --unrestricted
         to the line                  CLASS=
                       Example: CLASS="--class gnu-linux --class gnu --class os --unrestricted"

        Run the following command to update the                  grub2
         configuration:               # update-grub
         Impact: If password protection is enabled, only the designated superuser can edit a Grub 2 menu item by pressing "e" or
        access the GRUB 2 command line by pressing "c" If GRUB 2 is set up to boot automatically to a password-protected menu
        entry the user has no option to back out of the password prompt to select another menu entry. Holding the SHIFT key will
        not display the menu in this case. The user must enter the correct username and password. If unable, the configuration
        files will have to be edited via the LiveCD or other means to fix the problem
        You can add                    --unrestricted
         to the menu entries to allow the system to boot without entering a password.  Password will still be required to edit
        menu items.
        More Information:                     https://help.ubuntu.com/community/Grub2/Passwords
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.5.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.5.3":
    title: '1.5.3 | Ensure authentication required for single user mode'
    section: 'Secure Boot Settings'
    description: |
        Single user mode is used for recovery when the system detects an issue during boot or by manual selection from the
        bootloader.
    remediation: |
        Run the following command and follow the prompts to set a password for the                  root
         user:               # passwd root
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.5.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'

  "1.6.1":
    title: '1.6.1 | Ensure XDNX support is enabled - manual'
    section: 'Additional Process Hardening'
    description: |
        Recent processors in the x86 family support the ability to prevent code execution on a per memory page basis.
        Generically and on AMD processors, this ability is called No Execute NX, while on Intel processors it is called Execute
        Disable XD. This ability can help prevent exploitation of buffer overflow vulnerabilities and should be activated
        whenever possible. Extra steps must be taken to ensure that this protection is enabled, particularly on 32bit x86
        systems. Other processors, such as Itanium and POWER, have included such support since inception and the standard kernel
        for those platforms supports the feature. Note Ensure your system supports the XD or NX bit and has PAE support before
        implementing this recommendation as this may prevent it from booting if these are not supported by your hardware
    remediation: |
        On 32 bit systems install a kernel with PAE support, no installation is required on 64 bit systems: If necessary
        configure your bootloader to load the new kernel and reboot the system. You may need to enable NX or XD support in your
        bios.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.6.1', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.6.2":
    title: '1.6.2 | Ensure address space layout randomization ASLR is enabled'
    section: 'Additional Process Hardening'
    description: |
        Address space layout randomization ASLR is an exploit mitigation technique which randomly arranges the address space of
        key data areas of a process.
    remediation: |
        Set the following parameter in                  /etc/sysctl.conf
         or a                  /etc/sysctl.d/*
         file:               kernel.randomize_va_space = 2
         Run the following command to set the active kernel parameter: # sysctl -w kernel.randomize_va_space=2
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.6.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == 2'

  "1.6.3":
    title: '1.6.3 | Ensure prelink is disabled'
    section: 'Additional Process Hardening'
    description: |
        prelink
         is a program that modifies ELF shared libraries and ELF dynamically linked binaries in such a way that the time needed
        for the dynamic linker to perform relocations at startup significantly decreases.
    remediation: |
        Run the following command to restore binaries to normal: # prelink -ua

        Uninstall                  prelink
          using the appropriate package manager or manual installation:               # apt purge prelink
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.6.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.6.4":
    title: '1.6.4 | Ensure core dumps are restricted'
    section: 'Additional Process Hardening'
    description: |
        A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also
        be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core
        dumps, but this can be overridden by the user.
    remediation: |
        Add the following line to                  /etc/security/limits.conf
         or a                  /etc/security/limits.d/*
         file:               * hard core 0

        Set the following parameter in                  /etc/sysctl.conf
         or a                  /etc/sysctl.d/*
         file:               fs.suid_dumpable = 0
         Run the following command to set the active kernel parameter: # sysctl -w fs.suid_dumpable=0
         If systemd-coredump is installed:
        edit                  /etc/systemd/coredump.conf
         and add/modify the following lines:
        Storage=none
        ProcessSizeMax=0
                       Run the command: systemctl daemon-reload
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.6.4', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^\s*fs\.suid_dumpable\s*=\s*0\s*$'

  "1.7.1.1":
    title: '1.7.1.1 | Ensure AppArmor is installed'
    section: 'Configure AppArmor'
    description: |
        AppArmor provides Mandatory Access Controls.
    remediation: |
        Install AppArmor. # apt install apparmor
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.7.1.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.7.1.2":
    title: '1.7.1.2 | Ensure AppArmor is enabled in the bootloader configuration'
    section: 'Configure AppArmor'
    description: |
        Configure AppArmor to be enabled at boot time and verify that it has not been overwritten by the bootloader boot
        parameters. Note This recommendation is designed around the grub bootloader, if LILO or another bootloader is in use in
        your environment enact equivalent settings.
    remediation: |
        Edit                    /etc/default/grub
         and add the                    appermor=1
         and                    security=apparmor
         parameters to the                    GRUB_CMDLINE_LINUX=
         line                 GRUB_CMDLINE_LINUX="apparmor=1 security=apparmor"

        Run the following command to update the                    grub2
          configuration:                 # update-grub
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.7.1.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'

  "1.7.1.3":
    title: '1.7.1.3 | Ensure all AppArmor Profiles are in enforce or complain mode'
    section: 'Configure AppArmor'
    description: |
        AppArmor profiles define what resources applications are able to access.
    remediation: |
        Run the following command to set all profiles to enforce mode: # aa-enforce /etc/apparmor.d/*
         OR Run the following command to set all profiles to complain mode: # aa-complain /etc/apparmor.d/*
         Note: Any unconfined processes may need to have a profile created or activated for them and then be restarted
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.7.1.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.7.1.4":
    title: '1.7.1.4 | Ensure all AppArmor Profiles are enforcing'
    section: 'Configure AppArmor'
    description: |
        AppArmor profiles define what resources applications are able to access.
    remediation: |
        Run the following command to set all profiles to enforce mode: # aa-enforce /etc/apparmor.d/*
         Note: Any unconfined processes may need to have a profile created or activated for them and then be restarted
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_1.7.1.4', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.8.1":
    title: '1.8.1 | Ensure message of the day is configured properly - manual'
    section: 'Warning Banners'
    description: |
        The contents of the              /etc/motd
          file are displayed to users after login and function as a message of the day for authenticated users.
        Unixbased systems have typically displayed information about the OS release and patch level upon logging in to the
        system. This information can be useful to developers who are developing software for a particular OS platform. If
        mingetty8
         supports the following options, they display operating system information              \m
           machine architecture              \r
           operating system release              \s
           operating system name              \v
           operating system version
    remediation: |
        Edit the                  /etc/motd
          file with the appropriate contents according to your site policy, remove any instances of                  \m
         ,                  \r
         ,                  \s
         ,                  \v
         or references to the                  OS platform
                       OR If the motd is not used, this file can be removed. Run the following command to remove the motd file:
        # rm /etc/motd
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.8.1', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.8.2":
    title: '1.8.2 | Ensure permissions on etcissue.net are configured'
    section: 'Warning Banners'
    description: |
        The contents of the              /etc/issue.net
          file are displayed to users prior to login for remote connections from configured services.
    remediation: |
        Run the following commands to set permissions on                  /etc/issue.net
         :               # chown root:root /etc/issue.net
         # chmod u-x,go-wx /etc/issue.net
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.8.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.8.3":
    title: '1.8.3 | Ensure permissions on etcissue are configured'
    section: 'Warning Banners'
    description: |
        The contents of the              /etc/issue
          file are displayed to users prior to login for local terminals.
    remediation: |
        Run the following commands to set permissions on                  /etc/issue
         :               # chown root:root /etc/issue
         # chmod u-x,go-wx /etc/issue
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.8.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.8.4":
    title: '1.8.4 | Ensure permissions on etcmotd are configured'
    section: 'Warning Banners'
    description: |
        The contents of the              /etc/motd
          file are displayed to users after login and function as a message of the day for authenticated users.           Note
        If Message of the day is not needing, this file can be removed.
    remediation: |
        Run the following commands to set permissions on                  /etc/motd
         :
        # chown root:root /etc/motd

        # chmod u-x,go-wx /etc/motd
                       OR
        Run the following command to remove the                  /etc/motd
         file:               # rm /etc/motd
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.8.4', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.8.5":
    title: '1.8.5 | Ensure remote login warning banner is configured properly - manual'
    section: 'Warning Banners'
    description: |
        The contents of the              /etc/issue.net
          file are displayed to users prior to login for remote connections from configured services.
        Unixbased systems have typically displayed information about the OS release and patch level upon logging in to the
        system. This information can be useful to developers who are developing software for a particular OS platform. If
        mingetty8
         supports the following options, they display operating system information               \m
           machine architecture              \r
           operating system release              \s
           operating system name              \v
           operating system version
    remediation: |
        Edit the                  /etc/issue.net
          file with the appropriate contents according to your site policy, remove any instances of                  \m
         ,                  \r
         ,                  \s
         ,                  \v
         or references to the                  OS platform
                       # echo "Authorized uses only. All activity may be monitored and reported." > /etc/issue.net
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.8.5', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.8.6":
    title: '1.8.6 | Ensure local login warning banner is configured properly - manual'
    section: 'Warning Banners'
    description: |
        The contents of the              /etc/issue
          file are displayed to users prior to login for local terminals.
        Unixbased systems have typically displayed information about the OS release and patch level upon logging in to the
        system. This information can be useful to developers who are developing software for a particular OS platform. If
        mingetty8
         supports the following options, they display operating system information              \m
           machine architecture              \r
           operating system release              \s
           operating system name              \v
           operating system version  or the operating systems name
    remediation: |
        Edit the                  /etc/issue
          file with the appropriate contents according to your site policy, remove any instances of                  \m
         ,                  \r
         ,                  \s
         ,                  \v
         or references to the                  OS platform
                       # echo "Authorized uses only. All activity may be monitored and reported." > /etc/issue
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.8.6', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.9":
    title: '1.9 | Ensure GDM is removed or login is configured'
    section: 'Initial Setup'
    description: |
        GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.
    remediation: |
        Edit or create the file                /etc/gdm3/greeter.dconf-defaults
         and edit or add the following:
        [org/gnome/login-screen]
        banner-message-enable=true
        banner-message-text='<banner message>'
        disable-user-list=true
                     Example banner message: Authorized uses only. All activity may be monitored and reported.
        Run the following command to re-load                GDM
         on the next login or reboot:             # dpkg-reconfigure gdm3
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.9', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "1.10":
    title: '1.10 | Ensure updates patches and additional security software are installed - manual'
    section: 'Initial Setup'
    description: |
        Periodically patches are released for included software either due to security flaws or to include additional
        functionality. Notes Site policy may mandate a testing period before install onto production systems for available
        updates. upgrade  is used to install the newest versions of all packages currently installed on the system from the
        sources enumerated     in /etc/apt/sources.list. Packages currently installed with new versions available are retrieved
        and upgraded under no  circumstances are currently installed packages removed, or packages not already installed
        retrieved and installed. New versions of currently installed packages that cannot be upgraded without changing the
        install status of another package will be left at     their current version. An update must be performed first so that
        apt knows that new versions of packages are available. distupgrade  in addition to performing the function of upgrade,
        also intelligently handles changing dependencies with new versions of packages apt has a smart conflict resolution
        system, and it will attempt to upgrade the most important packages at the expense of less important ones if necessary.
        So, distupgrade command may remove some packages. The /etc/apt/sources.list file contains a list of locations from which
        to retrieve desired package files. See also aptpreferences5 for a mechanism for overriding the general settings for
        individual packages.
    remediation: |
        Run the following command to update all packages following local site policy guidance on applying updates and patches: #
        apt upgrade
         OR # apt dist-upgrade
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_1.10', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.1.1.1":
    title: '2.1.1.1 | Ensure time synchronization is in use'
    section: 'Time Synchronization'
    description: |
        System time should be synchronized between all systems in an environment. This is typically done by establishing an
        authoritative time server or set of servers and having all systems synchronize their clocks to them. Notes If access to
        a physical hosts clock is available and configured according to site policy, this section can be skipped Only one time
        synchronization method should be in use on the system If access to a physical hosts clock is available and configured
        according to site policy, systemdtimesyncd should be stopped and masked
    remediation: |
        On systems where host based time synchronization is not available, configure systemd-timesyncd.  If "full featured"
        and/or encrypted time synchronization is required, install chrony or NTP. To install chrony: # apt install chrony
         To install ntp: # apt install ntp
         On virtual systems where host based time synchronization is available consult your virtualization software
        documentation and setup host based synchronization
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.1.1.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.1.1.2":
    title: '2.1.1.2 | Ensure systemd-timesyncd is configured - manual'
    section: 'Time Synchronization'
    description: |
        systemdtimesyncd is a daemon that has been added for synchronizing the system clock across the network. It implements an
        SNTP client. In contrast to NTP implementations such as chrony or the NTP reference server this only implements a client
        side, and does not bother with the full NTP complexity, focusing only on querying time from one remote server and
        synchronizing the local clock to it. The daemon runs with minimal privileges, and has been hooked up with networkd to
        only operate when network connectivity is available. The daemon saves the current clock to disk every time a new NTP
        sync has been acquired, and uses this to possibly correct the system clock early at bootup, in order to accommodate for
        systems that lack an RTC such as the Raspberry Pi and embedded devices, and make sure that time monotonically progresses
        on these systems, even if it is not always correct. To make use of this daemon a new system user and group
        systemdtimesync needs to be created on installation of systemd. Notes The systemdtimesyncd service specifically
        implements only SNTP. This minimalistic service will set the system clock for large offsets or slowly adjust it for
        smaller deltas. More complex use cases are not covered by systemdtimesyncd
        If                    chrony
         or                    ntp
         are used,                    systemdtimesyncd
         should be stopped and masked, and this section skipped
        This recommendation only applies if                    timesyncd
         is in use on the system                 Only one time synchronization method should be in use on the system
    remediation: |
        Remove additional time synchronization methods:
        Run the following commands to remove                    ntp
         and                    chrony
        :
        # apt purge ntp

        # apt purge chrony

        Configure                      systemd-timesyncd
        :                   Run the following command to enable systemd-timesyncd # systemctl enable systemd-timesyncd.service
         edit the file /etc/systemd/timesyncd.conf and add/modify the following lines:
        NTP=0.debian.pool.ntp.org 1.debian.pool.ntp.org #Servers listed should be In Accordence With Local Policy

        FallbackNTP=2.debian.pool.ntp.org 3.debian.pool.ntp.org #Servers listed should be In Accordence With Local Policy

        RootDistanceMax=1 #should be In Accordence With Local Policy
                         Run the following commands to start systemd-timesyncd.service
        # systemctl start systemd-timesyncd.service

        # timedatectl set-ntp true
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_2.1.1.2', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.1.1.3":
    title: '2.1.1.3 | Ensure chrony is configured'
    section: 'Time Synchronization'
    description: |
        chrony
         is a daemon which implements the Network Time Protocol NTP and is designed to synchronize system clocks across a
        variety of systems and use a source that is highly accurate. More information on                chrony
         can be found at                http//chrony.tuxfamily.org/
        .                chrony
         can be configured to be a client and/or a server.             Notes
        If                    ntp
         or                    systemdtimesyncd
         are used,                    chrony
         should be removed and this section skipped                 This recommendation only applies if chrony is in use on the
        system Only one time synchronization method should be in use on the system
    remediation: |
        Remove and/or disable additional time synchronization methods:
        Run the following command to remove                    ntp
        :                 # apt purge ntp
         Run the following command to stop and mask systemd-timesyncd: # systemctl --now mask systemd-timesyncd

        Configure                    chrony
        :
        Add or edit server or pool lines to                    /etc/chrony/chrony.conf
         as appropriate:                 server <remote-server>

        Add or edit the                    user
         line to                    /etc/chrony/chrony.conf
        :                 user _chrony
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.1.1.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == systemd-timesyncd'

  "2.1.1.4":
    title: '2.1.1.4 | Ensure ntp is configured'
    section: 'Time Synchronization'
    description: |
        ntp
         is a daemon which implements the Network Time Protocol NTP. It is designed to synchronize system clocks across a
        variety of systems and use a source that is highly accurate. More information on NTP can be found at
        http//www.ntp.org
        .                ntp
         can be configured to be a client and/or a server.             Notes
        If                    chrony
         or                    systemdtimesyncd
         are used,                    ntp
         should be removed and this section skipped                 This recommendation only applies if ntp is in use on the
        system Only one time synchronization method should be in use on the system
    remediation: |
        Remove and/or disable additional time synchronization methods:
        Run the following command to remove                    chrony
        :                 apt purge chrony

        Run the following command to stop and mask                    systemd-timesyncd
        :                 # systemctl --now mask systemd-timesyncd

        Configure                      ntp
        :
        Add or edit restrict lines in                    /etc/ntp.conf
          to match the following:
        restrict -4 default kod nomodify notrap nopeer noquery
        restrict -6 default kod nomodify notrap nopeer noquery

        Add or edit server or pool lines to                    /etc/ntp.conf
         as appropriate:                 server <remote-server>

        Configure                    ntp
          to run as the                    ntp
          user by adding or editing the                    /etc/init.d/ntp
         file:                 RUNASUSER=ntp
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.1.1.4', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == systemd-timsyncd'

  "2.1.3":
    title: '2.1.3 | Ensure Avahi Server is not installed'
    section: 'Special Purpose Services'
    description: |
        Avahi is a free zeroconf implementation, including a system for multicast DNS/DNSSD service discovery. Avahi allows
        programs to publish and discover services and hosts running on a local network with no specific configuration. For
        example, a user can plug a computer into a network and Avahi automatically finds printers to print to, files to look at
        and people to talk to, as well as network services running on the machine.
    remediation: |
        Run the following commands to remove                  avahi-daemon
        :
        # systemctl stop avahi-daaemon.service
        # systemctl stop avahi-daemon.socket
        # apt purge avahi-daemon
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.1.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.1.4":
    title: '2.1.4 | Ensure CUPS is not installed'
    section: 'Special Purpose Services'
    description: |
        The Common Unix Print System CUPS provides the ability to print to both local and network printers. A system running
        CUPS can also accept print jobs from remote systems and print them to local printers. It also provides a web based
        remote administration capability.
    remediation: |
        Run one of the following commands to remove                  cups
         :               # apt purge cups
         Impact: Removing CUPS will prevent printing from the system, a common task for workstation systems.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_2.1.4', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.1.5":
    title: '2.1.5 | Ensure DHCP Server is not installed'
    section: 'Special Purpose Services'
    description: |
        The Dynamic Host Configuration Protocol DHCP is a service that allows machines to be dynamically assigned IP addresses.
    remediation: |
        Run the following command to remove                  isc-dhcp-server
        :               # apt purge isc-dhcp-server
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.1.5', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.1.6":
    title: '2.1.6 | Ensure LDAP server is not installed'
    section: 'Special Purpose Services'
    description: |
        The Lightweight Directory Access Protocol LDAP was introduced as a replacement for NIS/YP. It is a service that provides
        a method for looking up information from a central database.
    remediation: |
        Run one of the following commands to remove                  slapd
        :               # apt purge slapd
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.1.6', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.1.7":
    title: '2.1.7 | Ensure NFS is not installed'
    section: 'Special Purpose Services'
    description: |
        The Network File System NFS is one of the first and most widely distributed file systems in the UNIX environment. It
        provides the ability for systems to mount file systems of other servers through the network.
    remediation: |
        Run the following command to remove                  nfs
        :               # apt purge nfs-kernel-server
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.1.7', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.1.8":
    title: '2.1.8 | Ensure DNS Server is not installed'
    section: 'Special Purpose Services'
    description: |
        The Domain Name System DNS is a hierarchical naming system that maps names to IP addresses for computers, services and
        other resources connected to a network.
    remediation: |
        Run the following commands to disable                  DNS server
        :               # apt purge bind9
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.1.8', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.1.9":
    title: '2.1.9 | Ensure FTP Server is not installed'
    section: 'Special Purpose Services'
    description: |
        The File Transfer Protocol FTP provides networked computers with the ability to transfer files. Note Additional FTP
        servers also exist and should be audited.
    remediation: |
        Run the following command to remove                  vsftpd
        :               # apt purge vsftpd
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.1.9', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.1.10":
    title: '2.1.10 | Ensure HTTP server is not installed'
    section: 'Special Purpose Services'
    description: |
        HTTP or web servers provide the ability to host web site content.
        Note Several httpd servers exist and can use other service names.                apache2
         and                nginx
         are example services that provide an HTTP server. These and other services should also be audited
    remediation: |
        Run the following command to remove                  apache
        :               # apt purge apache2
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.1.10', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.1.11":
    title: '2.1.11 | Ensure IMAP and POP3 server are not installed'
    section: 'Special Purpose Services'
    description: |
        dovecotimapd
         and              dovecotpop3d
         are an open source IMAP and POP3 server for Linux based systems.
        Note Several IMAP/POP3 servers exist and can use other service names.                courierimap
         and                cyrusimap
         are example services that provide a mail server. These and other services should also be audited.
    remediation: |
        Run one of the following commands to remove                  dovecot-imapd
         and                  dovecot-pop3d
        :               # apt purge dovecot-imapd dovecot-pop3d
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.1.11', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.1.12":
    title: '2.1.12 | Ensure Samba is not installed'
    section: 'Special Purpose Services'
    description: |
        The Samba daemon allows system administrators to configure their Linux systems to share file systems and directories
        with Windows desktops. Samba will advertise the file systems and directories via the Server Message Block SMB protocol.
        Windows desktop users will be able to mount these directories and file systems as letter drives on their systems.
    remediation: |
        Run the following command to remove                  samba
        :               # apt purge samba
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.1.12', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.1.13":
    title: '2.1.13 | Ensure HTTP Proxy Server is not installed'
    section: 'Special Purpose Services'
    description: |
        Squid is a standard proxy server used in many distributions and environments. Note Several HTTP proxy servers exist.
        These and other services should be checked
    remediation: |
        Run the following command to remove                  squid
        :               # apt purge squid
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.1.13', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.1.14":
    title: '2.1.14 | Ensure SNMP Server is not installed'
    section: 'Special Purpose Services'
    description: |
        Simple Network Management Protocol SNMP is a widely used protocol for monitoring the health and welfare of network
        equipment, computer equipment and devices like UPSs. NetSNMP is a suite of applications used to implement SNMPv1 RFC
        1157, SNMPv2 RFCs 19011908, and SNMPv3 RFCs 34113418 using both IPv4 and IPv6. Support for SNMPv2 classic a.k.a. SNMPv2
        historic  RFCs 14411452 was dropped with the 4.0 release of the UCDsnmp package. The Simple Network Management Protocol
        SNMP server is used to listen for SNMP commands from an SNMP management system, execute the commands or collect the
        information and then send results back to the requesting system.
    remediation: |
        Run the following command to remove                  snmpd
        :               # apt purge snmpd
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.1.14', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.1.15":
    title: '2.1.15 | Ensure mail transfer agent is configured for local-only mode'
    section: 'Special Purpose Services'
    description: |
        Mail Transfer Agents MTA, such as sendmail and Postfix, are used to listen for incoming mail and transfer the messages
        to the appropriate user or mail server. If the system is not intended to be a mail server, it is recommended that the
        MTA be configured to only process local mail.
    remediation: |
        Edit                  /etc/exim4/update-exim4.conf.conf
         and and or modify following lines
        to look like the lines below:
        dc_eximconfig_configtype='local'
        dc_local_interfaces='127.0.0.1 ; ::1'
        dc_readhost=''
        dc_relay_domains=''
        dc_minimaldns='false'
        dc_relay_nets=''
        dc_smarthost=''
        dc_use_split_config='false'
        dc_hide_mailname=''
        dc_mailname_in_oh='true'
        dc_localdelivery='mail_spool'
                       Restart exim4: # systemctl restart exim4
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.1.15', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.1.16":
    title: '2.1.16 | Ensure rsync service is not installed'
    section: 'Special Purpose Services'
    description: |
        The              rsync
          service can be used to synchronize files between systems over network links.
    remediation: |
        Run the following command to remove                  rsync
        :               # apt purge rsync
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.1.16', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.1.17":
    title: '2.1.17 | Ensure NIS Server is not installed'
    section: 'Special Purpose Services'
    description: |
        The Network Information Service NIS formally known as Yellow Pages is a clientserver directory service protocol for
        distributing system configuration files. The NIS server is a collection of programs that allow for the distribution of
        configuration files.
    remediation: |
        Run the following command to remove                  nis
        :               # apt purge nis
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.1.17', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.2.1":
    title: '2.2.1 | Ensure NIS Client is not installed'
    section: 'Service Clients'
    description: |
        The Network Information Service NIS, formerly known as Yellow Pages, is a clientserver directory service protocol used
        to distribute system configuration files. The NIS client was used to bind a machine to an NIS server and receive the
        distributed configuration files.
    remediation: |
        Uninstall                  nis
        :               apt purge nis
         Impact: Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them
        can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to
        prevent accidental or intentional misuse.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.2.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.2.2":
    title: '2.2.2 | Ensure rsh client is not installed'
    section: 'Service Clients'
    description: |
        The              rshclient
         package contains the client commands for the rsh services.
    remediation: |
        Uninstall                  rsh
        :               apt purge rsh-client
         Impact: Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them
        can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to
        prevent accidental or intentional misuse.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.2.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.2.3":
    title: '2.2.3 | Ensure talk client is not installed'
    section: 'Service Clients'
    description: |
        The              talk
         software makes it possible for users to send and receive messages across systems through a terminal session. The
        talk
         client, which allows initialization of talk sessions, is installed by default.
    remediation: |
        Uninstall                  talk
        :               apt purge talk
         Impact: Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them
        can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to
        prevent accidental or intentional misuse.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.2.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.2.4":
    title: '2.2.4 | Ensure telnet client is not installed'
    section: 'Service Clients'
    description: |
        The              telnet
         package contains the              telnet
         client, which allows users to start connections to other systems via the telnet protocol.
    remediation: |
        Uninstall                  telnet
        :               # apt purge telnet
         Impact: Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them
        can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to
        prevent accidental or intentional misuse.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.2.4', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.2.5":
    title: '2.2.5 | Ensure LDAP client is not installed'
    section: 'Service Clients'
    description: |
        The Lightweight Directory Access Protocol LDAP was introduced as a replacement for NIS/YP. It is a service that provides
        a method for looking up information from a central database.
    remediation: |
        Uninstall                  ldap-utils
        :               # apt purge ldap-utils
         Impact: Removing the LDAP client will prevent or inhibit using LDAP for authentication in your environment.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.2.5', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.2.6":
    title: '2.2.6 | Ensure  RPC is not installed'
    section: 'Service Clients'
    description: |
        Remote Procedure Call RPC is a method for creating low level client server applications across different system
        architectures. It requires an RPC compliant client listening on a network port. The supporting package is rpcbind.
    remediation: |
        Run the following command to remove                  rpcbind
        :               # apt purge rpcbind
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.2.6', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "2.3":
    title: '2.3 | Ensure nonessential services are removed or masked - manual'
    section: 'Services'
    description: |
        A network port is identified by its number, the associated IP address, and the type of the communication protocol such
        as TCP or UDP. A listening port is a network port on which an application or process listens on, acting as a
        communication endpoint. Each listening port can be open or closed filtered using a firewall. In general terms, an open
        port is a network port that accepts incoming packets from remote locations.
    remediation: |
        Run the following command to remove the package containing the service: # apt purge <package_name>
         OR If required packages have a dependency: Run the following command to stop and mask the service: # systemctl --now
        mask <service_name>
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_2.3', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.1.1":
    title: '3.1.1 | Disable IPv6'
    section: 'Disable unused network protocols and devices'
    description: |
        Although IPv6 has many advantages over IPv4, not all organizations have IPv6 or dual stack configurations implemented.
    remediation: |
        Use                  one
         of the two following methods to disable IPv6 on the system:               To disable IPv6 through the GRUB2 config:
        Edit                  /etc/default/grub
         and add                  ipv6.disable=1
         to the                  GRUB_CMDLINE_LINUX
         parameters:               GRUB_CMDLINE_LINUX="ipv6.disable=1"

        Run the following command to update the                  grub2
         configuration:               # update-grub
         OR To disable IPv6 through sysctl settings:
        Set the following parameters in                  /etc/sysctl.conf
         or a                  /etc/sysctl.d/*
         file:
        net.ipv6.conf.all.disable_ipv6 = 1
        net.ipv6.conf.default.disable_ipv6 = 1
                       Run the following commands to set the active kernel parameters:
        # sysctl -w net.ipv6.conf.all.disable_ipv6=1
        # sysctl -w net.ipv6.conf.default.disable_ipv6=1
        # sysctl -w net.ipv6.route.flush=1
                       Impact:
        If IPv6 is disabled through sysctl config,                    SSH X11forwarding
         may no longer function as expected. We recommend that SSH X11fowarding be disabled, but if required, the following will
        allow for                    SSH X11forwarding
         with IPv6 disabled through sysctl config:
        Add the following line the                    /etc/ssh/sshd_config
         file:                 AddressFamily inet
         Run the following command to re-start the openSSH server: # systemctl restart sshd
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_3.1.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == 1'
            - name: Undefined
              rule: 'should cmp == 1'
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'

  "3.1.2":
    title: '3.1.2 | Ensure wireless interfaces are disabled - manual'
    section: 'Disable unused network protocols and devices'
    description: |
        Wireless networking is used when wired networks are unavailable. Debian contains a wireless tool kit to allow system
        administrators to configure and use wireless networks.
    remediation: |
        Run the following script to disable any wireless interfaces:
        #!/bin/bash

        if command -v nmcli >/dev/null 2>&1 ; then
          nmcli radio all off
        else
          if [ -n "$(find /sys/class/net/*/ -type d -name wireless)" ]; then
            drivers=$(for driverdir in $(find /sys/class/net/*/ -type d -name wireless | xargs -0 dirname); do basename
        "$(readlink -f "$driverdir"/device/driver)";done | sort -u)
            for dm in $drivers; do
              echo "install $dm /bin/true" >> /etc/modprobe.d/disable_wireless.conf
            done
          fi
        fi
                       Impact: Many if not all laptop workstations and some desktop workstations will connect via wireless
        requiring these interfaces be enabled.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_3.1.2', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.2.1":
    title: '3.2.1 | Ensure packet redirect sending is disabled'
    section: 'Network Parameters (Host Only)'
    description: |
        ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router in a host
        only configuration, there is no need to send redirects.
    remediation: |
        Set the following parameters in                  /etc/sysctl.conf
         or a                  /etc/sysctl.d/*
         file:
        net.ipv4.conf.all.send_redirects = 0
        net.ipv4.conf.default.send_redirects = 0
                       Run the following commands to set the active kernel parameters:
        # sysctl -w net.ipv4.conf.all.send_redirects=0
        # sysctl -w net.ipv4.conf.default.send_redirects=0
        # sysctl -w net.ipv4.route.flush=1
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.2.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == 0'
            - name: Undefined
              rule: 'should cmp == 0'

  "3.2.2":
    title: '3.2.2 | Ensure IP forwarding is disabled'
    section: 'Network Parameters (Host Only)'
    description: |
        The              net.ipv4.ipforward
         and              net.ipv6.conf.all.forwarding
         flags are used to tell the system whether it can forward packets or not.
    remediation: |
        Run the following command to restore the default parameter and set the active kernel parameter: # grep -Els
        "^\s*net\.ipv4\.ip_forward\s*=\s*1" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf
        | while read filename; do sed -ri "s/^\s*(net\.ipv4\.ip_forward\s*)(=)(\s*\S+\b).*$/# *REMOVED* \1/" $filename; done;
        sysctl -w net.ipv4.ip_forward=0; sysctl -w net.ipv4.route.flush=1
         IF IPv6 is enabled: Run the following command to restore the default parameter and set the active kernel parameter: #
        grep -Els "^\s*net\.ipv6\.conf\.all\.forwarding\s*=\s*1" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf
        /run/sysctl.d/*.conf | while read filename; do sed -ri "s/^\s*(net\.ipv6\.conf\.all\.forwarding\s*)(=)(\s*\S+\b).*$/#
        *REMOVED* \1/" $filename; done; sysctl -w net.ipv6.conf.all.forwarding=0; sysctl -w net.ipv6.route.flush=1
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.2.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^\s*net.ipv4.ip_forward\s*=\s*0\s*$'
            - name: Undefined
              rule: 'should cmp == ^\s*\bnet\.ipv6\.conf\.all\.forwarding\s*=\s*0\s*$'
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'

  "3.3.1":
    title: '3.3.1 | Ensure source routed packets are not accepted'
    section: 'Network Parameters (Host and Router)'
    description: |
        In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In
        contrast, nonsource routed packets travel a path determined by routers in the network. In some cases, systems may not be
        routable or reachable from some locations e.g. private addresses vs. Internet routable, and so source routed packets
        would need to be used.
    remediation: |
        Set the following parameters in                  /etc/sysctl.conf
         or a                  /etc/sysctl.d/*
         file:
        net.ipv4.conf.all.accept_source_route = 0
        net.ipv4.conf.default.accept_source_route = 0
                       Run the following commands to set the active kernel parameters:
        # sysctl -w net.ipv4.conf.all.accept_source_route=0
        # sysctl -w net.ipv4.conf.default.accept_source_route=0
        # sysctl -w net.ipv4.route.flush=1
                       IF IPv6 is enabled:
        Set the following parameters in                  /etc/sysctl.conf
         or a                  /etc/sysctl.d/*
         file:
        net.ipv6.conf.all.accept_source_route = 0
        net.ipv6.conf.default.accept_source_route = 0
                       Run the following commands to set the active kernel parameters:
        # sysctl -w net.ipv6.conf.all.accept_source_route=0
        # sysctl -w net.ipv6.conf.default.accept_source_route=0
        # sysctl -w net.ipv6.route.flush=1
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.3.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == 0'
            - name: Undefined
              rule: 'should cmp == 0'
            - name: Undefined
              rule: 'should cmp == 0'
            - name: Undefined
              rule: 'should cmp == 0'
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'

  "3.3.2":
    title: '3.3.2 | Ensure ICMP redirects are not accepted'
    section: 'Network Parameters (Host and Router)'
    description: |
        ICMP redirect messages are packets that convey routing information and tell your host acting as a router to send packets
        via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By
        setting              net.ipv4.conf.all.acceptredirects
         and              net.ipv6.conf.all.acceptredirects
         to 0, the system will not accept any ICMP redirect messages, and therefore, wont allow outsiders to update the systems
        routing tables.
    remediation: |
        Set the following parameters in                  /etc/sysctl.conf
         or a                  /etc/sysctl.d/*
         file:
        net.ipv4.conf.all.accept_redirects = 0
        net.ipv4.conf.default.accept_redirects = 0
                       Run the following commands to set the active kernel parameters:
        # sysctl -w net.ipv4.conf.all.accept_redirects=0
        # sysctl -w net.ipv4.conf.default.accept_redirects=0
        # sysctl -w net.ipv4.route.flush=1
                       IF IPv6 is enabled:
        Set the following parameters in                  /etc/sysctl.conf
         or a                  /etc/sysctl.d/*
         file:
        net.ipv6.conf.all.accept_redirects = 0
        net.ipv6.conf.default.accept_redirects = 0
                       Run the following commands to set the active kernel parameters:
        # sysctl -w net.ipv6.conf.all.accept_redirects=0
        # sysctl -w net.ipv6.conf.default.accept_redirects=0
        # sysctl -w net.ipv6.route.flush=1
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.3.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == 0'
            - name: Undefined
              rule: 'should cmp == 0'
            - name: Undefined
              rule: 'should cmp == 0'
            - name: Undefined
              rule: 'should cmp == 0'
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'

  "3.3.3":
    title: '3.3.3 | Ensure secure ICMP redirects are not accepted'
    section: 'Network Parameters (Host and Router)'
    description: |
        Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list.
        It is assumed that these gateways are known to your system, and that they are likely to be secure.
    remediation: |
        Set the following parameters in                  /etc/sysctl.conf
         or a                  /etc/sysctl.d/*
         file:
        net.ipv4.conf.all.secure_redirects = 0
        net.ipv4.conf.default.secure_redirects = 0
                       Run the following commands to set the active kernel parameters:
        # sysctl -w net.ipv4.conf.all.secure_redirects=0
        # sysctl -w net.ipv4.conf.default.secure_redirects=0
        # sysctl -w net.ipv4.route.flush=1
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.3.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == 0'
            - name: Undefined
              rule: 'should cmp == 0'

  "3.3.4":
    title: '3.3.4 | Ensure suspicious packets are logged'
    section: 'Network Parameters (Host and Router)'
    description: |
        When enabled, this feature logs packets with unroutable source addresses to the kernel log.
    remediation: |
        Set the following parameters in                  /etc/sysctl.conf
         or a                  /etc/sysctl.d/*
         file:
        net.ipv4.conf.all.log_martians = 1
        net.ipv4.conf.default.log_martians = 1
                       Run the following commands to set the active kernel parameters:
        # sysctl -w net.ipv4.conf.all.log_martians=1
        # sysctl -w net.ipv4.conf.default.log_martians=1
        # sysctl -w net.ipv4.route.flush=1
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.3.4', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == 1'
            - name: Undefined
              rule: 'should cmp == 1'

  "3.3.5":
    title: '3.3.5 | Ensure broadcast ICMP requests are ignored'
    section: 'Network Parameters (Host and Router)'
    description: |
        Setting              net.ipv4.icmpechoignorebroadcasts
         to 1 will cause the system to ignore all ICMP echo and timestamp requests to broadcast and multicast addresses.
    remediation: |
        Set the following parameters in                  /etc/sysctl.conf
         or a                  /etc/sysctl.d/*
         file:               net.ipv4.icmp_echo_ignore_broadcasts = 1
         Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1
         # sysctl -w net.ipv4.route.flush=1
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.3.5', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == 1'

  "3.3.6":
    title: '3.3.6 | Ensure bogus ICMP responses are ignored'
    section: 'Network Parameters (Host and Router)'
    description: |
        Setting              icmpignoreboguserrorresponses
         to 1 prevents the kernel from logging bogus responses RFC1122 noncompliant from broadcast reframes, keeping file
        systems from filling up with useless log messages.
    remediation: |
        Set the following parameter in                  /etc/sysctl.conf
         or a                  /etc/sysctl.d/*
         file:               net.ipv4.icmp_ignore_bogus_error_responses = 1
         Run the following commands to set the active kernel parameters: # sysctl -w
        net.ipv4.icmp_ignore_bogus_error_responses=1
         # sysctl -w net.ipv4.route.flush=1
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.3.6', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == 1'

  "3.3.7":
    title: '3.3.7 | Ensure Reverse Path Filtering is enabled'
    section: 'Network Parameters (Host and Router)'
    description: |
        Setting              net.ipv4.conf.all.rpfilter
         and              net.ipv4.conf.default.rpfilter
         to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was
        valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the
        corresponding source packet came from, the packet is dropped and logged if              logmartians
         is set.
    remediation: |
        Set the following parameters in                  /etc/sysctl.conf
         or a                  /etc/sysctl.d/*
         file:
        net.ipv4.conf.all.rp_filter = 1
        net.ipv4.conf.default.rp_filter = 1
                       Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.rp_filter=1
         # sysctl -w net.ipv4.conf.default.rp_filter=1
         # sysctl -w net.ipv4.route.flush=1
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.3.7', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == 1'
            - name: Undefined
              rule: 'should cmp == 1'

  "3.3.8":
    title: '3.3.8 | Ensure TCP SYN Cookies is enabled'
    section: 'Network Parameters (Host and Router)'
    description: |
        When              tcpsyncookies
         is set, the kernel will handle TCP SYN packets normally until the halfopen connection queue is full, at which time, the
        SYN cookie functionality kicks in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply
        replies to the SYN with a SYNACK, but will include a specially crafted TCP sequence number that encodes the source and
        destination IP address and port number and the time the packet was sent. A legitimate connection would send the ACK
        packet of the three way handshake with the specially crafted sequence number. This allows the system to verify that it
        has received a valid response to a SYN cookie and allow the connection, even though there is no corresponding SYN in the
        queue.
    remediation: |
        Set the following parameters in                  /etc/sysctl.conf
         or a                  /etc/sysctl.d/*
         file:               net.ipv4.tcp_syncookies = 1
         Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.tcp_syncookies=1
         # sysctl -w net.ipv4.route.flush=1
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.3.8', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == 1'

  "3.3.9":
    title: '3.3.9 | Ensure IPv6 router advertisements are not accepted'
    section: 'Network Parameters (Host and Router)'
    description: |
        This setting disables the systems ability to accept IPv6 router advertisements.
    remediation: |
        IF IPv6 is enabled:
        Set the following parameters in                  /etc/sysctl.conf
         or a                  /etc/sysctl.d/*
         file:
        net.ipv6.conf.all.accept_ra = 0
        net.ipv6.conf.default.accept_ra = 0
                       Run the following commands to set the active kernel parameters:
        # sysctl -w net.ipv6.conf.all.accept_ra=0
        # sysctl -w net.ipv6.conf.default.accept_ra=0
        # sysctl -w net.ipv6.route.flush=1
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.3.9', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == 0'
            - name: Undefined
              rule: 'should cmp == 0'
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'

  "3.5.1":
    title: '3.5.1 | Ensure DCCP is disabled'
    section: 'Uncommon Network Protocols'
    description: |
        The Datagram Congestion Control Protocol DCCP is a transport layer protocol that supports streaming media and telephony.
        DCCP provides a way to gain access to congestion control, without having to do it at the application layer, but does not
        provide insequence delivery.
    remediation: |
        Edit or create a file in the                  /etc/modprobe.d/
         directory ending in .conf               Example: vi /etc/modprobe.d/dccp.conf Add the following line: install dccp
        /bin/true
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_3.5.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "3.5.2":
    title: '3.5.2 | Ensure SCTP is disabled'
    section: 'Uncommon Network Protocols'
    description: |
        The Stream Control Transmission Protocol SCTP is a transport layer protocol used to support message oriented
        communication, with several streams of messages in one connection. It serves a similar function as TCP and UDP,
        incorporating features of both. It is messageoriented like UDP, and ensures reliable insequence transport of messages
        with congestion control like TCP.
    remediation: |
        Edit or create a file in the                  /etc/modprobe.d/
         directory ending in .conf
        Example:                  vi /etc/modprobe.d/sctp.conf
                       and add the following line: install sctp /bin/true
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_3.5.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "3.5.3":
    title: '3.5.3 | Ensure RDS is disabled'
    section: 'Uncommon Network Protocols'
    description: |
        The Reliable Datagram Sockets RDS protocol is a transport layer protocol designed to provide lowlatency, highbandwidth
        communications between cluster nodes. It was developed by the Oracle Corporation.
    remediation: |
        Edit or create a file in the                  /etc/modprobe.d/
         directory ending in .conf
        Example:                  vi /etc/modprobe.d/rds.conf
                       and add the following line: install rds /bin/true
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_3.5.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "3.5.4":
    title: '3.5.4 | Ensure TIPC is disabled'
    section: 'Uncommon Network Protocols'
    description: |
        The Transparent InterProcess Communication TIPC protocol is designed to provide communication between cluster nodes.
    remediation: |
        Edit or create a file in the                  /etc/modprobe.d/
         directory ending in .conf
        Example:                  vi /etc/modprobe.d/tipc.conf
                       and add the following line: install tipc /bin/true
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_3.5.4', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "3.6.1.1":
    title: '3.6.1.1 | Ensure Uncomplicated Firewall is installed'
    section: 'Configure UncomplicatedFirewall'
    description: |
        The Uncomplicated Firewall ufw is a frontend for iptables and is particularly wellsuited for hostbased firewalls. ufw
        provides a framework for managing netfilter, as well as a commandline interface for manipulating the firewall
    remediation: |
        Run the following command to install Uncomplicated Firewall (UFW): apt install ufw
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.6.1.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "3.6.1.2":
    title: '3.6.1.2 | Ensure iptables-persistent is not installed'
    section: 'Configure UncomplicatedFirewall'
    description: |
        The                iptablespersistent
         is a boottime loader for netfilter rules, iptables plugin
    remediation: |
        Run the following command to remove the                    iptables-persistent
         package:                 # apt purge iptables-persistent
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.6.1.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "3.6.1.3":
    title: '3.6.1.3 | Ensure ufw service is enabled - manual'
    section: 'Configure UncomplicatedFirewall'
    description: |
        UncomplicatedFirewall ufw is a frontend for iptables. ufw provides a framework for managing netfilter, as well as a
        commandline and available graphical user interface for manipulating the firewall. Notes When running ufw enable or
        starting ufw via its initscript, ufw will flush its chains. This is required so ufw can maintain a consistent state, but
        it may drop existing connections eg ssh.  ufw does support adding rules before enabling the firewall.
        Run the following command before running                    ufw enable
        .                  ufw allow proto tcp from any to any port 22
         The rules will still be flushed, but the ssh port will be open after enabling the firewall. Please note that once ufw
        is enabled, ufw will not flush the chains when adding or removing rules but will when modifying a rule or changing the
        default policy
        By default, ufw will prompt when enabling the firewall while running under ssh. This can be disabled by using
        ufw force enable
    remediation: |
        Run the following command to enable ufw: # ufw enable
         Impact: Changing firewall settings while connected over network can result in being locked out of the system.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.6.1.3', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.6.1.4":
    title: '3.6.1.4 | Ensure loopback traffic is configured'
    section: 'Configure UncomplicatedFirewall'
    description: |
        Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback
        network 127.0.0.0/8 for IPv4 and 1/128 for IPv6.
    remediation: |
        Run the following commands to implement the loopback rules:
        # ufw allow in on lo

        # ufw allow out from lo

        # ufw deny in from 127.0.0.0/8

        # ufw deny in from ::1
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.6.1.4', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^Anywhere\s+\(v6\)\s+DENY\s+IN\s+\:\:1\s*$'
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'should cmp == ^Anywhere\s+DENY\s+IN\s+127\.0\.0\.0\/8\s*$'

  "3.6.1.5":
    title: '3.6.1.5 | Ensure outbound connections are configured - manual'
    section: 'Configure UncomplicatedFirewall'
    description: |
        Configure the firewall rules for new outbound connections. Notes Changing firewall settings while connected over network
        can result in being locked out of the system. Unlike iptables, when a new outbound rule is added, ufw automatically
        takes care of associated established connections, so no rules for the latter kind are required.
    remediation: |
        Configure ufw in accordance with site policy. The following commands will implement a policy to allow all outbound
        connections on all interfaces: # ufw allow out on all
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.6.1.5', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.6.1.6":
    title: '3.6.1.6 | Ensure firewall rules exist for all open ports - manual'
    section: 'Configure UncomplicatedFirewall'
    description: |
        Any ports that have been opened on nonloopback addresses need firewall rules to govern traffic. Notes Changing firewall
        settings while connected over network can result in being locked out of the system The remediation command opens up the
        port to traffic from all sources. Consult ufw documentation and set any restrictions in compliance with site policy
    remediation: |
        For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound
        connections: # ufw allow in <port>/<tcp or udp protocol>
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.6.1.6', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.6.1.7":
    title: '3.6.1.7 | Ensure default deny firewall policy - manual'
    section: 'Configure UncomplicatedFirewall'
    description: |
        A default deny policy on connections ensures that any unconfigured network usage will be rejected. Note Any port or
        protocol without a explicit allow before the default deny will be blocked
    remediation: |
        Run the following commands to implement a default                    deny
         policy:
        # ufw default deny incoming

        # ufw default deny outgoing

        # ufw default deny routed
                         Impact: Any port and protocol not explicitly allowed will be blocked.  The following rules should be
        considered before applying the default deny.
        ufw allow git
        ufw allow in http
        ufw allow in https
        ufw allow out 53
        ufw logging on
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.6.1.7', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^Default:\s+(deny|reject)\s+\(incoming\),\s+\S+\s+\(outgoing\),\s+\S+\s+\(routed\)\s*$'
            - name: Undefined
              rule: 'should cmp == ^Default:\s+\S+\s+\(incoming\),\s+(deny|reject)\s+\(outgoing\),\s+\S+\s+\(routed\)\s*$'
            - name: Undefined
              rule: 'should cmp == ^Default:\s+\S+\s+\(incoming\),\s+\S+\s+\(outgoing\),\s+(disabled|deny|reject)\s+\(routed\)\s*$'

  "3.6.2.1":
    title: '3.6.2.1 | Ensure nftables is installed'
    section: 'Configure nftables'
    description: |
        nftables provides a new inkernel packet classification framework that is based on a networkspecific Virtual Machine VM
        and a new nft userspace command line tool. nftables reuses the existing Netfilter subsystems such as the existing hook
        infrastructure, the connection tracking system, NAT, userspace queuing and logging subsystem. Notes nftables is
        available in Linux kernel 3.13 and newer Only one firewall utility should be installed and configured Changing firewall
        settings while connected over the network can result in being locked out of the system
    remediation: |
        Run the following command to install                    nftables
        :                 # apt install nftables
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.6.2.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "3.6.2.2":
    title: '3.6.2.2 | Ensure Uncomplicated Firewall is not installed or disabled'
    section: 'Configure nftables'
    description: |
        Uncomplicated Firewall UFW is a program for managing a netfilter firewall designed to be easy to use.
    remediation: |
        Run                    one
         of the following commands to either remove                    ufw
         or disable                    ufw

        Run the following command to remove                    ufw
        :                 # apt purge ufw

        Run the following command to disable                    ufw
        :                 # ufw disable
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.6.2.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "3.6.2.3":
    title: '3.6.2.3 | Ensure iptables are flushed - manual'
    section: 'Configure nftables'
    description: |
        nftables is a replacement for iptables, ip6tables, ebtables and arptables
    remediation: |
        Run the following commands to flush iptables: For iptables: # iptables -F
         For ip6tables: # ip6tables -F
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.6.2.3', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.6.2.4":
    title: '3.6.2.4 | Ensure a table exists - manual'
    section: 'Configure nftables'
    description: |
        Tables hold chains.  Each table only has one address family and only applies to packets of this family.  Tables can have
        one of five families.
    remediation: |
        Run the following command to create a table in nftables # nft create table inet <table name>
         Example: # nft create table inet filter
         Impact: Adding rules to a running nftables can cause loss of connectivity to the system
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.6.2.4', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^table\s+\S+\s+\S+'

  "3.6.2.5":
    title: '3.6.2.5 | Ensure base chains exist - manual'
    section: 'Configure nftables'
    description: |
        Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an  entry
        point  for packets from the networking stack, a regular chain may be used as jump target and is used for better rule
        organization.
    remediation: |
        Run the following command to create the base chains: # nft create chain inet <table name> <base chain name> { type
        filter hook <(input|forward|output)> priority 0 \; }
         Example:
        # nft create chain inet filter input { type filter hook input priority 0 \; }

        # nft create chain inet filter forward { type filter hook forward priority 0 \; }

        # nft create chain inet filter output { type filter hook output priority 0 \; }
                         Impact:
        If configuring nftables over ssh,                      creating
         a                      base chain
         with a  policy of                      drop
         will cause loss of connectivity.                   Ensure that a rule allowing ssh has been added to the base chain
        prior to setting the base chain's policy to drop
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.6.2.5', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^\s*\S+\s+\S+\s+hook\s+input'
            - name: Undefined
              rule: 'should cmp == ^\s*\S+\s+\S+\s+hook\s+forward'
            - name: Undefined
              rule: 'should cmp == ^\s*\S+\s+\S+\s+hook\s+output'

  "3.6.2.6":
    title: '3.6.2.6 | Ensure loopback traffic is configured - manual'
    section: 'Configure nftables'
    description: |
        Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback
        network
    remediation: |
        Run the following commands to implement the loopback rules: # nft add rule inet filter input iif lo accept
         # nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop
         IF IPv6 is enabled on the system: Run the following command to implement the IPv6 loopback rule: # nft add rule inet
        filter input ip6 saddr ::1 counter drop
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.6.2.6', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.6.2.7":
    title: '3.6.2.7 | Ensure outbound and established connections are configured - manual'
    section: 'Configure nftables'
    description: |
        Configure the firewall rules for new outbound, and established connections
    remediation: |
        Configure nftables in accordance with site policy. The following commands will implement a policy to allow all outbound
        connections and all established connections:
        # nft add rule inet filter input ip protocol tcp ct state established accept

        # nft add rule inet filter input ip protocol udp ct state established accept

        # nft add rule inet filter input ip protocol icmp ct state established accept

        # nft add rule inet filter output ip protocol tcp ct state new,related,established accept

        # nft add rule inet filter output ip protocol udp ct state new,related,established accept

        # nft add rule inet filter output ip protocol icmp ct state new,related,established accept
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.6.2.7', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.6.2.8":
    title: '3.6.2.8 | Ensure default deny firewall policy - manual'
    section: 'Configure nftables'
    description: |
        Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.
    remediation: |
        Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP
        policy: # nft chain <table family> <table name> <chain name> { policy drop \; }
         Example:
        # nft chain inet filter input { policy drop \; }

        # nft chain inet filter forward { policy drop \; }

        # nft chain inet filter output { policy drop \; }
                         Impact: If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss
        of connectivity. Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's
        policy to drop
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.6.2.8', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == input'
            - name: Undefined
              rule: 'should cmp == forward'
            - name: Undefined
              rule: 'should cmp == output'

  "3.6.2.9":
    title: '3.6.2.9 | Ensure nftables service is enabled'
    section: 'Configure nftables'
    description: |
        The nftables service allows for the loading of nftables rulesets during boot, or starting on the nftables service
    remediation: |
        Run the following command to enable the nftables service: # systemctl enable nftables
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.6.2.9', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "3.6.2.10":
    title: '3.6.2.10 | Ensure nftables rules are permanent'
    section: 'Configure nftables'
    description: |
        nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames.
        The nftables service reads the                /etc/nftables.conf
         file for a nftables file or files to include in the nftables ruleset.             A nftables ruleset containing the
        input, forward, and output base chains allow network traffic to be filtered.
    remediation: |
        Edit the                    /etc/nftables.conf
         file and un-comment or add a line with                    include <Absolute path to nftables rules file>
         for each nftables file you want included in the nftables ruleset on boot                 Example: # vi
        /etc/nftables.conf
         Add the line: include "/etc/nftables.rules"
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.6.2.10', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "3.6.3.1.1":
    title: '3.6.3.1.1 | Ensure iptables packages are installed'
    section: 'Configure software'
    description: |
        iptables is a utility program that allows a system administrator to configure the tables provided by the Linux kernel
        firewall, implemented as different Netfilter modules, and the chains and rules it stores. Different kernel modules and
        programs are used for different protocols iptables applies to IPv4, ip6tables to IPv6, arptables to ARP, and ebtables to
        Ethernet frames.
    remediation: |
        Run the following command to install                      iptables
         and                      iptables-persistent
                           # apt install iptables iptables-persistent
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.6.3.1.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "3.6.3.1.2":
    title: '3.6.3.1.2 | Ensure nftables is not installed'
    section: 'Configure software'
    description: |
        nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames
        and is the successor to iptables.
    remediation: |
        Run the following command to remove                      nftables
        :                   # apt purge nftables
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.6.3.1.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "3.6.3.1.3":
    title: '3.6.3.1.3 | Ensure Uncomplicated Firewall is not installed or disabled'
    section: 'Configure software'
    description: |
        Uncomplicated Firewall UFW is a program for managing a netfilter firewall designed to be easy to use. Uses a commandline
        interface consisting of a small number of simple commands Uses iptables for configuration
    remediation: |
        Run                      one
         of the following commands to either remove                      ufw
         or stop and mask                      ufw

        Run the following command to remove                      ufw
        :                   # apt purge ufw
         OR
        Run the following commands to disable                      ufw
        :                   # ufw disable
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.6.3.1.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "3.6.3.2.1":
    title: '3.6.3.2.1 | Ensure default deny firewall policy - manual'
    section: 'Configure IPv4 iptables'
    description: |
        A default deny all policy on connections ensures that any unconfigured network usage will be rejected. Notes Changing
        firewall settings while connected over network can result in being locked out of the system Remediation will only affect
        the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well
    remediation: |
        Run the following commands to implement a default DROP policy:
        # iptables -P INPUT DROP
        # iptables -P OUTPUT DROP
        # iptables -P FORWARD DROP
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.6.3.2.1', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^\s*Chain\s+INPUT\s+\(policy\s+(DROP|REJECT)\)\s*(\s+#.*)?$'
            - name: Undefined
              rule: 'should cmp == ^\s*Chain\s+FORWARD\s+\(policy (DROP|REJECT)\)\s*(\s+#.*)?$'
            - name: Undefined
              rule: 'should cmp == ^\s*Chain\s+OUTPUT\s+\(policy (DROP|REJECT)\)\s*(\s+#.*)?$'

  "3.6.3.2.2":
    title: '3.6.3.2.2 | Ensure loopback traffic is configured - manual'
    section: 'Configure IPv4 iptables'
    description: |
        Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback
        network 127.0.0.0/8. Notes Changing firewall settings while connected over network can result in being locked out of the
        system Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall
        management to apply on boot as well
    remediation: |
        Run the following commands to implement the loopback rules:
        # iptables -A INPUT -i lo -j ACCEPT
        # iptables -A OUTPUT -o lo -j ACCEPT
        # iptables -A INPUT -s 127.0.0.0/8 -j DROP
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.6.3.2.2', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^\s*\S+\s+\S+\s+ACCEPT\s+all\s+--\s+lo\s+\*\s+0\.0\.0\.0\/0\s+0\.0\.0\.0\/0\s*\s*(\s+#.*)?$'
            - name: Undefined
              rule: 'should cmp == ^\s*\S+\s+\S+\s+DROP\s+all\s+--\s+\*\s+\*\s+127\.0\.0\.0\/8\s+0\.0\.0\.0\/0\s*\s*(\s+#.*)?$'
            - name: Undefined
              rule: 'should cmp == ^\s*\S+\s+\S+\s+ACCEPT\s+all\s+--\s+\*\s+lo\s+0\.0\.0\.0\/0\s+0\.0\.0\.0\/0\s*\s*(\s+#.*)?$'

  "3.6.3.2.3":
    title: '3.6.3.2.3 | Ensure outbound and established connections are configured - manual'
    section: 'Configure IPv4 iptables'
    description: |
        Configure the firewall rules for new outbound, and established connections. Notes Changing firewall settings while
        connected over network can result in being locked out of the system Remediation will only affect the active system
        firewall, be sure to configure the default policy in your firewall management to apply on boot as well
    remediation: |
        Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound
        connections and all established connections:
        # iptables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
        # iptables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
        # iptables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
        # iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
        # iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
        # iptables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.6.3.2.3', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.6.3.2.4":
    title: '3.6.3.2.4 | Ensure firewall rules exist for all open ports'
    section: 'Configure IPv4 iptables'
    description: |
        Any ports that have been opened on nonloopback addresses need firewall rules to govern traffic. Notes Changing firewall
        settings while connected over network can result in being locked out of the system Remediation will only affect the
        active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well The
        remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any
        restrictions in compliance with site policy
    remediation: |
        For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound
        connections: # iptables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.6.3.2.4', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "3.6.3.3.1":
    title: '3.6.3.3.1 | Ensure IPv6 default deny firewall policy'
    section: 'Configure IPv6  ip6tables'
    description: |
        A default deny all policy on connections ensures that any unconfigured network usage will be rejected. Notes Changing
        firewall settings while connected over network can result in being locked out of the system Remediation will only affect
        the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well
    remediation: |
        Run the following commands to implement a default DROP policy:
        # ip6tables -P INPUT DROP
        # ip6tables -P OUTPUT DROP
        # ip6tables -P FORWARD DROP
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.6.3.3.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^\s*Chain\s+INPUT\s+\(policy (DROP|REJECT)\)\s*(\s+#.*)?$'
            - name: Undefined
              rule: 'should cmp == ^\s*Chain\s+FORWARD\s+\(policy (DROP|REJECT)\)\s*(\s+#.*)?$'
            - name: Undefined
              rule: 'should cmp == ^\s*Chain\s+OUTPUT\s+\(policy (DROP|REJECT)\)\s*(\s+#.*)?$'
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'

  "3.6.3.3.2":
    title: '3.6.3.3.2 | Ensure IPv6 loopback traffic is configured - manual'
    section: 'Configure IPv6  ip6tables'
    description: |
        Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback
        network 1. Notes Changing firewall settings while connected over network can result in being locked out of the system
        Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall
        management to apply on boot as well
    remediation: |
        Run the following commands to implement the loopback rules:
        # ip6tables -A INPUT -i lo -j ACCEPT
        # ip6tables -A OUTPUT -o lo -j ACCEPT
        # ip6tables -A INPUT -s ::1 -j DROP
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.6.3.3.2', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.6.3.3.3":
    title: '3.6.3.3.3 | Ensure IPv6 outbound and established connections are configured - manual'
    section: 'Configure IPv6  ip6tables'
    description: |
        Configure the firewall rules for new outbound, and established IPv6 connections. Notes Changing firewall settings while
        connected over network can result in being locked out of the system Remediation will only affect the active system
        firewall, be sure to configure the default policy in your firewall management to apply on boot as well
    remediation: |
        Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound
        connections and all established connections:
        # ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
        # ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
        # ip6tables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
        # ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
        # ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
        # ip6tables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.6.3.3.3', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.6.3.3.4":
    title: '3.6.3.3.4 | Ensure IPv6 firewall rules exist for all open ports - manual'
    section: 'Configure IPv6  ip6tables'
    description: |
        Any ports that have been opened on nonloopback addresses need firewall rules to govern traffic. Notes Changing firewall
        settings while connected over network can result in being locked out of the system Remediation will only affect the
        active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well The
        remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any
        restrictions in compliance with site policy
    remediation: |
        For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound
        connections: # ip6tables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.6.3.3.4', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "4.1.1.1":
    title: '4.1.1.1 | Ensure auditd is installed'
    section: 'Ensure auditing is enabled'
    description: |
        auditd is the userspace component to the Linux Auditing System. Its responsible for writing audit records to the disk
    remediation: |
        Run the following command to Install auditd # apt install auditd audispd-plugins
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1.1.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "4.1.1.2":
    title: '4.1.1.2 | Ensure auditd service is enabled'
    section: 'Ensure auditing is enabled'
    description: |
        Enable and start the                auditd
         daemon to record system events.
    remediation: |
        Run the following command to enable                    auditd
         :                 # systemctl --now enable auditd
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1.1.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "4.1.1.3":
    title: '4.1.1.3 | Ensure auditing for processes that start prior to auditd is enabled'
    section: 'Ensure auditing is enabled'
    description: |
        Configure                grub
         so that processes that are capable of being audited can be audited even if they start up prior to                auditd
         startup.
        Note This recommendation is designed around the grub bootloader, if LILO or another bootloader is in use in your
        environment enact equivalent settings. Replace                  /boot/grub/grub.cfg
         with the appropriate grub configuration file for your environment.
    remediation: |
        Edit                    /etc/default/grub
         and add audit=1 to GRUB_CMDLINE_LINUX:                 GRUB_CMDLINE_LINUX="audit=1"

        Run the following command to update the                    grub2
         configuration:                 # update-grub
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1.1.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'

  "4.1.1.4":
    title: '4.1.1.4 | Ensure audit backlog limit is sufficient'
    section: 'Ensure auditing is enabled'
    description: |
        The backlog limit has a default setting of 64
    remediation: |
        Edit /etc/default/grub and add                    audit_backlog_limit=<BACKLOG SIZE>
         to GRUB_CMDLINE_LINUX:                 Example: GRUB_CMDLINE_LINUX="audit_backlog_limit=8192"
         Run the following command to update the grub2 configuration: # update-grub
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1.1.4', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'

  "4.1.2.1":
    title: '4.1.2.1 | Ensure audit log storage size is configured'
    section: 'Configure Data Retention'
    description: |
        Configure the maximum size of the audit log file. Once the log reaches the maximum size, it will be rotated and a new
        log file will be started. Notes The maxlogfile parameter is measured in megabytes Other methods of log rotation may be
        appropriate based on site policy. One example is timebased rotation strategies which dont have native support in auditd
        configurations Manual audit of custom configurations should be evaluated for effectiveness and completeness
    remediation: |
        Set the following parameter in                    /etc/audit/auditd.conf
          in accordance with site policy:                 max_log_file = <MB>
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1.2.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "4.1.2.2":
    title: '4.1.2.2 | Ensure audit logs are not automatically deleted'
    section: 'Configure Data Retention'
    description: |
        The                maxlogfileaction
          setting determines how to handle the audit log file reaching the max file size. A value of                keeplogs
          will rotate the logs but never delete old logs.
    remediation: |
        Set the following parameter in                    /etc/audit/auditd.conf:
                         max_log_file_action = keep_logs
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1.2.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "4.1.2.3":
    title: '4.1.2.3 | Ensure system is disabled when audit logs are full'
    section: 'Configure Data Retention'
    description: |
        The                auditd
         daemon can be configured to halt the system when the audit logs are full.
    remediation: |
        Set the following parameters in                    /etc/audit/auditd.conf:

        space_left_action = email
        action_mail_acct = root
        admin_space_left_action = halt
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1.2.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "4.1.3":
    title: '4.1.3 | Ensure events that modify date and time information are collected'
    section: 'Configure System Accounting (auditd)'
    description: |
        Capture events where the system date and/or time has been modified. The parameters in this section are set to determine
        if the              adjtimex
         tune kernel clock,              settimeofday
         Set time, using timeval and timezone structures              stime
         using seconds since 1/1/1970 or              clocksettime
         allows for the setting of several internal clocks and timers system calls have been executed and always write an audit
        record to the              /var/log/audit.log
          file upon exit, tagging the records with the identifier timechange           Note Reloading the auditd config to set
        active settings requires the auditd service to be restarted, and may require a system reboot.
    remediation: |
        For 32 bit systems Edit or create a file in the                  /etc/audit/rules.d/
         directory ending in                  .rules

        Example:                    vi /etc/audit/rules.d/time-change.rules
                         Add the following lines:
        -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
        -a always,exit -F arch=b32 -S clock_settime -k time-change
        -w /etc/localtime -p wa -k time-change

        For 64 bit systems Edit or create a file in the                  /etc/audit/rules.d/
         directory ending in                  .rules

        Example:                    vi /etc/audit/rules.d/time-change.rules
                         Add the following lines:
        -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
        -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
        -a always,exit -F arch=b64 -S clock_settime -k time-change
        -a always,exit -F arch=b32 -S clock_settime -k time-change
        -w /etc/localtime -p wa -k time-change
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^-a\s+(always,exit|exit,always)\s+-F\s+arch=b32\s+-S\s+(stime|settimeofday|adjtimex),(?!\2)(stime|settimeofday|adjtimex),(?!(\2|\3))(stime|settimeofday|adjtimex)\s+-F\s+key=\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^-a\s+(always,exit|exit,always)\s+-F\s+arch=b32\s+-S\s+clock_settime\s+-F\s+key=\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^-w \/etc\/localtime -p wa -k \S+ *$'
            - name: Undefined
              rule: 'should cmp == ^-a (always,exit|exit,always) -F arch=b64 -S (adjtimex,settimeofday|settimeofday,adjtimex) -F key=\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^-a\s+(always,exit|exit,always)\s+-F\s+arch=b64\s+-S\s+clock_settime\s+-F\s+key=\S+ *$'

  "4.1.4":
    title: '4.1.4 | Ensure events that modify usergroup information are collected'
    section: 'Configure System Accounting (auditd)'
    description: |
        Record events affecting the              group
         ,              passwd
         user IDs,              shadow
         and              gshadow
         passwords or              /etc/security/opasswd
         old passwords, based on remember parameter in the PAM configuration files. The parameters in this section will watch
        the files to see if they have been opened for write or have had attribute changes e.g. permissions and tag them with the
        identifier identity in the audit log file.           Note Reloading the auditd config to set active settings requires
        the auditd service to be restarted, and may require a system reboot.
    remediation: |
        Edit or create a file in the                  /etc/audit/rules.d/
         directory ending in                  .rules
        :
        Example:                    vi /etc/audit/rules.d/identity.rules
                         Add the following lines:
        -w /etc/group -p wa -k identity
        -w /etc/passwd -p wa -k identity
        -w /etc/gshadow -p wa -k identity
        -w /etc/shadow -p wa -k identity
        -w /etc/security/opasswd -p wa -k identity
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1.4', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^-w\s+\/etc\/security\/opasswd\s+-p\s+wa\s+-k\s+\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^-w\s+\/etc\/group\s+-p\s+wa\s+-k\s+\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^-w \/etc\/passwd -p wa -k \S+ *$'
            - name: Undefined
              rule: 'should cmp == ^-w \/etc\/gshadow -p wa -k \S+ *$'
            - name: Undefined
              rule: 'should cmp == ^-w \/etc\/shadow -p wa -k \S+ *$'

  "4.1.5":
    title: '4.1.5 | Ensure events that modify the systems network environment are collected'
    section: 'Configure System Accounting (auditd)'
    description: |
        Record changes to network environment files or system calls. The below parameters monitor the sethostname set the
        systems host name or setdomainname set the systems domainname system calls, and write an audit event on system call
        exit. The other parameters monitor the              /etc/issue
         and              /etc/issue.net
         files messages displayed prelogin,              /etc/hosts
         file containing host names and associated IP addresses and              /etc/network
         directory containing network interface scripts and configurations files.           Note Reloading the auditd config to
        set active settings requires the auditd service to be restarted, and may require a system reboot.
    remediation: |
        For 32 bit systems Edit or create a file in the                  /etc/audit/rules.d/
         directory ending in                  .rules

        Example:                    vi /etc/audit/rules.d/system-locale.rules
                         Add the following lines:
        -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
        -w /etc/issue -p wa -k system-locale
        -w /etc/issue.net -p wa -k system-locale
        -w /etc/hosts -p wa -k system-locale
        -w /etc/network -p wa -k system-locale

        For 64 bit systems Edit or create a file in the                  /etc/audit/rules.d/
         directory ending in                  .rules

        Example:                    vi /etc/audit/rules.d/system-locale.rules
                         Add the following lines:
        -a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale
        -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
        -w /etc/issue -p wa -k system-locale
        -w /etc/issue.net -p wa -k system-locale
        -w /etc/hosts -p wa -k system-locale
        -w /etc/network -p wa -k system-locale
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1.5', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^-a always,exit -F arch=b32 -S (sethostname,setdomainname|setdomainname,sethostname) -F key=\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^-w /etc/issue -p wa -k \S+ *$'
            - name: Undefined
              rule: 'should cmp == ^-w \/etc\/issue.net -p wa -k \S+ *$'
            - name: Undefined
              rule: 'should cmp == ^-w \/etc\/hosts -p wa -k \S+ *$'
            - name: Undefined
              rule: 'should cmp == ^-w \/etc\/network -p wa -k \S+ *$'
            - name: Undefined
              rule: 'should cmp == ^-a always,exit -F arch=b64 -S (sethostname,setdomainname|setdomainname,sethostname) -F key=\S+ *$'

  "4.1.6":
    title: '4.1.6 | Ensure events that modify the systems Mandatory Access Controls are collected'
    section: 'Configure System Accounting (auditd)'
    description: |
        Monitor AppArmor mandatory access controls. The parameters below monitor any write access potential additional, deletion
        or modification of files in the directory or attribute changes to              /etc/apparmor
         and              /etc/apparmor.d
         directories.           Note Reloading the auditd config to set active settings requires the auditd service to be
        restarted, and may require a system reboot.
    remediation: |
        Edit or create a file in the                  /etc/audit/rules.d/
         directory ending in                  .rules

        Example:                    vi /etc/audit/rules.d/MAC-policy.rules
                         Add the following lines:
        -w /etc/apparmor/ -p wa -k MAC-policy
        -w /etc/apparmor.d/ -p wa -k MAC-policy
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1.6', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^-w \/etc\/apparmor(\/)* -p wa -k \S+$'
            - name: Undefined
              rule: 'should cmp == ^-w \/etc\/apparmor.d(\/)* -p wa -k \S+$'

  "4.1.7":
    title: '4.1.7 | Ensure login and logout events are collected'
    section: 'Configure System Accounting (auditd)'
    description: |
        Monitor login and logout events. The parameters below track changes to files associated with login/logout events. The
        file              /var/log/faillog
         tracks failed events from login. The file              /var/log/lastlog
         maintain records of the last time a user successfully logged in. The file              /var/log/tallylog
          maintains records of failures via the              pamtally2
         module           Note Reloading the auditd config to set active settings requires the auditd service to be restarted,
        and may require a system reboot.
    remediation: |
        Edit or create a file in the                  /etc/audit/rules.d/
         directory ending in                  .rules
        :
        Example:                    vi /etc/audit/rules.d/logins.rules
                         Add the following lines:
        -w /var/log/faillog -p wa -k logins
        -w /var/log/lastlog -p wa -k logins
        -w /var/log/tallylog -p wa -k logins
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1.7', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^-w \/var\/log\/faillog -p wa -k \S+ *$'
            - name: Undefined
              rule: 'should cmp == ^-w \/var\/log\/tallylog -p wa -k \S+ *$'
            - name: Undefined
              rule: 'should cmp == ^-w \/var\/log\/lastlog -p wa -k \S+ *$'

  "4.1.8":
    title: '4.1.8 | Ensure session initiation information is collected'
    section: 'Configure System Accounting (auditd)'
    description: |
        Monitor session initiation events. The parameters in this section track changes to the files associated with session
        events. The file              /var/run/utmp
         tracks all currently logged in users. All audit records will be tagged with the identifier session.  The
        /var/log/wtmp
         file tracks logins, logouts, shutdown, and reboot events.  The file              /var/log/btmp
         keeps track of failed login attempts and can be read by entering the command              /usr/bin/last f /var/log/btmp
         . All audit records will be tagged with the identifier logins.           Notes
        The                  last
         command can be used to read                  /var/log/wtmp
                          last
         with no parameters and                  /var/run/utmp
                          last f /var/run/utmp
                       Reloading the auditd config to set active settings requires the auditd service to be restarted, and may
        require a system reboot.
    remediation: |
        Edit or create a file in the                  /etc/audit/rules.d/
         directory ending in                  .rules
        :
        Example:                    vi /etc/audit/rules.d/session.rules
                         Add the following lines:
        -w /var/run/utmp -p wa -k session
        -w /var/log/wtmp -p wa -k logins
        -w /var/log/btmp -p wa -k logins
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1.8', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^-w \/var\/log\/btmp -p wa -k \S+ *$'
            - name: Undefined
              rule: 'should cmp == ^-w \/var\/run\/utmp -p wa -k \S+ *$'
            - name: Undefined
              rule: 'should cmp == ^-w \/var\/log\/wtmp -p wa -k \S+ *$'

  "4.1.9":
    title: '4.1.9 | Ensure discretionary access control permission modification events are collected - manual'
    section: 'Configure System Accounting (auditd)'
    description: |
        Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for
        system calls that affect file permissions and attributes. The              chmod
         ,              fchmod
         and              fchmodat
          system calls affect the permissions associated with a file. The              chown
         ,              fchown
         ,              fchownat
         and              lchown
          system calls affect owner and group attributes on a file. The              setxattr
         ,              lsetxattr
         ,              fsetxattr
         set extended file attributes and              removexattr
         ,              lremovexattr
         ,              fremovexattr
         remove extended file attributes control extended file attributes. In all cases, an audit record will only be written
        for nonsystem user ids auid  1000 and will ignore Daemon events auid  4294967295. All audit records will be tagged with
        the identifier permmod.           Notes Systems may have been customized to change the default UIDMIN.  To confirm the
        UIDMIN for your system, run the following command awk /\sUIDMIN/print 2 /etc/login.defs

        If your systems UIDMIN is not                  1000
        , replace                  audit1000
         with                  auditUIDMIN for your system
         in the Audit and Remediation procedures.               Reloading the auditd config to set active settings requires the
        auditd service to be restarted, and may require a system reboot.
    remediation: |
        For 32 bit systems Edit or create a file in the                  /etc/audit/rules.d/
         directory ending in                  .rules
        :
        Example:                    vi /etc/audit/rules.d/perm_mod.rules
                         Add the following lines:
        -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
        -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
        -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F
        auid>=1000 -F auid!=4294967295 -k perm_mod

        For 64 bit systems Edit or create a file in the                  /etc/audit/rules.d/
         directory ending in                  .rules

        Example:                    vi /etc/audit/rules.d/perm_mod.rules
                         Add the following lines:
        -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
        -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
        -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
        -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
        -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F
        auid>=1000 -F auid!=4294967295 -k perm_mod
        -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F
        auid>=1000 -F auid!=4294967295 -k perm_mod
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1.9', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b32\s+(?!(?:\2|\3))(-S\s+chmod\s+|-S\s+fchmod\s+|-S\s+fchmodat\s+)(?!(?:\1|\3))(-S\s+chmod\s+|-S\s+fchmod\s+|-S\s+fchmodat\s+)(?!(?:\1|\2))(-S\s+chmod\s+|-S\s+fchmod\s+|-S\s+fchmodat\s+)-F\s+auid>=1000\s+-F\s+auid!=4294967295\s+-k\s+\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b32\s+(?!(?:\2|\3|\4))(-S\s+chown\s+|-S\s+fchown\s+|-S\s+fchownat\s+|-S\s+lchown\s+)(?!(?:\1|\3|\4))(-S\s+chown\s+|-S\s+fchown\s+|-S\s+fchownat\s+|-S\s+lchown\s+)(?!(?:\1|\2|\4))(-S\s+chown\s+|-S\s+fchown\s+|-S\s+fchownat\s+|-S\s+lchown\s+)(?!(?:\1|\2|\3))(-S\s+chown\s+|-S\s+fchown\s+|-S\s+fchownat\s+|-S\s+lchown\s+)-F\s+auid>=1000\s+-F\s+auid!=4294967295\s+-k\s+\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b32\s+(?!(?:\2|\3|\4|\5|\6))(-S\s+setxattr\s+|-S\s+lsetxattr\s+|-S\s+fsetxattr\s+|-S\s+removexattr\s+|-S\s+lremovexattr\s+|-S\s+fremovexattr\s+)(?!(?:\1|\3|\4|\5|\6))(-S\s+setxattr\s+|-S\s+lsetxattr\s+|-S\s+fsetxattr\s+|-S\s+removexattr\s+|-S\s+lremovexattr\s+|-S\s+fremovexattr\s+)(?!(?:\1|\2|\4|\5|\6))(-S\s+setxattr\s+|-S\s+lsetxattr\s+|-S\s+fsetxattr\s+|-S\s+removexattr\s+|-S\s+lremovexattr\s+|-S\s+fremovexattr\s+)(?!(?:\1|\2|\3|\5|\6))(-S\s+setxattr\s+|-S\s+lsetxattr\s+|-S\s+fsetxattr\s+|-S\s+removexattr\s+|-S\s+lremovexattr\s+|-S\s+fremovexattr\s+)(?!(?:\1|\2|\3|\4|\6))(-S\s+setxattr\s+|-S\s+lsetxattr\s+|-S\s+fsetxattr\s+|-S\s+removexattr\s+|-S\s+lremovexattr\s+|-S\s+fremovexattr\s+)(?!(?:\1|\2|\3|\4|\5))(-S\s+setxattr\s+|-S\s+lsetxattr\s+|-S\s+fsetxattr\s+|-S\s+removexattr\s+|-S\s+lremovexattr\s+|-S\s+fremovexattr\s+)-F\s+auid>=1000\s+-F\s+auid!=4294967295\s+-k\s+\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b32\s+-S\s+(?!(?:\2|\3|\4|\5|\6))(setxattr[,\s]|lsetxattr[,\s]|fsetxattr[,\s]|removexattr[,\s]|lremovexattr[,\s]|fremovexattr[,\s])(?!(?:\1|\3|\4|\5|\6))(setxattr[,\s]|lsetxattr[,\s]|fsetxattr[,\s]|removexattr[,\s]|lremovexattr[,\s]|fremovexattr[,\s])(?!(?:\1|\2|\4|\5|\6))(setxattr[,\s]|lsetxattr[,\s]|fsetxattr[,\s]|removexattr[,\s]|lremovexattr[,\s]|fremovexattr[,\s])(?!(?:\1|\2|\3|\5|\6))(setxattr[,\s]|lsetxattr[,\s]|fsetxattr[,\s]|removexattr[,\s]|lremovexattr[,\s]|fremovexattr[,\s])(?!(?:\1|\2|\3|\4|\6))(setxattr[,\s]|lsetxattr[,\s]|fsetxattr[,\s]|removexattr[,\s]|lremovexattr[,\s]|fremovexattr[,\s])(?!(?:\1|\2|\3|\4|\5))(setxattr[,\s]|lsetxattr[,\s]|fsetxattr[,\s]|removexattr[,\s]|lremovexattr[,\s]|fremovexattr[,\s])-F\s+auid>=1000\s+-F\s+auid!=-1\s+-F\s+key=\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b32\s+-S\s+(?!(?:\2|\3))(chmod[,\s]|fchmod[,\s]|fchmodat[,\s])(?!(?:\1|\3))(chmod[,\s]|fchmod[,\s]|fchmodat[,\s])(?!(?:\1|\2))(chmod[,\s]|fchmod[,\s]|fchmodat[,\s])-F\s+auid>=1000\s+-F\s+auid!=-1\s+-F\s+key=\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b32\s+-S\s+(?!(?:\2|\3|\4))(lchown[,\s]|fchown[,\s]|chown[,\s]|fchownat[,\s])(?!(?:\1|\3|\4))(lchown[,\s]|fchown[,\s]|chown[,\s]|fchownat[,\s])(?!(?:\1|\2|\4))(lchown[,\s]|fchown[,\s]|chown[,\s]|fchownat[,\s])(?!(?:\1|\2|\3))(lchown[,\s]|fchown[,\s]|chown[,\s]|fchownat[,\s])-F\s+auid>=1000\s+-F\s+auid!=-1\s+-F\s+key=\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b64\s+(?!(?:\2|\3))(-S\s+chmod\s+|-S\s+fchmod\s+|-S\s+fchmodat\s+)(?!(?:\1|\3))(-S\s+chmod\s+|-S\s+fchmod\s+|-S\s+fchmodat\s+)(?!(?:\1|\2))(-S\s+chmod\s+|-S\s+fchmod\s+|-S\s+fchmodat\s+)-F\s+auid>=1000\s+-F\s+auid!=4294967295\s+-k\s+\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b64\s+(?!(?:\2|\3|\4))(-S\s+chown\s+|-S\s+fchown\s+|-S\s+fchownat\s+|-S\s+lchown\s+)(?!(?:\1|\3|\4))(-S\s+chown\s+|-S\s+fchown\s+|-S\s+fchownat\s+|-S\s+lchown\s+)(?!(?:\1|\2|\4))(-S\s+chown\s+|-S\s+fchown\s+|-S\s+fchownat\s+|-S\s+lchown\s+)(?!(?:\1|\2|\3))(-S\s+chown\s+|-S\s+fchown\s+|-S\s+fchownat\s+|-S\s+lchown\s+)-F\s+auid>=1000\s+-F\s+auid!=4294967295\s+-k\s+\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b64\s+(?!(?:\2|\3|\4|\5|\6))(-S\s+setxattr\s+|-S\s+lsetxattr\s+|-S\s+fsetxattr\s+|-S\s+removexattr\s+|-S\s+lremovexattr\s+|-S\s+fremovexattr\s+)(?!(?:\1|\3|\4|\5|\6))(-S\s+setxattr\s+|-S\s+lsetxattr\s+|-S\s+fsetxattr\s+|-S\s+removexattr\s+|-S\s+lremovexattr\s+|-S\s+fremovexattr\s+)(?!(?:\1|\2|\4|\5|\6))(-S\s+setxattr\s+|-S\s+lsetxattr\s+|-S\s+fsetxattr\s+|-S\s+removexattr\s+|-S\s+lremovexattr\s+|-S\s+fremovexattr\s+)(?!(?:\1|\2|\3|\5|\6))(-S\s+setxattr\s+|-S\s+lsetxattr\s+|-S\s+fsetxattr\s+|-S\s+removexattr\s+|-S\s+lremovexattr\s+|-S\s+fremovexattr\s+)(?!(?:\1|\2|\3|\4|\6))(-S\s+setxattr\s+|-S\s+lsetxattr\s+|-S\s+fsetxattr\s+|-S\s+removexattr\s+|-S\s+lremovexattr\s+|-S\s+fremovexattr\s+)(?!(?:\1|\2|\3|\4|\5))(-S\s+setxattr\s+|-S\s+lsetxattr\s+|-S\s+fsetxattr\s+|-S\s+removexattr\s+|-S\s+lremovexattr\s+|-S\s+fremovexattr\s+)-F\s+auid>=1000\s+-F\s+auid!=4294967295\s+-k\s+\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b64\s+-S\s+(?!(?:\2|\3|\4))(chown[,\s]|fchown[,\s]|lchown[,\s]|fchownat[,\s])(?!(?:\1|\3|\4))(chown[,\s]|fchown[,\s]|lchown[,\s]|fchownat[,\s])(?!(?:\1|\2|\4))(chown[,\s]|fchown[,\s]|lchown[,\s]|fchownat[,\s])(?!(?:\1|\2|\3))(chown[,\s]|fchown[,\s]|lchown[,\s]|fchownat[,\s])-F\s+auid>=1000\s+-F\s+auid!=-1\s+-F\s+key=\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b64\s+-S\s+(?!(?:\2|\3|\4|\5|\6))(setxattr[,\s]|lsetxattr[,\s]|fsetxattr[,\s]|removexattr[,\s]|lremovexattr[,\s]|fremovexattr[,\s])(?!(?:\1|\3|\4|\5|\6))(setxattr[,\s]|lsetxattr[,\s]|fsetxattr[,\s]|removexattr[,\s]|lremovexattr[,\s]|fremovexattr[,\s])(?!(?:\1|\2|\4|\5|\6))(setxattr[,\s]|lsetxattr[,\s]|fsetxattr[,\s]|removexattr[,\s]|lremovexattr[,\s]|fremovexattr[,\s])(?!(?:\1|\2|\3|\5|\6))(setxattr[,\s]|lsetxattr[,\s]|fsetxattr[,\s]|removexattr[,\s]|lremovexattr[,\s]|fremovexattr[,\s])(?!(?:\1|\2|\3|\4|\6))(setxattr[,\s]|lsetxattr[,\s]|fsetxattr[,\s]|removexattr[,\s]|lremovexattr[,\s]|fremovexattr[,\s])(?!(?:\1|\2|\3|\4|\5))(setxattr[,\s]|lsetxattr[,\s]|fsetxattr[,\s]|removexattr[,\s]|lremovexattr[,\s]|fremovexattr[,\s])-F\s+auid>=1000\s+-F\s+auid!=-1\s+-F\s+key=\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b64\s+-S\s+(?!(?:\2|\3))(chmod[,\s]|fchmod[,\s]|fchmodat[,\s])(?!(?:\1|\3))(chmod[,\s]|fchmod[,\s]|fchmodat[,\s])(?!(?:\1|\2))(chmod[,\s]|fchmod[,\s]|fchmodat[,\s])-F\s+auid>=1000\s+-F\s+auid!=-1\s+-F\s+key=\S+ *$'

  "4.1.10":
    title: '4.1.10 | Ensure unsuccessful unauthorized file access attempts are collected - manual'
    section: 'Configure System Accounting (auditd)'
    description: |
        Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control
        creation               creat
         , opening               open
         ,              openat
          and truncation               truncate
         ,              ftruncate
          of files. An audit log record will only be written if the user is a nonprivileged user auid   1000, is not a Daemon
        event auid4294967295 and if the system call returned EACCES permission denied to the file or EPERM some other permanent
        error associated with the specific system call. All audit records will be tagged with the identifier access.
        Notes Systems may have been customized to change the default UIDMIN. To confirm the UIDMIN for your system, run the
        following command  awk /\sUIDMIN/print 2 /etc/login.defs
         If your systems UIDMIN is not 1000, replace audit1000 with auditUIDMIN for your system in the Audit and Remediation
        procedures. Reloading the auditd config to set active settings requires the auditd service to be restarted, and may
        require a system reboot.
    remediation: |
        For 32 bit systems Edit or create a file in the                  /etc/audit/rules.d/
         directory ending in                  .rules

        Example:                    vi /etc/audit/rules.d/audit.rules
                         Add the following lines:
        -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F
        auid!=4294967295 -k access
        -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F
        auid!=4294967295 -k access

        For 64 bit systems Edit or create a file in the                  /etc/audit/rules.d/
         directory ending in                  .rules

        Example:                    vi /etc/audit/rules.d/access.rules
                         Add the following lines:
        -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F
        auid!=4294967295 -k access
        -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F
        auid!=4294967295 -k access
        -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F
        auid!=4294967295 -k access
        -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F
        auid!=4294967295 -k access
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1.10', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b32\s+(?!(?:\2|\3|\4|\5))(-S\s+creat\s+|-S\s+open\s+|-S\s+openat\s+|-S\s+truncate\s+|-S\s+ftruncate\s+)(?!(?:\1|\3|\4|\5))(-S\s+creat\s+|-S\s+open\s+|-S\s+openat\s+|-S\s+truncate\s+|-S\s+ftruncate\s+)(?!(?:\1|\2|\4|\5))(-S\s+creat\s+|-S\s+open\s+|-S\s+openat\s+|-S\s+truncate\s+|-S\s+ftruncate\s+)(?!(?:\1|\2|\3|\5))(-S\s+creat\s+|-S\s+open\s+|-S\s+openat\s+|-S\s+truncate\s+|-S\s+ftruncate\s+)(?!(?:\1|\2|\3|\4))(-S\s+creat\s+|-S\s+open\s+|-S\s+openat\s+|-S\s+truncate\s+|-S\s+ftruncate\s+)-F\s+exit=-EACCES\s+-F\s+auid>=1000\s+-F\s+auid!=4294967295\s+-k\s+\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b32\s+(?!(?:\2|\3|\4|\5))(-S\s+creat\s+|-S\s+open\s+|-S\s+openat\s+|-S\s+truncate\s+|-S\s+ftruncate\s+)(?!(?:\1|\3|\4|\5))(-S\s+creat\s+|-S\s+open\s+|-S\s+openat\s+|-S\s+truncate\s+|-S\s+ftruncate\s+)(?!(?:\1|\2|\4|\5))(-S\s+creat\s+|-S\s+open\s+|-S\s+openat\s+|-S\s+truncate\s+|-S\s+ftruncate\s+)(?!(?:\1|\2|\3|\5))(-S\s+creat\s+|-S\s+open\s+|-S\s+openat\s+|-S\s+truncate\s+|-S\s+ftruncate\s+)(?!(?:\1|\2|\3|\4))(-S\s+creat\s+|-S\s+open\s+|-S\s+openat\s+|-S\s+truncate\s+|-S\s+ftruncate\s+)-F\s+exit=-EPERM\s+-F\s+auid>=1000\s+-F\s+auid!=4294967295\s+-k\s+\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b32\s+-S\s+(?!(?:\2|\3|\4|\5))(open[,\s]|creat[,\s]|truncate[,\s]|ftruncate[,\s]|openat[,\s])(?!(?:\1|\3|\4|\5))(open[,\s]|creat[,\s]|truncate[,\s]|ftruncate[,\s]|openat[,\s])(?!(?:\1|\2|\4|\5))(open[,\s]|creat[,\s]|truncate[,\s]|ftruncate[,\s]|openat[,\s])(?!(?:\1|\2|\3|\5))(open[,\s]|creat[,\s]|truncate[,\s]|ftruncate[,\s]|openat[,\s])(?!(?:\1|\2|\3|\4))(open[,\s]|creat[,\s]|truncate[,\s]|ftruncate[,\s]|openat[,\s])-F\s+exit=-EPERM\s+-F\s+auid>=1000\s+-F\s+auid!=-1\s+-F\s+key=\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b32\s+-S\s+(?!(?:\2|\3|\4|\5))(open[,\s]|creat[,\s]|truncate[,\s]|ftruncate[,\s]|openat[,\s])(?!(?:\1|\3|\4|\5))(open[,\s]|creat[,\s]|truncate[,\s]|ftruncate[,\s]|openat[,\s])(?!(?:\1|\2|\4|\5))(open[,\s]|creat[,\s]|truncate[,\s]|ftruncate[,\s]|openat[,\s])(?!(?:\1|\2|\3|\5))(open[,\s]|creat[,\s]|truncate[,\s]|ftruncate[,\s]|openat[,\s])(?!(?:\1|\2|\3|\4))(open[,\s]|creat[,\s]|truncate[,\s]|ftruncate[,\s]|openat[,\s])-F\s+exit=-EACCES\s+-F\s+auid>=1000\s+-F\s+auid!=-1\s+-F\s+key=\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b64\s+(?!(?:\2|\3|\4|\5))(-S\s+creat\s+|-S\s+open\s+|-S\s+openat\s+|-S\s+truncate\s+|-S\s+ftruncate\s+)(?!(?:\1|\3|\4|\5))(-S\s+creat\s+|-S\s+open\s+|-S\s+openat\s+|-S\s+truncate\s+|-S\s+ftruncate\s+)(?!(?:\1|\2|\4|\5))(-S\s+creat\s+|-S\s+open\s+|-S\s+openat\s+|-S\s+truncate\s+|-S\s+ftruncate\s+)(?!(?:\1|\2|\3|\5))(-S\s+creat\s+|-S\s+open\s+|-S\s+openat\s+|-S\s+truncate\s+|-S\s+ftruncate\s+)(?!(?:\1|\2|\3|\4))(-S\s+creat\s+|-S\s+open\s+|-S\s+openat\s+|-S\s+truncate\s+|-S\s+ftruncate\s+)-F\s+exit=-EACCES\s+-F\s+auid>=1000\s+-F\s+auid!=4294967295\s+-k\s+\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b64\s+(?!(?:\2|\3|\4|\5))(-S\s+creat\s+|-S\s+open\s+|-S\s+openat\s+|-S\s+truncate\s+|-S\s+ftruncate\s+)(?!(?:\1|\3|\4|\5))(-S\s+creat\s+|-S\s+open\s+|-S\s+openat\s+|-S\s+truncate\s+|-S\s+ftruncate\s+)(?!(?:\1|\2|\4|\5))(-S\s+creat\s+|-S\s+open\s+|-S\s+openat\s+|-S\s+truncate\s+|-S\s+ftruncate\s+)(?!(?:\1|\2|\3|\5))(-S\s+creat\s+|-S\s+open\s+|-S\s+openat\s+|-S\s+truncate\s+|-S\s+ftruncate\s+)(?!(?:\1|\2|\3|\4))(-S\s+creat\s+|-S\s+open\s+|-S\s+openat\s+|-S\s+truncate\s+|-S\s+ftruncate\s+)-F\s+exit=-EPERM\s+-F\s+auid>=1000\s+-F\s+auid!=4294967295\s+-k\s+\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b64\s+-S\s+(?!(?:\2|\3|\4|\5))(open[,\s]|creat[,\s]|truncate[,\s]|ftruncate[,\s]|openat[,\s])(?!(?:\1|\3|\4|\5))(open[,\s]|creat[,\s]|truncate[,\s]|ftruncate[,\s]|openat[,\s])(?!(?:\1|\2|\4|\5))(open[,\s]|creat[,\s]|truncate[,\s]|ftruncate[,\s]|openat[,\s])(?!(?:\1|\2|\3|\5))(open[,\s]|creat[,\s]|truncate[,\s]|ftruncate[,\s]|openat[,\s])(?!(?:\1|\2|\3|\4))(open[,\s]|creat[,\s]|truncate[,\s]|ftruncate[,\s]|openat[,\s])-F\s+exit=-EACCES\s+-F\s+auid>=1000\s+-F\s+auid!=-1\s+-F\s+key=\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b64\s+-S\s+(?!(?:\2|\3|\4|\5))(open[,\s]|creat[,\s]|truncate[,\s]|ftruncate[,\s]|openat[,\s])(?!(?:\1|\3|\4|\5))(open[,\s]|creat[,\s]|truncate[,\s]|ftruncate[,\s]|openat[,\s])(?!(?:\1|\2|\4|\5))(open[,\s]|creat[,\s]|truncate[,\s]|ftruncate[,\s]|openat[,\s])(?!(?:\1|\2|\3|\5))(open[,\s]|creat[,\s]|truncate[,\s]|ftruncate[,\s]|openat[,\s])(?!(?:\1|\2|\3|\4))(open[,\s]|creat[,\s]|truncate[,\s]|ftruncate[,\s]|openat[,\s])-F\s+exit=-EPERM\s+-F\s+auid>=1000\s+-F\s+auid!=-1\s+-F\s+key=\S+ *$'

  "4.1.11":
    title: '4.1.11 | Ensure use of privileged commands is collected - manual'
    section: 'Configure System Accounting (auditd)'
    description: |
        Monitor privileged programs those that have the setuid and/or setgid bit set on execution to determine if unprivileged
        users are running these commands. Notes Systems may have been customized to change the default UIDMIN. To confirm the
        UIDMIN for your system, run the following command  awk /\sUIDMIN/print 2 /etc/login.defs
         If your systems UIDMIN is not 1000, replace audit1000 with auditUIDMIN for your system in the Audit and Remediation
        procedures. Reloading the auditd config to set active settings requires the auditd service to be restarted, and may
        require a system reboot.
    remediation: |
        To remediate this issue, the system administrator will have to execute a find command to locate all the privileged
        programs and then add an audit line for each one of them. The audit parameters associated with this are as follows: -F
        path=" $1 "
         - will populate each file name found through the find command and processed by awk.                 -F perm=x
         - will write an audit record if the file is executed.                 -F auid>=1000
         - will write a record if the user executing the command is not a privileged user.                 -F auid!= 4294967295
         - will ignore Daemon events
        All audit records should be tagged with the identifier                  key
         "privileged".
        Run the following command replacing
         with a list of partitions where programs can be executed from on your system:               # find <partition> -xdev \(
        -perm -4000 -o -perm -2000 \) -type f | awk '{print "-a always,exit -F path=" $1 " -F perm=x -F auid>='"$(awk
        '/^\s*UID_MIN/{print $2}' /etc/login.defs)"' -F auid!=4294967295 -k privileged" }'

        Edit or create a file in the                  /etc/audit/rules.d/
         directory ending in                  .rules
         and add all resulting lines to the file.               Example: # find / -xdev \( -perm -4000 -o -perm -2000 \) -type f
        | awk '{print "-a always,exit -F path=" $1 " -F perm=x -F auid>='"$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)"' -F
        auid!=4294967295 -k privileged" }' >> /etc/audit/rules.d/privileged.rules
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1.11', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "4.1.12":
    title: '4.1.12 | Ensure successful file system mounts are collected - manual'
    section: 'Configure System Accounting (auditd)'
    description: |
        Monitor the use of the              mount
         system call. The              mount
         and              umount
          system call controls the mounting and unmounting of file systems. The parameters below configure the system to create
        an audit record when the mount system call is used by a nonprivileged user           Notes Systems may have been
        customized to change the default UIDMIN. To confirm the UIDMIN for your system, run the following command  awk
        /\sUIDMIN/print 2 /etc/login.defs
         If your systems UIDMIN is not 1000, replace audit1000 with auditUIDMIN for your system in the Audit and Remediation
        procedures. This tracks successful and unsuccessful mount commands. File system mounts do not have to come from external
        media and this action still does not verify write e.g. CD ROMS. Reloading the auditd config to set active settings
        requires the auditd service to be restarted, and may require a system reboot.
    remediation: |
        For 32 bit systems Edit or create a file in the                  /etc/audit/rules.d/
         directory ending in                  .rules

        Example:                    vi /etc/audit/rules.d/audit.rules
                         Add the following lines: -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k
        mounts

        For 64 bit systems Edit or create a file in the                  /etc/audit/rules.d/
         directory ending in                  .rules

        Example:                    vi /etc/audit/rules.d/mounts.rules
                         Add the following lines:
        -a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
        -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1.12', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b32\s+-S\s+mount\s+-F\s+auid>=1000\s+-F\s+auid!=4294967295\s+-k\s+\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b32\s+-S\s+mount\s+-F\s+auid>=1000\s+-F\s+auid!=-1\s+-F\s+key=\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b64\s+-S\s+mount\s+-F\s+auid>=1000\s+-F\s+auid!=4294967295\s+-k\s+\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b64\s+-S\s+mount\s+-F\s+auid>=1000\s+-F\s+auid!=-1\s+-F\s+key=\S+ *$'

  "4.1.13":
    title: '4.1.13 | Ensure file deletion events by users are collected - manual'
    section: 'Configure System Accounting (auditd)'
    description: |
        Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This
        configuration statement sets up monitoring for the              unlink
         remove a file,              unlinkat
         remove a file attribute,              rename
         rename a file and              renameat
         rename a file attribute system calls and tags them with the identifier delete.           Notes Systems may have been
        customized to change the default UIDMIN. To confirm the UIDMIN for your system, run the following command  awk
        /\sUIDMIN/print 2 /etc/login.defs
         If your systems UIDMIN is not 1000, replace audit1000 with auditUIDMIN for your system in the Audit and Remediation
        procedures. At a minimum, configure the audit system to collect file deletion events for all users and root. Reloading
        the auditd config to set active settings requires the auditd service to be restarted, and may require a system reboot.
    remediation: |
        For 32 bit systems Edit or create a file in the                  /etc/audit/rules.d/
         directory ending in                  .rules

        Example:                    vi /etc/audit/rules.d/audit.rules
                         Add the following lines: -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F
        auid>=1000 -F auid!=4294967295 -k delete

        For 64 bit systems Edit or create a file in the                  /etc/audit/rules.d/
         directory ending in                  .rules

        Example:                    vi /etc/audit/rules.d/delete.rules
                         Add the following lines:
        -a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
        -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1.13', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b32\s+(?!(?:\2|\3|\4))(-S\s+unlink\s+|-S\s+unlinkat\s+|-S\s+rename\s+|-S\s+renameat\s+)(?!(?:\1|\3|\4))(-S\s+unlink\s+|-S\s+unlinkat\s+|-S\s+rename\s+|-S\s+renameat\s+)(?!(?:\1|\2|\4))(-S\s+unlink\s+|-S\s+unlinkat\s+|-S\s+rename\s+|-S\s+renameat\s+)(?!(?:\1|\2|\3))(-S\s+unlink\s+|-S\s+unlinkat\s+|-S\s+rename\s+|-S\s+renameat\s+)-F\s+auid>=1000\s+-F\s+auid!=4294967295\s+-k\s+\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b32\s+-S\s+(?!(?:\2|\3|\4))(unlink[,\s]|rename[,\s]|unlinkat[,\s]|renameat[,\s])(?!(?:\1|\3|\4))(unlink[,\s]|rename[,\s]|unlinkat[,\s]|renameat[,\s])(?!(?:\1|\2|\4))(unlink[,\s]|rename[,\s]|unlinkat[,\s]|renameat[,\s])(?!(?:\1|\2|\3))(unlink[,\s]|rename[,\s]|unlinkat[,\s]|renameat[,\s])-F\s+auid>=1000\s+-F\s+auid!=-1\s+-F\s+key=\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b64\s+(?!(?:\2|\3|\4))(-S\s+unlink\s+|-S\s+unlinkat\s+|-S\s+rename\s+|-S\s+renameat\s+)(?!(?:\1|\3|\4))(-S\s+unlink\s+|-S\s+unlinkat\s+|-S\s+rename\s+|-S\s+renameat\s+)(?!(?:\1|\2|\4))(-S\s+unlink\s+|-S\s+unlinkat\s+|-S\s+rename\s+|-S\s+renameat\s+)(?!(?:\1|\2|\3))(-S\s+unlink\s+|-S\s+unlinkat\s+|-S\s+rename\s+|-S\s+renameat\s+)-F\s+auid>=1000\s+-F\s+auid!=4294967295\s+-k\s+\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b64\s+-S\s+(?!(?:\2|\3|\4))(unlink[,\s]|rename[,\s]|unlinkat[,\s]|renameat[,\s])(?!(?:\1|\3|\4))(unlink[,\s]|rename[,\s]|unlinkat[,\s]|renameat[,\s])(?!(?:\1|\2|\4))(unlink[,\s]|rename[,\s]|unlinkat[,\s]|renameat[,\s])(?!(?:\1|\2|\3))(unlink[,\s]|rename[,\s]|unlinkat[,\s]|renameat[,\s])-F\s+auid>=1000\s+-F\s+auid!=-1\s+-F\s+key=\S+ *$'

  "4.1.14":
    title: '4.1.14 | Ensure changes to system administration scope sudoers is collected'
    section: 'Configure System Accounting (auditd)'
    description: |
        Monitor scope changes for system administrations. If the system has been properly configured to force system
        administrators to log in as themselves first and then use the              sudo
         command to execute privileged commands, it is possible to monitor changes in scope. The file              /etc/sudoers
         will be written to when the file or its attributes have changed. The audit records will be tagged with the identifier
        scope.
    remediation: |
        Edit or create a file in the                  /etc/audit/rules.d/
         directory ending in                  .rules

        Example:                    vi /etc/audit/rules.d/scope.rules
                         Add the following lines:
        -w /etc/sudoers -p wa -k scope
        -w /etc/sudoers.d/ -p wa -k scope
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1.14', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^\s*-w /etc/sudoers -p wa -k \S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-w \/etc\/sudoers.d(/)* -p wa -k \S+ *$'

  "4.1.15":
    title: '4.1.15 | Ensure system administrator command executions sudo are collected - manual'
    section: 'Configure System Accounting (auditd)'
    description: |
        sudo
         provides users with temporary elevated privileges to perform operations. Monitor the administrator with temporary
        elevated privileges and the operations they performed.           Note Reloading the auditd config to set active settings
        requires the auditd service to be restarted, and may require a system reboot.
    remediation: |
        For 32 bit systems Edit or create a file in the                  /etc/audit/rules.d/
         directory ending in                  .rules
        :               Example: `vi /etc/audit/rules.d/actions.rules Add the following line: -a exit,always -F arch=b32 -C
        euid!=uid -F euid=0 -Fauid>=1000 -F auid!=4294967295 -S execve -k actions

        For 64 bit systems Edit or create a file in the                  /etc/audit/rules.d/
         directory ending in                  .rules
        :               Example: `vi /etc/audit/rules.d/actions.rules Add the following lines:
        -a always,exit -F arch=b64 -C euid!=uid -F euid=0 -Fauid>=1000 -F auid!=4294967295 -S execve -k actions
        -a always,exit -F arch=b32 -C euid!=uid -F euid=0 -Fauid>=1000 -F auid!=4294967295 -S execve -k actions
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1.15', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:exit,always|always,exit)\s+-F\s+arch=b32\s+(?!(?:\2|\3|\4|\5))(-C\s+(?:euid!=uid|uid!=euid)|-F\s+euid=0|-F\s*auid>=1000|-F\s+auid!=4294967295|-S\s+execve)\s+(?!(?:\1|\3|\4|\5))(-C\s+(?:euid!=uid|uid!=euid)|-F\s+euid=0|-F\s*auid>=1000|-F\s+auid!=4294967295|-S\s+execve)\s+(?!(?:\1|\2|\4|\5))(-C\s+(?:euid!=uid|uid!=euid)|-F\s+euid=0|-F\s*auid>=1000|-F\s+auid!=4294967295|-S\s+execve)\s+(?!(?:\1|\2|\3|\5))(-C\s+(?:euid!=uid|uid!=euid)|-F\s+euid=0|-F\s*auid>=1000|-F\s+auid!=4294967295|-S\s+execve)\s+(?!(?:\1|\2|\3|\4))(-C\s+(?:euid!=uid|uid!=euid)|-F\s+euid=0|-F\s*auid>=1000|-F\s+auid!=4294967295|-S\s+execve)\s+-k\s+[^#]+(\s+#.*)?$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:exit,always|always,exit)\s+-F\s+arch=b32\s+(?!(?:\2|\3|\4|\5))(-C\s+(?:euid!=uid|uid!=euid)|-F\s+euid=0|-F\s*auid>=1000|-F\s+auid!=\-1|-S\s+execve)\s+(?!(?:\1|\3|\4|\5))(-C\s+(?:euid!=uid|uid!=euid)|-F\s+euid=0|-F\s*auid>=1000|-F\s+auid!=\-1|-S\s+execve)\s+(?!(?:\1|\2|\4|\5))(-C\s+(?:euid!=uid|uid!=euid)|-F\s+euid=0|-F\s*auid>=1000|-F\s+auid!=\-1|-S\s+execve)\s+(?!(?:\1|\2|\3|\5))(-C\s+(?:euid!=uid|uid!=euid)|-F\s+euid=0|-F\s*auid>=1000|-F\s+auid!=\-1|-S\s+execve)\s+(?!(?:\1|\2|\3|\4))(-C\s+(?:euid!=uid|uid!=euid)|-F\s+euid=0|-F\s*auid>=1000|-F\s+auid!=\-1|-S\s+execve)\s+-F\s+key=[^#]+(\s+#.*)?$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:exit,always|always,exit)\s+-F\s+arch=b64\s+(?!(?:\2|\3|\4|\5))(-C\s+(?:euid!=uid|uid!=euid)|-F\s+euid=0|-F\s*auid>=1000|-F\s+auid!=4294967295|-S\s+execve)\s+(?!(?:\1|\3|\4|\5))(-C\s+(?:euid!=uid|uid!=euid)|-F\s+euid=0|-F\s*auid>=1000|-F\s+auid!=4294967295|-S\s+execve)\s+(?!(?:\1|\2|\4|\5))(-C\s+(?:euid!=uid|uid!=euid)|-F\s+euid=0|-F\s*auid>=1000|-F\s+auid!=4294967295|-S\s+execve)\s+(?!(?:\1|\2|\3|\5))(-C\s+(?:euid!=uid|uid!=euid)|-F\s+euid=0|-F\s*auid>=1000|-F\s+auid!=4294967295|-S\s+execve)\s+(?!(?:\1|\2|\3|\4))(-C\s+(?:euid!=uid|uid!=euid)|-F\s+euid=0|-F\s*auid>=1000|-F\s+auid!=4294967295|-S\s+execve)\s+-k\s+[^#]+(\s+#.*)?$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:exit,always|always,exit)\s+-F\s+arch=b64\s+(?!(?:\2|\3|\4|\5))(-C\s+(?:euid!=uid|uid!=euid)|-F\s+euid=0|-F\s*auid>=1000|-F\s+auid!=\-1|-S\s+execve)\s+(?!(?:\1|\3|\4|\5))(-C\s+(?:euid!=uid|uid!=euid)|-F\s+euid=0|-F\s*auid>=1000|-F\s+auid!=\-1|-S\s+execve)\s+(?!(?:\1|\2|\4|\5))(-C\s+(?:euid!=uid|uid!=euid)|-F\s+euid=0|-F\s*auid>=1000|-F\s+auid!=\-1|-S\s+execve)\s+(?!(?:\1|\2|\3|\5))(-C\s+(?:euid!=uid|uid!=euid)|-F\s+euid=0|-F\s*auid>=1000|-F\s+auid!=\-1|-S\s+execve)\s+(?!(?:\1|\2|\3|\4))(-C\s+(?:euid!=uid|uid!=euid)|-F\s+euid=0|-F\s*auid>=1000|-F\s+auid!=\-1|-S\s+execve)\s+-F\s+key=[^#]+(\s+#.*)?$'

  "4.1.16":
    title: '4.1.16 | Ensure kernel module loading and unloading is collected'
    section: 'Configure System Accounting (auditd)'
    description: |
        Monitor the loading and unloading of kernel modules. The programs              insmod
         install a kernel module,              rmmod
         remove a kernel module, and              modprobe
         a more sophisticated program to load and unload modules, as well as some other features control loading and unloading
        of modules. The              initmodule
         load a module and              deletemodule
         delete a module system calls control loading and unloading of modules. Any execution of the loading and unloading
        module programs and system calls will trigger an audit record with an identifier of modules.           Note Reloading
        the auditd config to set active settings requires the auditd service to be restarted, and may require a system reboot.
    remediation: |
        For 32 bit systems Edit or create a file in the                  /etc/audit/rules.d/
         directory ending in                  .rules

        Example:                    vi /etc/audit/rules.d/modules.rules
                         Add the following lines:
        -w /sbin/insmod -p x -k modules
        -w /sbin/rmmod -p x -k modules
        -w /sbin/modprobe -p x -k modules
        -a always,exit -F arch=b32 -S init_module -S delete_module -k modules

        For 64 bit systems Edit or create a file in the                  /etc/audit/rules.d/
         directory ending in                  .rules

        Example:                    vi /etc/audit/rules.d/modules.rules
                         Add the following lines:
        -w /sbin/insmod -p x -k modules
        -w /sbin/rmmod -p x -k modules
        -w /sbin/modprobe -p x -k modules
        -a always,exit -F arch=b64 -S init_module -S delete_module -k modules
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1.16', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^\s*-w\s+\/sbin\/insmod\s+-p\s+x\s+-k\s+\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-w\s+\/sbin\/rmmod\s+-p\s+x\s+-k\s+\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-w\s+\/sbin\/modprobe\s+-p\s+x\s+-k\s+\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b32\s+-S\s+(?:init_module,delete_module|delete_module,init_module)\s+-F\s+key=\S+ *$'
            - name: Undefined
              rule: 'should cmp == ^\s*-a\s+(?:always,exit|exit,always)\s+-F\s+arch=b64\s+-S\s+(?:init_module,delete_module|delete_module,init_module)\s+-F\s+key=\S+ *$'

  "4.1.17":
    title: '4.1.17 | Ensure the audit configuration is immutable'
    section: 'Configure System Accounting (auditd)'
    description: |
        Set system audit so that audit rules cannot be modified with              auditctl
        . Setting the flag e 2 forces audit to be put in immutable mode. Audit changes can only be made on system reboot.
        Note Reloading the auditd config to set active settings requires the auditd service to be restarted, and may require a
        system reboot.
    remediation: |
        Edit or create the file                  /etc/audit/rules.d/99-finalize.rules
         and add the line               -e 2
         at the end of the file
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_4.1.17', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "4.2.1.1":
    title: '4.2.1.1 | Ensure rsyslog is installed'
    section: 'Configure rsyslog'
    description: |
        The                rsyslog
         software is a recommended replacement to the original                syslogd
         daemon which provide improvements over                syslogd
        , such as connectionoriented i.e. TCP transmission of logs, the option to log to database formats, and the encryption of
        log data en route to a central logging server.
    remediation: |
        Install rsyslog: # apt install rsyslog
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_4.2.1.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "4.2.1.2":
    title: '4.2.1.2 | Ensure rsyslog Service is enabled'
    section: 'Configure rsyslog'
    description: |
        Once the                rsyslog
          package is installed it needs to be activated.
    remediation: |
        Run the following commands to enable                    rsyslog
        :                 # systemctl --now enable rsyslog
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_4.2.1.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "4.2.1.3":
    title: '4.2.1.3 | Ensure logging is configured - manual'
    section: 'Configure rsyslog'
    description: |
        The                /etc/rsyslog.conf
         and                /etc/rsyslog.d/.conf
         files specifies rules for logging and which files are to be used to log certain classes of messages.
    remediation: |
        Edit the following lines in the                    /etc/rsyslog.conf
         and                    /etc/rsyslog.d/*.conf
         files as appropriate for your environment:
        *.emerg                                  :omusrmsg:*
        auth,authpriv.*                          /var/log/auth.log
        mail.*                                  -/var/log/mail
        mail.info                               -/var/log/mail.info
        mail.warning                            -/var/log/mail.warn
        mail.err                                 /var/log/mail.err
        news.crit                               -/var/log/news/news.crit
        news.err                                -/var/log/news/news.err
        news.notice                             -/var/log/news/news.notice
        *.=warning;*.=err                       -/var/log/warn
        *.crit                                   /var/log/warn
        *.*;mail.none;news.none                 -/var/log/messages
        local0,local1.*                         -/var/log/localmessages
        local2,local3.*                         -/var/log/localmessages
        local4,local5.*                         -/var/log/localmessages
        local6,local7.*                         -/var/log/localmessages

        Run the following command to reload the                    rsyslog
         configuration:                 # systemctl reload rsyslog
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_4.2.1.3', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "4.2.1.4":
    title: '4.2.1.4 | Ensure rsyslog default file permissions configured'
    section: 'Configure rsyslog'
    description: |
        rsyslog will create logfiles that do not already exist on the system. This setting controls what permissions will be
        applied to these newly created files.
    remediation: |
        Edit the                    /etc/rsyslog.conf
         and                    /etc/rsyslog.d/*.conf
         files and set every instance of                    $FileCreateMode
         to                    0640
         or more restrictive:                 $FileCreateMode 0640
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_4.2.1.4', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "4.2.1.5":
    title: '4.2.1.5 | Ensure rsyslog is configured to send logs to a remote log host'
    section: 'Configure rsyslog'
    description: |
        The                rsyslog
         utility supports the ability to send logs it gathers to a remote log host running                syslogd8
         or to receive messages from remote hosts, reducing administrative overhead.             Notes
        The double at sign
         directs                    rsyslog
        to use TCP to send log messages to the server, which is a more reliable transport mechanism than the default UDP
        protocol
        The                    .
         is a wildcard to send all logs to the remote loghost                 Ensure that the selection of logfiles being sent
        follows local site policy
    remediation: |
        Edit the                    /etc/rsyslog.conf
         and                    /etc/rsyslog.d/*.conf
         files and add one of the following lines:                 Newer syntax:
        <files to sent to the remote log server> action(type="omfwd" target="<FQDN or ip of loghost>" port="<port number>"
        protocol="tcp"
        	                                        action.resumeRetryCount="<number of re-tries>"
        	                                        queue.type="LinkedList" queue.size=<number of messages to queue>")
                         Example:
        *.* action(type="omfwd" target="192.168.2.100" port="514" protocol="tcp"
                   action.resumeRetryCount="100"
                   queue.type="LinkedList" queue.size="1000")
                         Older syntax: *.* @@<FQDN or ip of loghost>
         Example: *.* @@192.168.2.100

        Run the following commands to reload the                    rsyslog
         configuration:
        # systemctl stop rsyslog

        # systemctl start rsyslog
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_4.2.1.5', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'

  "4.2.1.6":
    title: '4.2.1.6 | Ensure remote rsyslog messages are only accepted on designated log hosts. - manual'
    section: 'Configure rsyslog'
    description: |
        By default,                rsyslog
         does not listen for log messages coming in from remote systems. The                ModLoad
         tells                rsyslog
         to load the                imtcp.so
         module so it can listen over a network via TCP. The                InputTCPServerRun
         option instructs                rsyslogd
         to listen on the specified TCP port.
    remediation: |
        For hosts that are designated as log hosts, edit the                    /etc/rsyslog.conf
         file and un-comment or add the following lines:
        $ModLoad imtcp

        $InputTCPServerRun 514

        For hosts that are not designated as log hosts, edit the                    /etc/rsyslog.conf
         file and comment or remove the following lines:
        # $ModLoad imtcp

        # $InputTCPServerRun 514

        Run the following command to reload the                    rsyslogd
         configuration:                 # systemctl restart rsyslog
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_4.2.1.6', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "4.2.2.1":
    title: '4.2.2.1 | Ensure journald is configured to send logs to rsyslog'
    section: 'Configure journald'
    description: |
        Data from journald may be stored in volatile memory or persisted locally on the server.  Utilities exist to accept
        remote export of journald logs, however, use of the rsyslog service provides a consistent means of log collection and
        export. Notes This recommendation assumes that recommendation 4.2.1.5, Ensure rsyslog is configured to send logs to a
        remote log host has been implemented.
        As noted in the journald man pages, journald logs may be exported to rsyslog either through the process mentioned here,
        or through a facility like                    systemdjournald.service
        .  There are tradeoffs involved in each implementation, where                    ForwardToSyslog
         will immediately capture all events and forward to an external log server, if properly configured, but may not capture
        all bootup activities.  Mechanisms such as                    systemdjournald.service
        , on the other hand, will record bootup events, but may delay sending the information to rsyslog, leading to the
        potential for log manipulation prior to export.  Be aware of the limitations of all tools employed to secure a system.
        The main configuration file                    /etc/systemd/journald.conf
         is read before any of the custom .conf files. If there are custom configs present, they override the main configuration
        parameters
    remediation: |
        Edit the                    /etc/systemd/journald.conf
         file and add the following line:                 ForwardToSyslog=yes
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_4.2.2.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "4.2.2.2":
    title: '4.2.2.2 | Ensure journald is configured to compress large log files'
    section: 'Configure journald'
    description: |
        The journald system includes the capability of compressing overly large files to avoid filling up the system with logs
        or making the logs unmanageably large.
        Note The main configuration file                  /etc/systemd/journald.conf
         is read before any of the custom .conf files. If there are custom configs present, they override the main configuration
        parameters
    remediation: |
        Edit the                    /etc/systemd/journald.conf
         file and add the following line:                 Compress=yes
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_4.2.2.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "4.2.2.3":
    title: '4.2.2.3 | Ensure journald is configured to write logfiles to persistent disk'
    section: 'Configure journald'
    description: |
        Data from journald may be stored in volatile memory or persisted locally on the server.  Logs in memory will be lost
        upon a system reboot.  By persisting logs to local disk on the server they are protected from loss.
        Note The main configuration file                  /etc/systemd/journald.conf
         is read before any of the custom .conf files. If there are custom configs present, they override the main configuration
        parameters
    remediation: |
        Edit the                    /etc/systemd/journald.conf
         file and add the following line:                 Storage=persistent
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_4.2.2.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "4.2.3":
    title: '4.2.3 | Ensure permissions on all logfiles are configured'
    section: 'Configure Logging'
    description: |
        Log files stored in /var/log/ contain logged information from many services on the system, or on log hosts others as
        well. Note You may also need to change the configuration for your logging software or services for any logs that had
        incorrect permissions.
    remediation: |
        Run the following commands to set permissions on all existing log files: find /var/log -type f -exec chmod g-wx,o-rwx
        "{}" + -o -type d -exec chmod g-w,o-rwx "{}" +
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_4.2.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "4.3":
    title: '4.3 | Ensure logrotate is configured - manual'
    section: 'Logging and Auditing'
    description: |
        The system includes the capability of rotating log files regularly to avoid filling up the system with logs or making
        the logs unmanageably large. The file            /etc/logrotate.d/rsyslog
         is the configuration file used to rotate log files created by            rsyslog
        .
        Note If no              maxage
         setting is set for logrotate a situation can occur where logrotate is interrupted and fails to delete rotated logfiles.
        It is recommended to set this to a value greater than the longest any log file should exist on your system to ensure
        that any such logfile is removed but standard rotation settings are not overridden.
    remediation: |
        Edit                /etc/logrotate.conf
         and                /etc/logrotate.d/rsyslog
         to ensure logs are rotated according to site policy.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_4.3', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "4.4":
    title: '4.4 | Ensure logrotate assigns appropriate permissions'
    section: 'Logging and Auditing'
    description: |
        Log files contain logged information from many services on the system, or on log hosts others as well.
    remediation: |
        Edit                /etc/logrotate.conf
         and update the                create
         line to read 0640 or more restrictive, following local site policy             Example: create 0640 root utmp
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_4.4', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "5.1.1":
    title: '5.1.1 | Ensure cron daemon is enabled and running'
    section: 'Configure time-based job schedulers'
    description: |
        The              cron
         daemon is used to execute batch jobs on the system.
        Note Other methods, such as                systemd timers
        , exist for scheduling jobs. If another method is used,                cron
         should be removed, and the alternate method should be secured in accordance with local site policy
    remediation: |
        Run the following command to enable and start                  cron
        :               # systemctl --now enable cron
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.1.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == cron'

  "5.1.2":
    title: '5.1.2 | Ensure permissions on etccrontab are configured'
    section: 'Configure time-based job schedulers'
    description: |
        The              /etc/crontab
         file is used by              cron
         to control its own jobs. The commands in this item make sure that root is the user and group owner of the file and that
        only the owner can access the file.
        Note Other methods, such as                systemd timers
        , exist for scheduling jobs. If another method is used,                cron
         should be removed, and the alternate method should be secured in accordance with local site policy
    remediation: |
        Run the following commands to set ownership and permissions on                  /etc/crontab
         :               # chown root:root /etc/crontab
         # chmod og-rwx /etc/crontab
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.1.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "5.1.3":
    title: '5.1.3 | Ensure permissions on etccron.hourly are configured'
    section: 'Configure time-based job schedulers'
    description: |
        This directory contains system              cron
         jobs that need to run on an hourly basis. The files in this directory cannot be manipulated by the              crontab
         command, but are instead edited by system administrators using a text editor. The commands below restrict read/write
        and search access to user and group root, preventing regular users from accessing this directory.
        Note Other methods, such as                systemd timers
        , exist for scheduling jobs. If another method is used,                cron
         should be removed, and the alternate method should be secured in accordance with local site policy
    remediation: |
        Run the following commands to set ownership and permissions on the                  /etc/cron.hourly
         directory:
        # chown root:root /etc/cron.hourly/

        # chmod og-rwx /etc/cron.hourly/
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.1.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "5.1.4":
    title: '5.1.4 | Ensure permissions on etccron.daily are configured'
    section: 'Configure time-based job schedulers'
    description: |
        The              /etc/cron.daily
         directory contains system cron jobs that need to run on a daily basis. The files in this directory cannot be
        manipulated by the              crontab
         command, but are instead edited by system administrators using a text editor. The commands below restrict read/write
        and search access to user and group root, preventing regular users from accessing this directory.
        Note Other methods, such as                systemd timers
        , exist for scheduling jobs. If another method is used,                cron
         should be removed, and the alternate method should be secured in accordance with local site policy
    remediation: |
        Run the following commands to set ownership and permissions on the                  /etc/cron.daily
         directory:
        # chown root:root /etc/cron.daily/

        # chmod og-rwx /etc/cron.daily/
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.1.4', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "5.1.5":
    title: '5.1.5 | Ensure permissions on etccron.weekly are configured'
    section: 'Configure time-based job schedulers'
    description: |
        The              /etc/cron.weekly
         directory contains system cron jobs that need to run on a weekly basis. The files in this directory cannot be
        manipulated by the              crontab
         command, but are instead edited by system administrators using a text editor. The commands below restrict read/write
        and search access to user and group root, preventing regular users from accessing this directory.
        Note Other methods, such as                systemd timers
        , exist for scheduling jobs. If another method is used,                cron
         should be removed, and the alternate method should be secured in accordance with local site policy
    remediation: |
        Run the following commands to set ownership and permissions on the                  /etc/cron.weekly
         directory:
        # chown root:root /etc/cron.weekly/

        # chmod og-rwx /etc/cron.weekly/
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.1.5', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "5.1.6":
    title: '5.1.6 | Ensure permissions on etccron.monthly are configured'
    section: 'Configure time-based job schedulers'
    description: |
        The              /etc/cron.monthly
         directory contains system cron jobs that need to run on a monthly basis. The files in this directory cannot be
        manipulated by the              crontab
         command, but are instead edited by system administrators using a text editor. The commands below restrict read/write
        and search access to user and group root, preventing regular users from accessing this directory.
        Note Other methods, such as                systemd timers
        , exist for scheduling jobs. If another method is used,                cron
         should be removed, and the alternate method should be secured in accordance with local site policy
    remediation: |
        Run the following commands to set ownership and permissions on the                  /etc/cron.monthly
         directory:
        # chown root:root /etc/cron.monthly/

        # chmod og-rwx /etc/cron.monthly/
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.1.6', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "5.1.7":
    title: '5.1.7 | Ensure permissions on etccron.d are configured'
    section: 'Configure time-based job schedulers'
    description: |
        The              /etc/cron.d
         directory contains system              cron
         jobs that need to run in a similar manner to the hourly, daily weekly and monthly jobs from              /etc/crontab
        , but require more granular control as to when they run. The files in this directory cannot be manipulated by the
        crontab
         command, but are instead edited by system administrators using a text editor. The commands below restrict read/write
        and search access to user and group root, preventing regular users from accessing this directory.
        Note Other methods, such as                systemd timers
        , exist for scheduling jobs. If another method is used,                cron
         should be removed, and the alternate method should be secured in accordance with local site policy
    remediation: |
        Run the following commands to set ownership and permissions on the                  /etc/cron.d
         directory:
        # chown root:root /etc/cron.d/

        # chmod og-rwx /etc/cron.d/
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.1.7', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "5.1.8":
    title: '5.1.8 | Ensure cron is restricted to authorized users'
    section: 'Configure time-based job schedulers'
    description: |
        Configure              /etc/cron.allow
         to allow specific users to use this service. If              /etc/cron.allow
         does not exist, then              /etc/cron.deny
         is checked. Any user not specifically defined in this file is allowed to use cron. By removing the file, only users in
        /etc/cron.allow
         are allowed to use cron.           Notes
        Other methods, such as                  systemd timers
        , exist for scheduling jobs. If another method is used,                  cron
         should be removed, and the alternate method should be secured in accordance with local site policy
        Even though a given user is not listed in                  cron.allow
        , cron jobs can still be run as that user
        The                  cron.allow
         file only controls administrative access to the crontab command for scheduling and modifying cron jobs
    remediation: |
        Run the following commands to remove                  /etc/cron.deny
        :               # rm /etc/cron.deny

        Run the following command to create                  /etc/cron.allow
                       # touch /etc/cron.allow

        Run the following commands to set permissions and ownership for                  /etc/cron.allow
        :
        # chmod g-wx,o-rwx /etc/cron.allow

        # chown root:root /etc/cron.allow
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.1.8', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "5.1.9":
    title: '5.1.9 | Ensure at is restricted to authorized users'
    section: 'Configure time-based job schedulers'
    description: |
        Configure              /etc/at.allow
         to allow specific users to use this service. If              /etc/at.allow
         does not exist, then              /etc/at.deny
         is checked. Any user not specifically defined in this file is allowed to use              at
        . By removing the file, only users in              /etc/at.allow
         are allowed to use              at
        .
        Note Other methods, such as                systemd timers
        , exist for scheduling jobs. If another method is used,                at
         should be removed, and the alternate method should be secured in accordance with local site policy
    remediation: |
        Run the following commands to remove                  /etc/at.deny
        :               # rm /etc/at.deny

        Run the following command to create                  /etc/at.allow
                       # touch /etc/at.allow

        Run the following commands to set permissions and ownership for                  /etc/at.allow
        :
        # chmod g-wx,o-rwx /etc/at.allow

        # chown root:root /etc/at.allow
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.1.9', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "5.2.1":
    title: '5.2.1 | Ensure permissions on etcsshsshd config are configured'
    section: 'Configure SSH Server'
    description: |
        The              /etc/ssh/sshdconfig
         file contains configuration specifications for              sshd
        . The command below sets the owner and group of the file to root.
    remediation: |
        Run the following commands to set ownership and permissions on                  /etc/ssh/sshd_config
        :
        # chown root:root /etc/ssh/sshd_config

        # chmod og-rwx /etc/ssh/sshd_config
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "5.2.2":
    title: '5.2.2 | Ensure permissions on SSH private host key files are configured'
    section: 'Configure SSH Server'
    description: |
        An SSH private key is one of two files used in SSH public key authentication.  In this authentication method, The
        possession of the private key is proof of identity. Only a private key that corresponds to a public key will be able to
        authenticate successfully. The private keys need to be stored and handled carefully, and no copies of the private key
        should be distributed.
    remediation: |
        Run the following commands to set ownership and permissions on the private SSH host key files # find /etc/ssh -xdev
        -type f -name 'ssh_host_*_key' | xargs chown root:root
         # find /etc/ssh -xdev -type f -name 'ssh_host_*_key' | xargs chmod 0600
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "5.2.3":
    title: '5.2.3 | Ensure permissions on SSH public host key files are configured'
    section: 'Configure SSH Server'
    description: |
        An SSH public key is one of two files used in SSH public key authentication. In this authentication method, a public key
        is a key that can be used for verifying digital signatures generated using a corresponding private key. Only a public
        key that corresponds to a private key will be able to authenticate successfully.
    remediation: |
        Run the following commands to set permissions and ownership on the SSH host public key files # find /etc/ssh -xdev -type
        f -name 'ssh_host_*_key.pub' | xargs chmod go-wx
         # find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' | xargs chown root:root
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "5.2.4":
    title: '5.2.4 | Ensure SSH LogLevel is appropriate'
    section: 'Configure SSH Server'
    description: |
        INFO
         level is the basic level that only records login activity of SSH users. In many situations, such as Incident Response,
        it is important to determine when a particular user was active on a system. The logout record can eliminate those users
        who disconnected, which helps narrow the field.           VERBOSE
         level specifies that login and logout activity as well as the key fingerprint for any SSH key used for login will be
        logged. This information is important for SSH key management, especially in legacy environments.
    remediation: |
        Edit the                  /etc/ssh/sshd_config
         file to set the parameter as follows:               LogLevel VERBOSE
         OR LogLevel INFO
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.4', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^loglevel\s*(VERBOSE|INFO)\s*$'

  "5.2.5":
    title: '5.2.5 | Ensure SSH X11 forwarding is disabled'
    section: 'Configure SSH Server'
    description: |
        The X11Forwarding parameter provides the ability to tunnel X11 traffic through the connection to enable remote graphic
        connections.
    remediation: |
        Edit the                  /etc/ssh/sshd_config
         file to set the parameter as follows:               X11Forwarding no
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.5', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^x11forwarding\s*no\s*$'

  "5.2.6":
    title: '5.2.6 | Ensure SSH MaxAuthTries is set to 4 or less'
    section: 'Configure SSH Server'
    description: |
        The              MaxAuthTries
         parameter specifies the maximum number of authentication attempts permitted per connection. When the login failure
        count reaches half the number, error messages will be written to the              syslog
         file detailing the login failure.           Note Local site policy may be more restrictive
    remediation: |
        Edit the                  /etc/ssh/sshd_config
         file to set the parameter as follows:               MaxAuthTries 4
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.6', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^maxauthtries\s*[0-4]\s*$'

  "5.2.7":
    title: '5.2.7 | Ensure SSH IgnoreRhosts is enabled'
    section: 'Configure SSH Server'
    description: |
        The              IgnoreRhosts
         parameter specifies that              .rhosts
         and              .shosts
         files will not be used in              RhostsRSAAuthentication
         or              HostbasedAuthentication
        .
    remediation: |
        Edit the                  /etc/ssh/sshd_config
         file to set the parameter as follows:               IgnoreRhosts yes
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.7', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^ignorerhosts\s*yes\s*$'

  "5.2.8":
    title: '5.2.8 | Ensure SSH HostbasedAuthentication is disabled'
    section: 'Configure SSH Server'
    description: |
        The              HostbasedAuthentication
         parameter specifies if authentication is allowed through trusted hosts via the user of              .rhosts
        , or              /etc/hosts.equiv
        , along with successful public key client host authentication. This option only applies to SSH Protocol Version 2.
    remediation: |
        Edit the                  /etc/ssh/sshd_config
         file to set the parameter as follows:               HostbasedAuthentication no
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.8', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^hostbasedauthentication\s+no\s*$'

  "5.2.9":
    title: '5.2.9 | Ensure SSH root login is disabled'
    section: 'Configure SSH Server'
    description: |
        The              PermitRootLogin
         parameter specifies if the root user can log in using ssh. The default is no.
    remediation: |
        Edit the                  /etc/ssh/sshd_config
         file to set the parameter as follows:               PermitRootLogin no
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.9', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^permitrootlogin\s+no\s*$'

  "5.2.10":
    title: '5.2.10 | Ensure SSH PermitEmptyPasswords is disabled'
    section: 'Configure SSH Server'
    description: |
        The              PermitEmptyPasswords
         parameter specifies if the SSH server allows login to accounts with empty password strings.
    remediation: |
        Edit the                  /etc/ssh/sshd_config
         file to set the parameter as follows:               PermitEmptyPasswords no
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.10', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^permitemptypasswords\s+no\s*$'

  "5.2.11":
    title: '5.2.11 | Ensure SSH PermitUserEnvironment is disabled'
    section: 'Configure SSH Server'
    description: |
        The              PermitUserEnvironment
         option allows users to present environment options to the              ssh
         daemon.
    remediation: |
        Edit the                  /etc/ssh/sshd_config
         file to set the parameter as follows:               PermitUserEnvironment no
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.11', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^permituserenvironment\s+no\s*$'

  "5.2.12":
    title: '5.2.12 | Ensure only strong Ciphers are used'
    section: 'Configure SSH Server'
    description: |
        This variable limits the ciphers that SSH can use during communication. Notes Some organizations may have stricter
        requirements for approved ciphers Ensure that ciphers used are in compliance with site policy The only strong ciphers
        currently FIPS 1402 compliant are aes256ctr aes192ctr aes128ctr Supported ciphers in openSSH 8.2
        3descbc
        aes128cbc
        aes192cbc
        aes256cbc
        aes128ctr
        aes192ctr
        aes256ctr
        aes128gcmopenssh.com
        aes256gcmopenssh.com
        chacha20poly1305openssh.com
    remediation: |
        Edit the                  /etc/ssh/sshd_config
         file add/modify the                  Ciphers
         line to contain a comma separated list of the site approved ciphers               Example: Ciphers
        chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.12', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^\s*ciphers\s+(\S+,)*(3des-cbc|aes128-cbc|aes192-cbc|aes256-cbc|arcfour|arcfour128|arcfour256|blowfish-cbc|cast128-cbc|rijndael-cbc@lysator.liu.se)(,\S+)*\s*$'

  "5.2.13":
    title: '5.2.13 | Ensure only strong MAC algorithms are used'
    section: 'Configure SSH Server'
    description: |
        This variable limits the types of MAC algorithms that SSH can use during communication. Notes Some organizations may
        have stricter requirements for approved MACs Ensure that MACs used are in compliance with site policy The only strong
        MACs currently FIPS 1402 approved are hmacsha2256 hmacsha2512 The Supported MACs are
        hmacmd5
        hmacmd596
        hmacsha1
        hmacsha196
        hmacsha2256
        hmacsha2512
        umac64openssh.com
        umac128openssh.com
        hmacmd5etmopenssh.com
        hmacmd596etmopenssh.com
        hmacsha1etmopenssh.com
        hmacsha196etmopenssh.com
        hmacsha2256etmopenssh.com
        hmacsha2512etmopenssh.com
        umac64etmopenssh.com
        umac128etmopenssh.com
    remediation: |
        Edit the                  /etc/ssh/sshd_config
         file and add/modify the MACs line to contain a comma separated list of the site approved MACs               Example:
        MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512,hmac-sha2-256
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.13', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^\s*macs\s+(\S+,)*(hmac-md5|hmac-md5-96|hmac-ripemd160|hmac-sha1|hmac-sha1-96|umac-64@openssh\.com|hmac-md5-etm@openssh\.com|hmac-md5-96-etm@openssh\.com|hmac-ripemd160-etm@openssh\.com|hmac-sha1-etm@openssh\.com|hmac-sha1-96-etm@openssh\.com|umac-64-etm@openssh\.com|umac-128-etm@openssh\.com)(,\S+)*\s*$'

  "5.2.14":
    title: '5.2.14 | Ensure only strong Key Exchange algorithms are used'
    section: 'Configure SSH Server'
    description: |
        Key exchange is any method in cryptography by which cryptographic keys are exchanged between two parties, allowing use
        of a cryptographic algorithm. If the sender and receiver wish to exchange encrypted messages, each must be equipped to
        encrypt messages to be sent and decrypt messages received Notes Kex algorithms have a higher preference the earlier they
        appear in the list Some organizations may have stricter requirements for approved Key exchange algorithms Ensure that
        Key exchange algorithms used are in compliance with site policy The only Key Exchange Algorithms currently FIPS 1402
        approved are ecdhsha2nistp256 ecdhsha2nistp384 ecdhsha2nistp521 diffiehellmangroupexchangesha256
        diffiehellmangroup16sha512 diffiehellmangroup18sha512 diffiehellmangroup14sha256 The Key Exchange algorithms supported
        by OpenSSH 8.2 are
        curve25519sha256
        curve25519sha256libssh.org
        diffiehellmangroup1sha1
        diffiehellmangroup14sha1
        diffiehellmangroup14sha256
        diffiehellmangroup16sha512
        diffiehellmangroup18sha512
        diffiehellmangroupexchangesha1
        diffiehellmangroupexchangesha256
        ecdhsha2nistp256
        ecdhsha2nistp384
        ecdhsha2nistp521
        sntrup4591761x25519sha512tinyssh.org
    remediation: |
        Edit the /etc/ssh/sshd_config file add/modify the KexAlgorithms line to contain a comma separated list of the site
        approved key exchange algorithms Example: KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman-
        group14-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-
        sha2-nistp256,diffie-hellman-group-exchange-sha256
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.14', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^\s*kexalgorithms\s+(\S+,)*(diffie-hellman-group1-sha1|diffie-hellman-group14-sha1|diffie-hellman-group-exchange-sha1)(,\S+)*\s*$'

  "5.2.15":
    title: '5.2.15 | Ensure SSH Idle Timeout Interval is configured'
    section: 'Configure SSH Server'
    description: |
        The two options              ClientAliveInterval
         and              ClientAliveCountMax
         control the timeout of ssh sessions.           ClientAliveInterval
         sets a timeout interval in seconds after which if no data has been received from the client, sshd will send a message
        through the encrypted channel to request a response from the client. The default is 0, indicating that these messages
        will not be sent to the client.             ClientAliveCountMax
         sets the number of client alive messages which may be sent without sshd receiving any messages back from the client. If
        this threshold is reached while client alive messages are being sent, sshd will disconnect the client, terminating the
        session. The default value is                3
        .
                       The client alive messages are sent through the encrypted channel
        Setting                    ClientAliveCountMax
         to                    0
         disables connection termination
                     Example

        If the              ClientAliveInterval
         is set to 15 seconds and the              ClientAliveCountMax
         is set to 3, the client              ssh
         session will be terminated after 45 seconds of idle time.           Note Local site policy may be more restrictive
    remediation: |
        Edit the                  /etc/ssh/sshd_config
         file to set the parameters according to site policy.  This should include                  ClientAliveInterval
         between 1 and 300 and                  ClientAliveCountMax
         of 3 or less:
        ClientAliveInterval 300

        ClientAliveCountMax 3
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.15', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^clientaliveinterval\s*([1-9]|[1-9][0-9]|[0-2][0-9][0-9]|300)\s*$'
            - name: Undefined
              rule: 'should cmp == ^clientalivecountmax\s*[1-3]\s*$'

  "5.2.16":
    title: '5.2.16 | Ensure SSH LoginGraceTime is set to one minute or less'
    section: 'Configure SSH Server'
    description: |
        The              LoginGraceTime
         parameter specifies the time allowed for successful authentication to the SSH server. The longer the Grace period is
        the more open unauthenticated connections can exist. Like other session controls in this session the Grace Period should
        be limited to appropriate organizational limits to ensure the service is available for needed access.           Note
        Local site policy may be more restrictive
    remediation: |
        Edit the                  /etc/ssh/sshd_config
         file to set the parameter as follows:               LoginGraceTime 60
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.16', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^logingracetime\s*([1-9]|[1-5][0-9]|60|1m)\s*$'

  "5.2.17":
    title: '5.2.17 | Ensure SSH access is limited'
    section: 'Configure SSH Server'
    description: |
        There are several options available to limit which users and group can access the system via SSH. It is recommended that
        at least one of the following options be leveraged AllowUsers
          Gives the system administrator the option of allowing specific users to                ssh
         into the system
                       The list consists of space separated user names Numeric user IDs are not recognized with this variable
        A system administrator may restrict user access further by only allowing the allowed users to log in from a particular
        host by specifying the entry as                     userhost

                     AllowGroups
          Gives the system administrator the option of allowing specific groups of users to                ssh
         into the system
                       The list consists of space separated group names Numeric group IDs are not recognized with this variable
                     DenyUsers
          Gives the system administrator the option of denying specific users to                ssh
         into the system
                       The list consists of space separated user names Numeric user IDs are not recognized with this variable
        If a system administrator wants to restrict user access further by specifically denying a users access from a particular
        host by specifying the entry as                     userhost

                     DenyGroups
          Gives the system administrator the option of denying specific groups of users to                ssh
         into the system
                       The list consists of space separated group names Numeric group IDs are not recognized with this variable
    remediation: |
        Edit the                  /etc/ssh/sshd_config
         file to set one or more of the parameter as follows:
        AllowUsers <userlist>

        AllowGroups <grouplist>

        DenyUsers <userlist>

        DenyGroups <grouplist>
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.17', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^(allowusers|allowgroups|denyusers|denygroups)\s+(\S+).*$'

  "5.2.18":
    title: '5.2.18 | Ensure SSH warning banner is configured'
    section: 'Configure SSH Server'
    description: |
        The              Banner
         parameter specifies a file whose contents must be sent to the remote user before authentication is permitted. By
        default, no banner is displayed.
    remediation: |
        Edit the                  /etc/ssh/sshd_config
         file to set the parameter as follows:               Banner /etc/issue.net
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.18', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^banner\s+\/(\S+)$'

  "5.2.19":
    title: '5.2.19 | Ensure SSH PAM is enabled'
    section: 'Configure SSH Server'
    description: |
        UsePAM Enables the Pluggable Authentication Module interface. If set to yes this will enable PAM authentication using
        ChallengeResponseAuthentication and PasswordAuthentication in addition to PAM account and session module processing for
        all authentication types
    remediation: |
        Edit the                  /etc/ssh/sshd_config
         file to set the parameter as follows:               UsePAM yes
         Impact: If UsePAM is enabled, you will not be able to run sshd(8) as a non-root user.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.19', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^\s*usepam\s+yes\s*$'

  "5.2.20":
    title: '5.2.20 | Ensure SSH AllowTcpForwarding is disabled'
    section: 'Configure SSH Server'
    description: |
        SSH port forwarding is a mechanism in SSH for tunneling application ports from the client to the server, or servers to
        clients. It can be used for adding encryption to legacy applications, going through firewalls, and some system
        administrators and IT professionals use it for opening backdoors into the internal network from their home machines
    remediation: |
        Edit the /etc/ssh/sshd_config file to set the parameter as follows: AllowTcpForwarding no
         Impact: SSH tunnels are widely used in many corporate environments that employ mainframe systems as their application
        backends. In those environments the applications themselves may have very limited native support for security. By
        utilizing tunneling, compliance with SOX, HIPAA, PCI-DSS, and other standards can be achieved without having to modify
        the applications.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_5.2.20', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^\s*allowtcpforwarding\s+no\s*$'

  "5.2.21":
    title: '5.2.21 | Ensure SSH MaxStartups is configured'
    section: 'Configure SSH Server'
    description: |
        The              MaxStartups
         parameter specifies the  maximum number of concurrent unauthenticated connections to the SSH daemon.           Note
        Local site policy may be more restrictive
    remediation: |
        Edit the                  /etc/ssh/sshd_config
         file to set the parameter as follows or more restrictive:               maxstartups 10:30:100
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.21', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^\s*maxstartups\s+(10|[1-9])\:(30|[1-2][0-9]|[1-9])\:(100|[1-9][0-9])\s*$'

  "5.2.22":
    title: '5.2.22 | Ensure SSH MaxSessions is limited'
    section: 'Configure SSH Server'
    description: |
        The              MaxSessions
         parameter specifies the maximum number of open sessions permitted from a given connection.           Note Local site
        policy may be more restrictive
    remediation: |
        Edit the                  /etc/ssh/sshd_config
         file to set the parameter as follows:               MaxSessions 10
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.2.22', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == ^\s*maxsessions\s+([1-9]|10)\s*$'

  "5.3.1":
    title: '5.3.1 | Ensure password creation requirements are configured'
    section: 'Configure PAM'
    description: |
        The              pampwquality.so
         module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it
        is a certain length, contains a mix of characters e.g. alphabet, numeric, other and more. The following are definitions
        of the              pampwquality.so
         options.
        The following options are set in the              /etc/security/pwquality.conf
         file
        Password Length
                       minlen  14
          password must be 14 characters or more

        Password complexity
                       minclass  4
          The minimum number of required classes of characters for the new password digits, uppercase, lowercase, others
        OR dcredit  1
          provide at least one digit                   ucredit  1
          provide at least one uppercase character                   ocredit  1
          provide at least one special character                   lcredit  1
          provide at least one lowercase character

        The following is st in the              /etc/pam.d/commonpassword
         file           retry3
          Allow 3 tries before sending back a failure.
        The settings shown above are one possible policy. Alter these values to conform to your own organizations password
        policies.
    remediation: |
        Run the following command to install the pam_pwquality module: apt install libpam-pwquality

        Edit the file                  /etc/security/pwquality.conf
         and add or modify the following line for password length to conform to site policy               minlen = 14
         Edit the file /etc/security/pwquality.conf and add or modify the following line for password complexity to conform to
        site policy minclass = 4
         OR
        dcredit = -1
        ucredit = -1
        ocredit = -1
        lcredit = -1

        Edit the                  /etc/pam.d/common-password
         file to include the appropriate options for                  pam_pwquality.so
         and to conform to site policy:               password requisite pam_pwquality.so retry=3
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.3.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "5.3.2":
    title: '5.3.2 | Ensure lockout for failed password attempts is configured'
    section: 'Configure PAM'
    description: |
        Lock out users after              n
         unsuccessful consecutive login attempts. The first sets of changes are made to the PAM configuration files. The second
        set of changes are applied to the program specific PAM configuration file. The second set of changes must be applied to
        each program that will lock out users. Check the documentation for each secondary program for instructions on how to
        configure them to work with PAM.
        deny               n
                         n
         represents the number of failed attempts before the account is locked
        unlocktime               n
                         n
         represents the number of seconds before the account is unlocked             audit  Will log the user name into the
        system log if the user is not found. silent  Dont print informative messages.
        Set the lockout number and unlock time in accordance with local site policy. Notes
        Add pamtally2 to the account section                  account required pamtally2.so
         for the counter to reset to 0 when using sudo               Use of the audit keyword may log credentials in the case of
        user error during authentication. This risk should be evaluated in the context of the site policies of your
        organization.
        If a user has been locked out because they have reached the maximum consecutive failure count defined by
        deny
         in the                  pamtally2.so
         module, the user can be unlocked by issuing the command                  /sbin/pamtally2 u username reset
        . This command sets the failed count to 0, effectively unlocking the user.
    remediation: |
        Edit the                  /etc/pam.d/common-auth
         file and add the auth line below:               auth required pam_tally2.so onerr=fail audit silent deny=5
        unlock_time=900

        Edit the                  /etc/pam.d/common-account
         file and add the account lines bellow:
        account     requisite    pam_deny.so
        account     required     pam_tally2.so
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.3.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'

  "5.3.3":
    title: '5.3.3 | Ensure password reuse is limited'
    section: 'Configure PAM'
    description: |
        The              /etc/security/opasswd
         file stores the users old passwords and can be checked to ensure that users are not recycling recent passwords.
        Note Changes only apply to accounts configured on the local system.
    remediation: |
        Edit the                  /etc/pam.d/common-password
         file to include the                  remember
         option and conform to site policy as shown:               password required pam_pwhistory.so remember=5
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.3.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "5.3.4":
    title: '5.3.4 | Ensure password hashing algorithm is SHA-512'
    section: 'Configure PAM'
    description: |
        The commands below change password encryption from              md5
         to              sha512
         a much stronger hashing algorithm. All existing accounts will need to perform a password change to upgrade the stored
        hashes to the new algorithm.           Notes Additional module options may be set, recommendation only covers those
        listed here. If it is determined that the password algorithm being used is not SHA512, once it is changed, it is
        recommended that all user IDs be immediately expired and forced to change their passwords on next login The following
        command can be used  awk F  3  awk /\sUIDMIN/print 2 /etc/login.defs  1 ! nfsnobody   print 1  /etc/passwd  xargs n 1
        chage d 0
         Any system accounts that need to be expired should be carefully done separately by the system administrator to prevent
        any potential problems.
    remediation: |
        Edit the                  /etc/pam.d/common-password
         file to include the                  sha512
         option for                  pam_unix.so
         as shown:               password [success=1 default=ignore] pam_unix.so sha512
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.3.4', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "5.4.1.1":
    title: '5.4.1.1 | Ensure password expiration is 365 days or less'
    section: 'Set Shadow Password Suite Parameters'
    description: |
        The                PASSMAXDAYS
         parameter in                /etc/login.defs
         allows an administrator to force passwords to expire once they reach a defined age.  It is recommended that the
        PASSMAXDAYS
         parameter be set to less than or equal to 365 days.             Notes A value of 1 will disable password expiration The
        password expiration must be greater than the minimum days between password changes or users will be unable to change
        their password
    remediation: |
        Set the                    PASS_MAX_DAYS
         parameter to conform to site policy in                    /etc/login.defs
         :                 PASS_MAX_DAYS 365
         Modify user parameters for all users with a password set to match: # chage --maxdays 365 <user>
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.4.1.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "5.4.1.2":
    title: '5.4.1.2 | Ensure minimum days between password changes is  configured'
    section: 'Set Shadow Password Suite Parameters'
    description: |
        The                PASSMINDAYS
         parameter in                /etc/login.defs
         allows an administrator to prevent users from changing their password until a minimum number of days have passed since
        the last time the user changed their password. It is recommended that                PASSMINDAYS
         parameter be set to 1 or more days.
    remediation: |
        Set the                    PASS_MIN_DAYS
          parameter to 1 in                    /etc/login.defs
         :                 PASS_MIN_DAYS 1
         Modify user parameters for all users with a password set to match: # chage --mindays 1 <user>
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.4.1.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "5.4.1.3":
    title: '5.4.1.3 | Ensure password expiration warning days is 7 or more'
    section: 'Set Shadow Password Suite Parameters'
    description: |
        The                PASSWARNAGE
         parameter in                /etc/login.defs
          allows an administrator to notify users that their password will expire in a defined number of days. It is recommended
        that the                PASSWARNAGE
         parameter be set to 7 or more days.
    remediation: |
        Set the                    PASS_WARN_AGE
          parameter to 7 in                    /etc/login.defs
         :                 PASS_WARN_AGE 7
         Modify user parameters for all users with a password set to match: # chage --warndays 7 <user>
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.4.1.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "5.4.1.4":
    title: '5.4.1.4 | Ensure inactive password lock is 30 days or less'
    section: 'Set Shadow Password Suite Parameters'
    description: |
        User accounts that have been inactive for over a given period of time can be automatically disabled. It is recommended
        that accounts that are inactive for 30 days after password expiration be disabled. Note A value of 1 would disable this
        setting
    remediation: |
        Run the following command to set the default password inactivity period to 30 days: # useradd -D -f 30
         Modify user parameters for all users with a password set to match: # chage --inactive 30 <user>
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.4.1.4', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "5.4.1.5":
    title: '5.4.1.5 | Ensure all users last password change date is in the past'
    section: 'Set Shadow Password Suite Parameters'
    description: |
        All users should have a password change date in the past.
    remediation: |
        Investigate any users with a password change date in the future and correct them.  Locking the account, expiring the
        password, or resetting the password manually may be appropriate.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.4.1.5', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "5.4.2":
    title: '5.4.2 | Ensure system accounts are secured - manual'
    section: 'User Accounts and Environment'
    description: |
        There are a number of accounts provided with most distributions that are used to manage applications and are not
        intended to provide an interactive shell.
    remediation: |
        Run the commands appropriate for your distribution: Set the shell for any accounts returned by the audit to nologin: #
        usermod -s $(which nologin) <user>
         Lock any non root accounts returned by the audit: # usermod -L <user>
         The following command will set all system accounts to a non login shell: awk -F: '($1!="root" && $1!="sync" &&
        $1!="shutdown" && $1!="halt" && $1!~/^\+/ && $3<'"$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)"' && $7!="'"$(which
        nologin)"'" && $7!="/bin/false") {print $1}' /etc/passwd | while read -r user; do usermod -s "$(which nologin)" "$user";
        done
         The following command will automatically lock not root system accounts: awk -F: '($1!="root" && $1!~/^\+/ && $3<'"$(awk
        '/^\s*UID_MIN/{print $2}' /etc/login.defs)"') {print $1}' /etc/passwd | xargs -I '{}' passwd -S '{}' | awk '($2!="L" &&
        $2!="LK") {print $1}' | while read -r user; do usermod -L "$user"; done
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.4.2', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.4.3":
    title: '5.4.3 | Ensure default group for the root account is GID 0'
    section: 'User Accounts and Environment'
    description: |
        The usermod command can be used to specify which group the root user belongs to. This affects permissions of files that
        are created by the root user.
    remediation: |
        Run the following command to set the                  root
          user default group to GID                  0
         :               # usermod -g 0 root
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.4.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "5.4.4":
    title: '5.4.4 | Ensure default user umask is 027 or more restrictive'
    section: 'User Accounts and Environment'
    description: |
        The user filecreation mode mask              umask
         is use to determine the file permission for newly created directories and files. In Linux, the default permissions for
        any newly created directory is 0777 rwxrwxrwx, and for any newly created file it is 0666 rwrwrw. The              umask
         modifies the default Linux permissions by restricting masking these permissions. The              umask
         is not simply subtracted, but is processed bitwise. Bits set in the              umask
         are cleared in the resulting file mode.           umask
         can be set with either                octal
         or                Symbolic
         values             Octal
         Numeric Value  Represented by either three or four digits. ie                umask 0027
         or                umask 027
        .  If a four digit umask is used, the first digit is ignored. The remaining three digits effect the resulting
        permissions for user, group, and world/other respectively.             Symbolic
         Value  Represented by a comma separated list for User                u
        , group                g
        , and world/other                o
        .  The permissions listed are not masked by                umask
        . ie a                umask
         set by                umask urwx,grx,o
         is the                Symbolic
         equivalent of the                Octal
                       umask 027
        .  This                umask
         would set a newly created directory with file mode                drwxrx
         and a newly created file with file mode                rwr
        .
        The pamumask module will set the umask according to the system default in              /etc/login.defs
         and user settings, solving the problem of different              umask
         settings with different shells, display managers, remote sessions etc.  The default umask can also be set in a
        System Wide Shell Configuration File
        .           System Wide Shell Configuration Files /etc/profile
          used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in
        the                .profile
        , however this file is used to set an initial PATH or PS1 for all shell users of the system.
        is only executed for interactive                  login
         shells, or shells executed with the login parameter
                     /etc/profile.d
                         /etc/profile
         will execute the scripts within                /etc/profile.d/.sh
        . It is recommended to place your configuration in a shell script within                /etc/profile.d
         to set your own system wide environmental variables.             /etc/bash.bashrc
          System wide version of                .bashrc
        .                etc/bashrc
         also invokes                /etc/profile.d/.sh
         if                nonlogin
         shell, but redirects output to                /dev/null
         if                noninteractive.

        Is only executed for                  interactive
         shells or if                  BASHENV
         is set to                  /etc/bash.bashrc

                     User Shell Configuration Files /.profile
          Is executed to configure your shell before the initial command prompt.                Is only read by login shells.
                     /.bashrc
          Is executed for interactive shells.                only read by a shell thats both interactive and nonlogin
                     Notes umaskmask
         value in the                  /etc/login.defs
         file is interpreted as Octal
        Other methods of setting a default user                  umask
         exist               If other methods are in use in your environment they should be audited
        The default user                  umask
         can be overridden with a user specific                  umask
                       /etc/pam.d/login
         can be used to set the user specific                  umask
         at login               The user creating the directories or files has the discretion of changing the permissions
        Using the                      chmod
         command
        Setting a different default                      umask
         by adding the                      umask
         command into a                      User Shell Configuration File
        ,                       .bashprofile
         or                      .bash.bashrc
        , in their home directory
        Manually changing the umask for the duration of a login session by running the                    umask
         command
    remediation: |
        Edit                  /etc/login.defs
         and add or edit the                  UMASK
         line to read:               UMASK 027

        Edit                  /etc/pam.d/common-session
         and add or edit the following:               session optional                        pam_umask.so

        Run the following command and remove or modify the                  umask
         of any returned files:               # grep -RPi
        '(^|^[^#]*)\s*umask\s+([0-7][0-7][01][0-7]\b|[0-7][0-7][0-7][0-6]\b|[0-7][01][0-7]\b|[0-7][0-7][0-6]\b|(u=[rwx]{0,3},)?(g=[rwx]{0,3},)?o=[rwx]+\b|(u=[rwx]{1,3},)?g=[^rx]{1,3}(,o=[rwx]{0,3})?\b)'
        /etc/login.defs /etc/profile* /etc/bash.bashrc*
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.4.4', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "5.4.5":
    title: '5.4.5 | Ensure default user shell timeout is 900 seconds or less - manual'
    section: 'User Accounts and Environment'
    description: |
        TMOUT
         is an environmental setting that determines the timeout of a shell in seconds.
        TMOUT               n
          Sets the shell timeout to                n
         seconds.  A setting of                TMOUT0
         disables timeout.             readonly TMOUT Sets the TMOUT environmental variable as readonly, preventing unwanted
        modification during runtime. export TMOUT  exports the TMOUT variable System Wide Shell Configuration Files /etc/profile
          used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in
        the                .bashprofile
        , however this file is used to set an initial PATH or PS1 for all shell users of the system.
        is only executed for interactive                  login
         shells, or shells executed with the login parameter.
                     /etc/profile.d
                         /etc/profile
         will execute the scripts within                /etc/profile.d/.sh
        . It is recommended to place your configuration in a shell script within                /etc/profile.d
         to set your own system wide environmental variables.             /etc/bashrc
          System wide version of                bash.bashrc
        .                etc/bash.bashrc
         also invokes /etc/profile.d/.sh if                nonlogin
         shell, but redirects output to                /dev/null
         if                noninteractive.

        Is only executed for                  interactive
         shells or if                  BASHENV
         is set to                  /etc/bash.bashrc
        .
                     Notes The audit and remediation in this recommendation apply to bash and shell. If other shells are
        supported on the system, it is recommended that their configuration files are also checked Other methods of setting a
        timeout exist not covered here Ensure that the timeout conforms to your local policy
    remediation: |
        Review                  /etc/bash.bashrc
        ,                  /etc/profile
        , and all files ending in                  *.sh
         in the                  /etc/profile.d/
         directory and remove or edit all                  TMOUT=_n_
         entries to follow local site policy.                   TMOUT
         should not exceed 900 or be equal to                  0
        .
        Configure                  TMOUT
         in                  one
         of the following files:
        A file in the                    /etc/profile.d/
         directory ending in                    .sh
                         /etc/profile /etc/bash.bashrc TMOUT
         configuration examples:                 As multiple lines:
        TMOUT=900
        readonly TMOUT
        export TMOUT
                       As a single line: readonly TMOUT=900 ; export TMOUT
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.4.5', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.5":
    title: '5.5 | Ensure root login is restricted to system console - manual'
    section: 'Access, Authentication and Authorization'
    description: |
        The file            /etc/securetty
         contains a list of valid terminals that may be logged in directly as root.
    remediation: |
        Remove entries for any consoles that are not in a physically secure location.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_5.5', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.6":
    title: '5.6 | Ensure access to the su command is restricted'
    section: 'Access, Authentication and Authorization'
    description: |
        The            su
         command allows a user to run a command or shell as another user. The program has been superseded by            sudo
         , which allows for more granular control over privileged access. Normally, the            su
         command can be executed by any user. By uncommenting the            pamwheel.so
         statement in            /etc/pam.d/su
         , the            su
         command will only allow users in a specific groups to execute            su
        .  This group should be empty to reinforce the use of            sudo
         for privileged access.
    remediation: |
        Create an empty group that will be specified for use of the                su
         command.  The group should be named according to site policy.             Example: # groupadd sugroup

        Add the following line to the                /etc/pam.d/su
         file, specifying the empty group:             auth required pam_wheel.so use_uid group=sugroup
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.6', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "6.1.1":
    title: '6.1.1 | Audit system file permissions - manual'
    section: 'System File Permissions'
    description: |
        The Debian package manager has a number of useful options. One of these, the              verify
         option, can be used to verify that system packages are correctly installed. The              verify
          option can be used to verify a particular package or to verify all system packages. If no output is returned, the
        package is installed correctly. The following table describes the meaning of output from the verify option
        Code   Meaning
        S      File size differs.
        M      File mode differs includes permissions and file type.
        5      The MD5 checksum differs.
        D      The major and minor version numbers differ on a device file.
        L      A mismatch occurs in a link.
        U      The file ownership differs.
        G      The file group owner differs.
        T      The file time mtime differs.

        The              dpkg S
          command can be used to determine which package a particular file belongs to. For example the following command
        determines which package the              /bin/bash
         file belongs to
         dpkg S /bin/bash

        bash /bin/bash

        To verify the settings for the package that controls the              /bin/bash
         file, run the following
         dpkg verify bash

        5 c /etc/bash.bashrc
                   Notes Since packages and important files may change with new updates and releases, it is recommended to
        verify everything, not just a finite list of files. This can be a time consuming task and results may depend on site
        policy therefore it is not a assessed benchmark item, but is provided for those interested in additional security
        measures. Some of the recommendations of this benchmark alter the state of files audited by this recommendation. The
        audit command will alert for all changes to a file permissions even if the new state is more secure than the default.
    remediation: |
        Correct any discrepancies found and rerun the audit until output is clean or risk is mitigated or accepted.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_6.1.1', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.1.2":
    title: '6.1.2 | Ensure permissions on etcpasswd are configured'
    section: 'System File Permissions'
    description: |
        The              /etc/passwd
         file contains user account information that is used by many system utilities and therefore must be readable for these
        utilities to operate.
    remediation: |
        Run the following command to set permissions on                  /etc/passwd
        :
        # chown root:root /etc/passwd
        # chmod 644 /etc/passwd
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.1.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "6.1.3":
    title: '6.1.3 | Ensure permissions on etcpasswd- are configured'
    section: 'System File Permissions'
    description: |
        The              /etc/passwd
         file contains backup user account information.
    remediation: |
        Run the following command to set permissions on                  /etc/passwd-
         :
        # chown root:root /etc/passwd-

        # chmod u-x,go-wx /etc/passwd-
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.1.3', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "6.1.4":
    title: '6.1.4 | Ensure permissions on etcgroup are configured'
    section: 'System File Permissions'
    description: |
        The              /etc/group
         file contains a list of all the valid groups defined in the system. The command below allows read/write access for root
        and read access for everyone else.
    remediation: |
        Run the following command to set permissions on                  /etc/group
         :
        # chown root:root /etc/group

        # chmod u-x,go-wx /etc/group
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.1.4', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "6.1.5":
    title: '6.1.5 | Ensure permissions on etcgroup- are configured'
    section: 'System File Permissions'
    description: |
        The              /etc/group
         file contains a backup list of all the valid groups defined in the system.
    remediation: |
        Run the following command to set permissions on                  /etc/group-
         :
        # chown root:root /etc/group-

        # chmod u-x,go-wx /etc/group-
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.1.5', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "6.1.6":
    title: '6.1.6 | Ensure permissions on etcshadow are configured'
    section: 'System File Permissions'
    description: |
        The              /etc/shadow
         file is used to store the information about user accounts that is critical to the security of those accounts, such as
        the hashed password and other security information.
    remediation: |
        Run                  one
         of the following commands to set ownership of                  /etc/shadow
         to                  root
         and group to either                  root
         or                  shadow
        :
        # chown root:root /etc/shadow
        # chown root:shadow /etc/shadow

        Run the following command to remove excess permissions form                  /etc/shadow
        :               # chmod u-x,g-wx,o-rwx /etc/shadow
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.1.6', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "6.1.7":
    title: '6.1.7 | Ensure permissions on etcshadow- are configured'
    section: 'System File Permissions'
    description: |
        The              /etc/shadow
         file is used to store backup information about user accounts that is critical to the security of those accounts, such
        as the hashed password and other security information.
    remediation: |
        Run                  one
         of the following commands to set ownership of                  /etc/shadow-
         to                  root
         and group to either                  root
         or                  shadow
        :
        # chown root:root /etc/shadow-
        # chown root:shadow /etc/shadow-

        Run the following command to remove excess permissions form                  /etc/shadow-
        :               # chmod u-x,g-wx,o-rwx /etc/shadow-
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.1.7', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "6.1.8":
    title: '6.1.8 | Ensure permissions on etcgshadow are configured'
    section: 'System File Permissions'
    description: |
        The              /etc/gshadow
         file is used to store the information about groups that is critical to the security of those accounts, such as the
        hashed password and other security information.
    remediation: |
        Run                  one
         of the following commands to set ownership of                  /etc/gshadow
         to                  root
         and group to either                  root
         or                  shadow
        :
        # chown root:root /etc/gshadow
        # chown root:shadow /etc/gshadow

        Run the following command to remove excess permissions form                  /etc/gshadow
        :               # chmod u-x,g-wx,o-rwx /etc/gshadow
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.1.8', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "6.1.9":
    title: '6.1.9 | Ensure permissions on etcgshadow- are configured'
    section: 'System File Permissions'
    description: |
        The              /etc/gshadow
         file is used to store backup information about groups that is critical to the security of those accounts, such as the
        hashed password and other security information.
    remediation: |
        Run                  one
         of the following commands to set ownership of                  /etc/gshadow-
         to                  root
         and group to either                  root
         or                  shadow
        :
        # chown root:root /etc/gshadow-
        # chown root:shadow /etc/gshadow-

        Run the following command to remove excess permissions form                  /etc/gshadow-
        :               # chmod u-x,g-wx,o-rwx /etc/gshadow-
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.1.9', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "6.1.10":
    title: '6.1.10 | Ensure no world writable files exist - manual'
    section: 'System File Permissions'
    description: |
        Unixbased systems support variable settings to control access to files. World writable files are the least secure. See
        the              chmod2
          man page for more information.
    remediation: |
        Removing write access for the "other" category (                  chmod o-w <filename>
         ) is advisable, but always consult relevant vendor documentation to avoid breaking any application dependencies on a
        given file.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.1.10', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.1.11":
    title: '6.1.11 | Ensure no unowned files or directories exist - manual'
    section: 'System File Permissions'
    description: |
        Sometimes when administrators delete users from the password file they neglect to remove all files owned by those users
        from the system.
    remediation: |
        Locate files that are owned by users or groups not listed in the system configuration files, and reset the ownership of
        these files to some active user on the system as appropriate.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.1.11', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.1.12":
    title: '6.1.12 | Ensure no ungrouped files or directories exist - manual'
    section: 'System File Permissions'
    description: |
        Sometimes when administrators delete users or groups from the system they neglect to remove all files owned by those
        users or groups.
    remediation: |
        Locate files that are owned by users or groups not listed in the system configuration files, and reset the ownership of
        these files to some active user on the system as appropriate.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.1.12', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.1.13":
    title: '6.1.13 | Audit SUID executables - manual'
    section: 'System File Permissions'
    description: |
        The owner of a file can set the files permissions to run with the owners or groups permissions, even if the user running
        the program is not the owner or a member of the group. The most common reason for a SUID program is to enable users to
        perform functions such as changing their password that require root privileges.
    remediation: |
        Ensure that no rogue SUID programs have been introduced into the system. Review the files returned by the action in the
        Audit section and confirm the integrity of these binaries.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_6.1.13', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.1.14":
    title: '6.1.14 | Audit SGID executables - manual'
    section: 'System File Permissions'
    description: |
        The owner of a file can set the files permissions to run with the owners or groups permissions, even if the user running
        the program is not the owner or a member of the group. The most common reason for a SGID program is to enable users to
        perform functions such as changing their password that require root privileges.
    remediation: |
        Ensure that no rogue SGID programs have been introduced into the system. Review the files returned by the action in the
        Audit section and confirm the integrity of these binaries.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_6.1.14', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.2.1":
    title: '6.2.1 | Ensure accounts in etcpasswd use shadowed passwords'
    section: 'User and Group Settings'
    description: |
        Local accounts can uses shadowed passwords.  With shadowed passwords, The passwords are saved in shadow password file,
        /etc/shadow
        , encrypted by a salted oneway hash. Accounts with a shadowed password have an              x
         in the second field in              /etc/passwd
        .
    remediation: |
        Run the following command to set accounts to use shadowed passwords: # sed -e 's/^\([a-zA-Z0-9_]*\):[^:]*:/\1:x:/' -i
        /etc/passwd
         Investigate to determine if the account is logged in and what it is being used for, to determine if it needs to be
        forced off.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.2.1', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "6.2.2":
    title: '6.2.2 | Ensure password fields are not empty'
    section: 'User and Group Settings'
    description: |
        An account with an empty password field means that anybody may log in as that user without providing a password.
    remediation: |
        If any accounts in the                  /etc/shadow
         file do not have a password, run the following command to lock the account until it can be determined why it does not
        have a password:               # passwd -l <username>
         Also, check to see if the account is logged in and investigate what it is being used for to determine if it needs to be
        forced off.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.2.2', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'

  "6.2.3":
    title: '6.2.3 | Ensure all users home directories exist - manual'
    section: 'User and Group Settings'
    description: |
        Users can be defined in              /etc/passwd
         without a home directory or with a home directory that does not actually exist.
        Note The audit script checks all users with interactive shells except                halt
        ,                sync
        ,                shutdown
        , and                nfsnobody
    remediation: |
        If any users' home directories do not exist, create them and make sure the respective user owns the directory. Users
        without an assigned home directory should be removed or assigned a home directory as appropriate. The following script
        will create a home directory for users with an interactive shell who's home directory doesn't exist:
        #!/bin/bash

        awk -F: '($1!~/(halt|sync|shutdown|nfsnobody)/ && $7!~/^(\/usr)?\/sbin\/nologin(\/)?$/ &&
        $7!~/(\/usr)?\/bin\/false(\/)?$/) { print $1 " " $6 }' /etc/passwd | while read -r user dir; do
          if [ ! -d "$dir" ]; then
            mkdir "$dir"
            chmod g-w,o-wrx "$dir"
            chown "$user" "$dir"
          fi
        done
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.2.3', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.2.4":
    title: '6.2.4 | Ensure users own their home directories - manual'
    section: 'User and Group Settings'
    description: |
        The user home directory is space defined for the particular user to set local environment variables and to store
        personal files.
    remediation: |
        Change the ownership of any home directories that are not owned by the defined user to the correct user. The following
        script will create missing home directories, set the owner, and set the permissions for interactive users' home
        directories:
        #!/bin/bash

        awk -F: '($1!~/(halt|sync|shutdown)/ && $7!~/^(\/usr)?\/sbin\/nologin(\/)?$/ && $7!~/(\/usr)?\/bin\/false(\/)?$/) {
        print $1 " " $6 }' | while read -r user dir; do
          if [ ! -d "$dir" ]; then
            echo "User: \"$user\" home directory: \"$dir\" does not exist, creating home directory"
            mkdir "$dir"
            chmod g-w,o-rwx "$dir"
            chown "$user" "$dir"
          else
            owner=$(stat -L -c "%U" "$dir")
            if [ "$owner" != "$user" ]; then
              chmod g-w,o-rwx "$dir"
              chown "$user" "$dir"
            fi
          fi
        done
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.2.4', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.2.5":
    title: '6.2.5 | Ensure users home directories permissions are 750 or more restrictive - manual'
    section: 'User and Group Settings'
    description: |
        While the system administrator can establish secure permissions for users home directories, the users can easily
        override these.
    remediation: |
        Making global modifications to user home directories without alerting the user community can result in unexpected
        outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user file
        permissions and determine the action to be taken in accordance with site policy.
        The following script can be used to remove permissions is excess of                  750
         from users' home directories:
        #!/bin/bash

        awk -F: '($1!~/(halt|sync|shutdown)/ && $7!~/^(\/usr)?\/sbin\/nologin(\/)?$/ && $7!~/(\/usr)?\/bin\/false(\/)?$/) {print
        $6}' /etc/passwd | while read -r dir; do
          if [ -d "$dir" ]; then
            dirperm=$(stat -L -c "%A" "$dir")
            if [ "$(echo "$dirperm" | cut -c6)" != "-" ] || [ "$(echo "$dirperm" | cut -c8)" != "-" ] || [ "$(echo "$dirperm" |
        cut -c9)" != "-" ] || [ "$(echo "$dirperm" | cut -c10)" != "-" ]; then
              chmod o-w,g-rwx
            fi
          fi
        done
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.2.5', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.2.6":
    title: '6.2.6 | Ensure users dot files are not group or world writable - manual'
    section: 'User and Group Settings'
    description: |
        While the system administrator can establish secure permissions for users dot files, the users can easily override
        these.
    remediation: |
        Making global modifications to users' files without alerting the user community can result in unexpected outages and
        unhappy users. Therefore, it is recommended that a monitoring policy be established to report user dot file permissions
        and determine the action to be taken in accordance with site policy.
        The following script will remove excessive permissions on                  dot
         files within interactive users' home directories.
        #!/bin/bash

        awk -F: '($1!~/(halt|sync|shutdown)/ && $7!~/^(\/usr)?\/sbin\/nologin(\/)?$/ && $7!~/(\/usr)?\/bin\/false(\/)?$/) {
        print $1 " " $6 }' | while read -r user dir; do
          if [ -d "$dir" ]; then
            for file in "$dir"/.*; do
              if [ ! -h "$file" ] && [ -f "$file" ]; then
                fileperm=$(stat -L -c "%A" "$file")
                if [ "$(echo "$fileperm" | cut -c6)" != "-" ] || [ "$(echo "$fileperm" | cut -c9)" != "-" ]; then
                  chmod go-w "$file"
                fi
              fi
            done
          fi
        done
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.2.6', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.2.7":
    title: '6.2.7 | Ensure no users have .netrc files - manual'
    section: 'User and Group Settings'
    description: |
        The              .netrc
         file contains data for logging into a remote host for file transfers via FTP.
        While the system administrator can establish secure permissions for users              .netrc
         files, the users can easily override these.
        Note While the complete removal of                .netrc
         files is recommended, if any are required on the system secure permissions must be applied.
    remediation: |
        Making global modifications to users' files without alerting the user community can result in unexpected outages and
        unhappy users. Therefore, it is recommended that a monitoring policy be established to report user
        .netrc
         file permissions and determine the action to be taken in accordance with local site policy.
        The following script will remove                  .netrc
         files from interactive users' home directories
        #!/bin/bash

        awk -F: '($1!~/(halt|sync|shutdown)/ && $7!~/^(\/usr)?\/sbin\/nologin(\/)?$/ && $7!~/(\/usr)?\/bin\/false(\/)?$/) {
        print $6 }'  /etc/passwd | while read -r dir; do
          if [ -d "$dir" ]; then
            file="$dir/.netrc"
            [ ! -h "$file" ] && [ -f "$file" ] && rm -f "$file"
          fi
        done
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.2.7', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.2.8":
    title: '6.2.8 | Ensure no users have .forward files - manual'
    section: 'User and Group Settings'
    description: |
        The              .forward
         file specifies an email address to forward the users mail to.
    remediation: |
        Making global modifications to users' files without alerting the user community can result in unexpected outages and
        unhappy users. Therefore, it is recommended that a monitoring policy be established to report user
        .forward
         files and determine the action to be taken in accordance with site policy.
        The following script will remove                  .forward
         files from interactive users' home directories
        #!/bin/bash

        awk -F: '($1!~/(root|halt|sync|shutdown)/ && $7!~/^(\/usr)?\/sbin\/nologin(\/)?$/ && $7!~/(\/usr)?\/bin\/false(\/)?$/) {
        print $6 }' /etc/passwd | while read -r dir; do
          if [ -d "$dir" ]; then
            file="$dir/.forward"
            [ ! -h "$file" ] && [ -f "$file" ] && rm -r "$file"
          fi
        done
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.2.8', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == .forward'

  "6.2.9":
    title: '6.2.9 | Ensure no users have .rhosts files - manual'
    section: 'User and Group Settings'
    description: |
        While no              .rhosts
         files are shipped by default, users can easily create them.
    remediation: |
        Making global modifications to users' files without alerting the user community can result in unexpected outages and
        unhappy users. Therefore, it is recommended that a monitoring policy be established to report user
        .rhosts
         files and determine the action to be taken in accordance with site policy.
        The following script will remove                  .rhosts
         files from interactive users' home directories
        #!/bin/bash

        awk -F: '($1!~/(root|halt|sync|shutdown)/ && $7!~/^(\/usr)?\/sbin\/nologin(\/)?$/ && $7!~/(\/usr)?\/bin\/false(\/)?$/) {
        print $6 }' /etc/passwd | while read -r dir; do
          if [ -d "$dir" ]; then
            file="$dir/.rhosts"
            [ ! -h "$file" ] && [ -f "$file" ] && rm -r "$file"
          fi
        done
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.2.9', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == .rhosts'

  "6.2.10":
    title: '6.2.10 | Ensure root is the only UID 0 account'
    section: 'User and Group Settings'
    description: |
        Any account with UID 0 has superuser privileges on the system.
    remediation: |
        Remove any users other than                  root
          with UID                  0
          or assign them a new UID if appropriate.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.2.10', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "6.2.11":
    title: '6.2.11 | Ensure root PATH Integrity - manual'
    section: 'User and Group Settings'
    description: |
        The              root
         user can execute any command on the system and could be fooled into executing programs unintentionally if the
        PATH
         is not set correctly.
    remediation: |
        Correct or justify any items discovered in the Audit step.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.2.11', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.2.12":
    title: '6.2.12 | Ensure all groups in etcpasswd exist in etcgroup - manual'
    section: 'User and Group Settings'
    description: |
        Over time, system administration errors and changes can lead to groups being defined in              /etc/passwd
         but not in              /etc/group
         .
    remediation: |
        Analyze the output of the Audit step above and perform the appropriate action to correct any discrepancies found.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.2.12', 'cis_debian_family_linux_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.2.13":
    title: '6.2.13 | Ensure no duplicate UIDs exist'
    section: 'User and Group Settings'
    description: |
        Although the              useradd
         program will not let you create a duplicate User ID UID, it is possible for an administrator to manually edit the
        /etc/passwd
         file and change the UID field.
    remediation: |
        Based on the results of the audit script, establish unique UIDs and review all files owned by the shared UIDs to
        determine which UID they are supposed to belong to.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.2.13', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "6.2.14":
    title: '6.2.14 | Ensure no duplicate GIDs exist'
    section: 'User and Group Settings'
    description: |
        Although the              groupadd
         program will not let you create a duplicate Group ID GID, it is possible for an administrator to manually edit the
        /etc/group
         file and change the GID field.
    remediation: |
        Based on the results of the audit script, establish unique GIDs and review all files owned by the shared GID to
        determine which group they are supposed to belong to.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.2.14', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "6.2.15":
    title: '6.2.15 | Ensure no duplicate user names exist'
    section: 'User and Group Settings'
    description: |
        Although the              useradd
         program will not let you create a duplicate user name, it is possible for an administrator to manually edit the
        /etc/passwd
         file and change the user name.
    remediation: |
        Based on the results of the audit script, establish unique user names for the users. File ownerships will automatically
        reflect the change as long as the users have unique UIDs.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.2.15', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "6.2.16":
    title: '6.2.16 | Ensure no duplicate group names exist'
    section: 'User and Group Settings'
    description: |
        Although the              groupadd
         program will not let you create a duplicate group name, it is possible for an administrator to manually edit the
        /etc/group
         file and change the group name.
    remediation: |
        Based on the results of the audit script, establish unique names for the user groups. File group ownerships will
        automatically reflect the change as long as the groups have unique GIDs.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.2.16', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

  "6.2.17":
    title: '6.2.17 | Ensure shadow group is empty'
    section: 'User and Group Settings'
    description: |
        The shadow group allows system programs which require access the ability to read the /etc/shadow file. No users should
        be assigned to the shadow group.
    remediation: |
        Remove all users from the shadow group, and change the primary group of any users with shadow as their primary group.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.2.17', 'cis_debian_family_linux_benchmark']
    enabled: true
    properties:
      match: all
      rules:

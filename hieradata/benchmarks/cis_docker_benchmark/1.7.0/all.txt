1.1.1 - Ensure a separate partition for containers has been created
1.1.2 - Ensure only trusted users are allowed to control Docker daemon
1.1.3 - Ensure auditing is configured for the Docker daemon
1.1.4 - Ensure auditing is configured for Docker files and directories - runcontainerd
1.1.5 - Ensure auditing is configured for Docker files and directories - varlibdocker
1.1.6 - Ensure auditing is configured for Docker files and directories - etcdocker
1.1.7 - Ensure auditing is configured for Docker files and directories - docker.service
1.1.8 - Ensure auditing is configured for Docker files and directories - containerd.sock
1.1.9 - Ensure auditing is configured for Docker files and directories - docker.sock
1.1.10 - Ensure auditing is configured for Docker files and directories - etcdefaultdocker
1.1.11 - Ensure auditing is configured for Docker files and directories - etcdockerdaemon.json
1.1.12 - Ensure auditing is configured for Docker files and directories - etccontainerdconfig.toml
1.1.13 - Ensure auditing is configured for Docker files and directories - etcsysconfigdocker
1.1.14 - Ensure auditing is configured for Docker files and directories - usrbincontainerd
1.1.15 - Ensure auditing is configured for Docker files and directories - usrbincontainerd-shim
1.1.16 - Ensure auditing is configured for Docker files and directories - usrbincontainerd-shim-runc-v1
1.1.17 - Ensure auditing is configured for Docker files and directories - usrbincontainerd-shim-runc-v2
1.1.18 - Ensure auditing is configured for Docker files and directories - usrbinrunc
1.2.1 - Ensure the container host has been Hardened
1.2.2 - Ensure that the version of Docker is up to date
2.1 - Run the Docker daemon as a non-root user if possible
2.2 - Ensure network traffic is restricted between containers on the default bridge
2.3 - Ensure the logging level is set to info
2.4 - Ensure Docker is allowed to make changes to iptables
2.5 - Ensure insecure registries are not used
2.6 - Ensure aufs storage driver is not used
2.7 - Ensure TLS authentication for Docker daemon is configured
2.8 - Ensure the default ulimit is configured appropriately
2.9 - Enable user namespace support
2.10 - Ensure the default cgroup usage has been confirmed
2.11 - Ensure base device size is not changed until needed
2.12 - Ensure that authorization for Docker client commands is enabled
2.13 - Ensure centralized and remote logging is configured
2.14 - Ensure containers are restricted from acquiring new privileges
2.15 - Ensure live restore is enabled
2.16 - Ensure Userland Proxy is Disabled
2.17 - Ensure that a daemon-wide custom seccomp profile is applied if appropriate
2.18 - Ensure that experimental features are not implemented in production
3.1 - Ensure that the docker.service file ownership is set to rootroot
3.2 - Ensure that docker.service file permissions are appropriately set
3.3 - Ensure that docker.socket file ownership is set to rootroot
3.4 - Ensure that docker.socket file permissions are set to 644 or more restrictive
3.5 - Ensure that the etcdocker directory ownership is set to rootroot
3.6 - Ensure that etcdocker directory permissions are set to 755 or more restrictively
3.7 - Ensure that registry certificate file ownership is set to rootroot
3.8 - Ensure that registry certificate file permissions are set to 444 or more restrictively
3.9 - Ensure that TLS CA certificate file ownership is set to rootroot
3.10 - Ensure that TLS CA certificate file permissions are set to 444 or more restrictively
3.11 - Ensure that Docker server certificate file ownership is set to rootroot
3.12 - Ensure that the Docker server certificate file permissions are set to 444 or more restrictively
3.13 - Ensure that the Docker server certificate key file ownership is set to rootroot
3.14 - Ensure that the Docker server certificate key file permissions are set to 400
3.15 - Ensure that the Docker socket file ownership is set to rootdocker
3.16 - Ensure that the Docker socket file permissions are set to 660 or more restrictively
3.17 - Ensure that the daemon.json file ownership is set to rootroot
3.18 - Ensure that daemon.json file permissions are set to 644 or more restrictive
3.19 - Ensure that the etcdefaultdocker file ownership is set to rootroot
3.20 - Ensure that the etcdefaultdocker file permissions are set to 644 or more restrictively
3.21 - Ensure that the etcsysconfigdocker file permissions are set to 644 or more restrictively
3.22 - Ensure that the etcsysconfigdocker file ownership is set to rootroot
3.23 - Ensure that the Containerd socket file ownership is set to rootroot
3.24 - Ensure that the Containerd socket file permissions are set to 660 or more restrictively
4.1 - Ensure that a user for the container has been created
4.2 - Ensure that containers use only trusted base images
4.3 - Ensure that unnecessary packages are not installed in the container
4.4 - Ensure images are scanned and rebuilt to include security patches
4.5 - Ensure Content trust for Docker is Enabled
4.6 - Ensure that HEALTHCHECK instructions have been added to container images
4.7 - Ensure update instructions are not used alone in Dockerfiles
4.8 - Ensure setuid and setgid permissions are removed
4.9 - Ensure that COPY is used instead of ADD in Dockerfiles
4.10 - Ensure secrets are not stored in Dockerfiles
4.11 - Ensure only verified packages are installed
4.12 - Ensure all signed artifacts are validated
5.1 - Ensure swarm mode is not Enabled if not needed
5.2 - Ensure that if applicable an AppArmor Profile is enabled
5.3 - Ensure that if applicable SELinux security options are set
5.4 - Ensure that Linux kernel capabilities are restricted within containers
5.5 - Ensure that privileged containers are not used
5.6 - Ensure sensitive host system directories are not mounted on containers
5.7 - Ensure sshd is not run within containers
5.8 - Ensure privileged ports are not mapped within containers
5.9 - Ensure that only needed ports are open on the container
5.10 - Ensure that the hosts network namespace is not shared
5.11 - Ensure that the memory usage for containers is limited
5.12 - Ensure that CPU priority is set appropriately on containers
5.13 - Ensure that the containers root filesystem is mounted as read only
5.14 - Ensure that incoming container traffic is bound to a specific host interface
5.15 - Ensure that the on-failure container restart policy is set to 5
5.16 - Ensure that the hosts process namespace is not shared
5.17 - Ensure that the hosts IPC namespace is not shared
5.18 - Ensure that host devices are not directly exposed to containers
5.19 - Ensure that the default ulimit is overwritten at runtime if needed
5.20 - Ensure mount propagation mode is not set to shared
5.21 - Ensure that the hosts UTS namespace is not shared
5.22 - Ensure the default seccomp profile is not Disabled
5.23 - Ensure that  docker exec commands are not used with the privileged option
5.24 - Ensure that docker exec commands are not used with the userroot option
5.25 - Ensure that cgroup usage is confirmed
5.26 - Ensure that  the container is restricted from acquiring additional privileges
5.27 - Ensure that container health is checked at runtime
5.28 - Ensure that Docker commands always make use of the latest version of their image
5.29 - Ensure that the PIDs cgroup limit is used
5.30 - Ensure that Dockers default bridge docker0 is not used
5.31 - Ensure that the hosts user namespaces are not shared
5.32 - Ensure that the Docker socket is not mounted inside any containers
6.1 - Ensure that image sprawl is avoided
6.2 - Ensure that container sprawl is avoided
7.1 - Ensure that the minimum number of manager nodes have been created in a swarm
7.2 - Ensure that swarm services are bound to a specific host interface
7.3 - Ensure that all Docker swarm overlay networks are encrypted
7.4 - Ensure that Dockers secret management commands are used for managing secrets in a swarm cluster
7.5 - Ensure that swarm manager is run in auto-lock mode
7.6 - Ensure that the swarm manager auto-lock key is rotated periodically
7.7 - Ensure that node certificates are rotated as appropriate
7.8 - Ensure that CA certificates are rotated as appropriate
7.9 - Ensure that management plane traffic is separated from data plane traffic
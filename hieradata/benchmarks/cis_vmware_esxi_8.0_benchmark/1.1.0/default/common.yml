---

inspec_rules:
  "1.1":
    title: '1.1 | L1 Host hardware must have auditable authentic and up to date system  device firmware - manual'
    section: 'Hardware'
    description: |
        Hardware firmware is not immune to serious issues affecting confidentiality, integrity, or availability. Vulnerable
        system management controllers  management engines can provide places for attackers to establish persistence, in order to
        reinfect and recompromise hosts after reboots and updates. Ensure that the latest firmware updates are applied to all
        components of your systems and that the firmware is authentic and supplied by your hardware manufacturer.
    remediation: |
        Impact: If you are a vSAN customer please ensure that storage device & controller firmware versions are certified.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_1.1', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.2":
    title: '1.2 | L1 Host hardware must enable UEFI Secure Boot - manual'
    section: 'Hardware'
    description: |
        UEFI Secure Boot is a security feature of the Unified Extensible Firmware Interface UEFI specification. Its primary
        purpose is to ensure that only signed and trusted boot loaders and operating system kernels are allowed to execute
        during the system startup. This helps protect systems from malware and unauthorized software that might try to run
        before the operating system loads. By verifying the digital signatures of bootable applications and drivers, Secure Boot
        prevents potentially harmful code from compromising the boot process.
    remediation: |
        Impact: Enabling this after installation may render the host unbootable. Refer to the vSphere documentation for more
        information about enabling Secure Boot.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_1.2', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.3":
    title: '1.3 | L1 Host hardware must enable Intel TXT if available - manual'
    section: 'Hardware'
    description: |
        Intel Xeon Scalable Processor platforms have Trusted Execution Technology, or TXT, that help harden systems against
        malware, rootkits, BIOS  firmware attacks, and more. When enabled, ESXi will take advantage of security benefits offered
        by this technology.
    remediation: |
        Impact: In early implementations, operations such as firmware updates and abrupt system shutdowns may activate
        attestation alarms in vCenter Server or cause boot failures. Typically, a cold system restart offers a temporary fix,
        while a system firmware update provides a permanent solution. Refer to KB 78243.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_1.3', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.4":
    title: '1.4 | L1 Host hardware must enable and configure a TPM 2.0 - manual'
    section: 'Hardware'
    description: |
        ESXi can use Trusted Platform Modules TPM 2.0 to enable advanced security features that prevent malware, remove
        dependencies, and secure hardware lifecycle operations.
    remediation: |
        Impact: No impact noted.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_1.4', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.5":
    title: '1.5 | L1 Host integrated hardware management controller must be secure - manual'
    section: 'Hardware'
    description: |
        Many servers have integrated hardware management controllers that can be extremely helpful when monitoring and updating
        hardware, settings, and firmware. These controllers should be checked to ensure that ALL unused functionality is
        disabled, ALL unused access methods are disabled, passwords and password controls are set, and firewalling and access
        control is in place so that the only access is from authorized access workstations for the virtualization administration
        team. All first boot configuration options should be disabled, especially ones that reconfigure the system from USB
        devices that are inserted. Disable or protect USB ports attached to the management controllers. Where possible, USB
        ports should be set to only permit keyboards. Default passwords for accounts should be changed. External information
        displays should be secured to prevent information leakage. Power and information buttons should be secured against
        unauthorized use. Many hardware management controllers provide mechanisms for alerting when hardware faults
        configuration changes occur. You should consider those if you are not using another method for hardware monitoring.
    remediation: |
        Impact: Disablement of connection methods may mean that future monitoring and management efforts require changes to the
        hardware management controller configurations across your fleet of servers. Most hardware management controllers have
        CLI and API management methods that can be scripted and used from a management workstation, in lieu of additional
        management software or applications. Learning these techniques saves time, avoids the additional effort of installing
        and maintaining additional tools, and allows for timely changes to configurations.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_1.5', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.6":
    title: '1.6 | L1 Host integrated hardware management controller must enable time synchronization - manual'
    section: 'Hardware'
    description: |
        Cryptography, audit logging, cluster operations, and incident response/forensics depend deeply on synchronized time.
        This recommendation extends to all devices in infrastructure. The recommendation for NTP is to have at least four
        sources.
    remediation: |
        Impact: No impact noted.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_1.6', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.7":
    title: '1.7 | L1 Host integrated hardware management controller must enable remote logging of events - manual'
    section: 'Hardware'
    description: |
        The hosts integrated hardware management controller provides critical outofband server oversight. For enhanced security,
        it is essential to configure this controller to log events remotely. This practice ensures that hardwarerelated logs are
        sent to an offsite location, protecting them from potential tampering and offering a centralized record of server health
        and activities.
    remediation: |
        Impact: No impact noted.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_1.7', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.8":
    title: '1.8 | L1 Host integrated hardware management controller must secure authentication - manual'
    section: 'Hardware'
    description: |
        Connections to centralized authentication sources, like Active Directory, should be disabled or carefully considered as
        attack vectors and dependency loops for authentication, authorization, DNS, DHCP, and time. Consider managing local
        accounts on these devices through the APIs and CLI interfaces provided. If Active Directory must be used for
        authentication do authorization locally so that an attacker with access to Active Directory cannot promote themselves
        through group membership.
    remediation: |
        Impact: Not connecting hardware management controllers to centralized authentication & authorization sources entails
        additional management. Most hardware management controllers have CLI toolkits or APIs to automate management of user
        accounts and/or authorization levels.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_1.8', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.9":
    title: '1.9 | L2 Host hardware must enable AMD SEV-ES if available - manual'
    section: 'Hardware'
    description: |
        AMD EPYC platforms support SEVES, a technology to encrypt memory and CPU register state, and limit visibility to the
        hypervisor, in order to increase workload security and decrease exposure to certain types of attacks. When configured
        properly, vSphere supports the use of SEVES inside guest virtual machines and containers under vSphere and vSphere with
        Tanzu. Enabling SEVES in system firmware eases future enablement inside virtual machines, containers, and guest OSes.
    remediation: |
        Impact: Use of SEV-ES in a particular VM requires the guest OS to support it, and will limit some operational features
        such as vMotion, snapshots, and so on. Consult the documentation for more information about these tradeoffs.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_1.9', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.10":
    title: '1.10 | L2 Host hardware must enable Intel SGX if available - manual'
    section: 'Hardware'
    description: |
        Intel Xeon Scalable Processor platforms have Software Guard Extensions, or SGX, a technology that helps applications
        protect data in system memory. When configured properly, vSphere supports the use of SGX inside guest virtual machines.
        Enabling SGX in system firmware eases future enablement inside virtual machines and guest OSes.
    remediation: |
        Impact: Use of SGX requires guest OS support, and will limit some operational features inside vSphere, such as vMotion,
        snapshots, fault tolerance, and suspend/resume.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_1.10', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.11":
    title: '1.11 | L2 Host hardware must secure unused external hardware ports - manual'
    section: 'Hardware'
    description: |
        Unused ports, especially USB, can be used by attackers to attach storage, networking, and keyboards. Take reasonable
        steps to control access to these ports through disablement, access control, and/or with other means such as solid rack
        doors, rack side panels, and flooring that makes the ports inaccessible from outside the rack when the rack door is
        closed. Cables fit easily through many gaps in and around racks and rack doors, and stiff wires can be used to push them
        into sockets from outside the rack, as well as to dislodge cables to create a service disruption. Where possible, USB
        ports should also be set to only permit keyboards. When disabling functionality like this please consider that you may
        need to access the server using a USB keyboard during an outage or as part of lifecycle operations, and plan
        accordingly.
    remediation: |
        Impact: Security involves balancing risks, including ease of recovery from outages. Disabling external ports can hinder
        emergency use of the ESXi console. Servers can often toggle USB port access; ensure your choice aligns with
        organizational needs and is tested prior to incidents.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_1.11', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.12":
    title: '1.12 | L2 Host integrated hardware management controller must deactivate internal networking - manual'
    section: 'Hardware'
    description: |
        Many servers have integrated hardware management controllers with the ability to present virtual network interfaces to
        ESXi as a management interface. These approaches create potential backdoors for access and are used by adversaries to
        circumvent networkbased/perimeter firewalls, in either direction, and avoid observation by IDS/IPS/threat analysis
        tools. In many cases this functionality is not strictly necessary to manage hosts.
    remediation: |
        Impact: Disablement of internal networking may limit vendor management tool effectiveness.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_1.12', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.1":
    title: '2.1 | L1 Host must run software that has not reached End of General Support status - manual'
    section: 'Base'
    description: |
        The End of General Support EOGS status indicates that the software version has exceeded its primary support lifecycle,
        during which VMware provides new security patches, bug fixes, and technical assistance. When a product reaches this
        status, VMware no longer releases security updates for that version for customers outside of an extended support
        contract. Thus, systems still running software past its EOGS are potentially exposed to unpatched vulnerabilities and
        other security risks.
    remediation: |
        Impact: Failing to update and maintain software versions within the support period can lead to potential security
        breaches, data losses, and reduced operational efficiency, as the software might become incompatible with newer
        technologies and lack support for emerging security threats.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_2.1', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.2":
    title: '2.2 | L1 Host must have all software updates installed - manual'
    section: 'Base'
    description: |
        Applying updates in a timely manner according to the severity of issues contributes greatly to the resilience of an
        environment. When applying updates, it is recommended to update vCenter Server first, if an update is available, and
        then proceed with updating ESXi. This sequence ensures that the management layer is updated before updating the ESXi
        hosts.
        VMware publishes advisories on security vulnerabilities for proactive notifications please subscribe to the mailing list
        at            https//www.vmware.com/security/advisories.html
    remediation: |
        Use VMware Lifecycle Manager to update and upgrade hosts when ESXi is managed through VMware vCenter. For standalone
        hosts use esxcli or API-driven methods for applying updates. Employ a process to keep ESXi hosts up to date with patches
        in accordance with industry standards and internal guidelines. Leverage the VMware Lifecycle Manager to test and apply
        patches as they become available. Impact: ESXi servers must be in Maintenance Mode to apply patches. This implies all
        VMs must be moved or powered off on the ESXi server, so the patching process may necessitate brief outages. ESXi hosts
        that are compatible with Quick Boot may be able to greatly minimize the host restart time. VMware vSphere Update
        releases add and change system functionality, whereas Patch releases only resolve issues.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_2.2', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.3":
    title: '2.3 | L1 Host must enable Secure Boot enforcement - manual'
    section: 'Base'
    description: |
        Enabling Secure Boot enforcement ensures that the host only loads UEFI drivers and applications with valid digital
        signatures, as part of the UEFI firmware standard. It requires support from the servers BIOS and hypervisor boot loader,
        and mandates that all ESXi kernel modules, drivers, and VIBs be signed by VMware or a trusted partner subordinate.
    remediation: |
        Impact: Failing to enable Secure Boot enforcement exposes the ESXi host to potential security breaches. Without this
        control, an attacker could compromise the ESXi host by booting it on a non-Secure Boot host, bypassing ESXi's
        protections. This could lead to unauthorized access, data breaches, and compromise of the virtual environment's
        integrity. Enabling Secure Boot enforcement is crucial for maintaining a secure and trusted ESXi host, mitigating
        potential negative impacts, and safeguarding the virtual infrastructure.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_2.3', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.4":
    title: '2.4 | L1 Host image profile acceptance level must be PartnerSupported or higher'
    section: 'Base'
    description: |
        The acceptance level on ESXi regulates the type of software that can be installed on the system, with four distinct
        levels VMwareCertified, VMwareAccepted, PartnerSupported, and CommunitySupported. Its advised to set the acceptance
        level to PartnerSupported or higher to ensure that only tested and digitally signed vSphere Installation Bundles VIBs
        are allowed for installation.
    remediation: |
        To verify the host image profile acceptance level perform the following: From the vSphere Web Client, select the host.
        Click                  Configure
        , then under                  System
         select                  Security Profile
        .
        Under                  Host Image Profile Acceptance Level
         select                  Edit

        In the dropdown select one of the following -                  VMware Certified
        ,                  VMware Accepted
        , or                  Partner Supported
        .               To implement the recommended configuration state, run the following PowerCLI command (in the example
        code, the level is Partner Supported):
        # Set the Software AcceptanceLevel for each host<span>
        Foreach ($VMHost in Get-VMHost ) {
         $ESXCli = Get-EsxCli -VMHost $VMHost
         $ESXCli.software.acceptance.Set("PartnerSupported")
        }
                     Impact: Restricting the acceptance level to PartnerSupported or higher prevents the installation of
        CommunitySupported packages, which are unsigned and hence, potentially unreliable or insecure. This restriction, while
        enhancing security, might limit the range of software that can be installed on the ESXi host.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.4', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'

  "2.5":
    title: '2.5 | L1 Host must only run binaries delivered via signed VIB - manual'
    section: 'Base'
    description: |
        The ESXi host is configured to only execute binaries originating from a valid, signed vSphere Installable Bundle VIB to
        enhance the integrity of the system. This measure thwarts attackers attempts to use prebuilt toolkits on the host. The
        parameter governing this behavior is VMkernel.Boot.execInstalledOnly with a recommended setting of True.
    remediation: |
        Impact: This security control may hinder the installation or execution of third-party unsigned software, potentially
        impacting the flexibility and extensibility of the ESXi host environment.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_2.5', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.6":
    title: '2.6 | L1 Host must have reliable time synchronization sources'
    section: 'Base'
    description: |
        Ensuring reliable time synchronization is crucial as various functions like cryptography, audit logging, cluster
        operations, and incident response/forensics are heavily dependent on synchronized time. Utilizing at least four NTP
        sources is recommended for achieving reliable time synchronization. Alternatively, PTP can be employed for
        submillisecond time accuracy, with NTP configured as a backup to maintain time synchronization resilience in case of
        primary server failure.
    remediation: |
        To enable and properly configure NTP synchronization, perform the following from the vSphere web client: Select a host
        Click                  Configure
         then expand                  System
         then select                  Time Configuration
        .
        Select                  Edit
         next to Network Time Protocol
        Select the                  Enable
         box, then fill in the appropriate NTP Servers.
        in the                  NTP Service Startup Policy
         drop down select                  Start and stop with host
        .
        Click                  OK
        .               To implement the recommended configuration state, run the following PowerCLI command:
        # Set the NTP Settings for all hosts
        # If an internal NTP server is used, replace pool.ntp.org with
        # the IP address or the Fully Qualified Domain Name (FQDN) of the internal NTP server
        $NTPServers = "pool.ntp.org", "pool2.ntp.org"
        Get-VMHost | Add-VmHostNtpServer $NTPServers
                     Impact: Inadequate time synchronization may lead to erroneous system logs, compromised cryptographic
        operations, inefficient cluster operations, and hindered incident response efforts. The resilience and accuracy of time
        synchronization are vital for maintaining operational integrity and security posture.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.6', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'

  "2.7":
    title: '2.7 | L1 Host must have time synchronization services enabled and running - manual'
    section: 'Base'
    description: |
        Ensure the host has time synchronization services enabled and operational as many functions such as cryptography, audit
        logging, cluster operations, and incident response/forensics depend on synchronized time. Services like NTP or PTP
        should be configured to start with the host and remain running to maintain time synchronization.
    remediation: |
        Impact: Failure to maintain time synchronization can lead to inaccurate logging, which could complicate incident
        response and forensic analysis. It may also affect the functioning of cluster operations and cryptographic protocols.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_2.7', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.8":
    title: '2.8 | L1 Host must require TPM-based configuration encryption - manual'
    section: 'Base'
    description: |
        The host should enforce TPMbased configuration encryption to secure its configuration files, notably within the /etc/
        directory or other namespaces. From vSphere 7.0 Update 2 onwards, configuration files archived are encrypted, leveraging
        a Trusted Platform Module TPM to seal the configuration to the host, thereby enhancing security against offline attacks.
        This encryption, once enabled, is irreversible and utilizes the physical TPM present during installation or upgrade.
    remediation: |
        Impact: Enabling TPM-based configuration encryption alongside Secure Boot renders traditional root password recovery
        methods ineffective. It's imperative to ensure continued access to administrator accounts on ESXi to avoid access
        issues.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_2.8', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.9":
    title: '2.9 | L1 Host must not suppress warnings about unmitigated hyperthreading vulnerabilities - manual'
    section: 'Base'
    description: |
        It is imperative to retain hyperthreading security warnings as they indicate unmitigated CPU vulnerabilities. The
        parameter governing this behavior is UserVars.SuppressHyperthreadWarning, with a recommended setting of 0.
    remediation: |
        Impact: No functional impact is associated with this security control, however, ignoring hyperthreading warnings could
        obscure existing CPU vulnerabilities, potentially jeopardizing system security.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_2.9', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.10":
    title: '2.10 | L1 Host must restrict inter-VM transparent page sharing'
    section: 'Base'
    description: |
        Transparent Page Sharing TPS aids in optimizing memory usage among virtual machines but under certain circumstances can
        be exploited to access data on adjacent virtual machines unauthorizedly. By configuring the Mem.ShareForceSalting
        parameter, interVM TPS is restricted, enhancing isolation and security. The parameter governing this behavior is
        Mem.ShareForceSalting with a recommended setting of 2.
    remediation: |
        From the vSphere Web Client: Select a host
        Click                  Configure
         then expand                  System
         then select                  Advanced System settings
        .
        Click                  Edit
         then Filter for                  Mem.ShareForceSalting
        .
        Set the value to                  2
        .
        Click                  OK
        .               Additionally, the following PowerCLI command can be used: Get-VMHost | Get-AdvancedSetting -Name
        Mem.ShareForceSalting | Set-AdvancedSetting -Value 2
         Impact: There is no noted functional impact, indicating that restricting inter-VM TPS does not adversely affect the
        system’s performance or operations while bolstering security against potential data access exploits.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.10', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq 2'
            - name: Undefined
              rule: 'Undefined'

  "2.11":
    title: '2.11 | L1 Host must use sufficient entropy for cryptographic operations - manual'
    section: 'Base'
    description: |
        Starting with vSphere 8.0, ESXi has enhanced its entropy implementation to align with FIPS 1403 and EAL4 certifications,
        ensuring a robust foundation for cryptographic operations. Kernel boot options dictate the activation of entropy sources
        on an ESXi host. The parameter governing this behavior is disableHwrng  FALSE and entropySources  0.
    remediation: |
        Impact: There is no functional impact noted.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_2.11', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.12":
    title: '2.12 | L2 Host must enable volatile key destruction - manual'
    section: 'Base'
    description: |
        By default, ESXi ensures that pages allocated for virtual machines VMs, userspace applications, and kernel threads are
        zeroed out at the time of allocation, to prevent the exposure of sensitive data like cryptographic keys to other
        clients. However, these keys can remain in host memory for an extended period if the memory is not reused. The
        Mem.MemEagerZero parameter can be configured to enforce the zeroing out of userworld and guest memory pages when a
        userworld process or guest exits, and for kernel threads, memory spaces holding keys are zeroed out as soon as the
        secret is no longer needed. This practice adheres to the NIAP Virtualization Protection Profile and Server
        Virtualization Extended Package requirements of zeroing memory that may contain cryptographic keys upon process exit.
        The parameter governing this behavior is Mem.MemEagerZero with a recommended setting of 1.
    remediation: |
        Impact: Activating volatile key destruction through the Mem.MemEagerZero parameter results in additional shutdown time
        required for virtual machines, corresponding to the amount of allocated memory. While this may extend the downtime
        during reboots or migrations, the trade-off ensures a higher level of security by preventing the potential exposure of
        sensitive data, fulfilling compliance requirements, and aiding in the effective management of cryptographic materials
        within the virtualized environment.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_2.12', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.1":
    title: '3.1 | L1 Host should deactivate SSH'
    section: 'Management'
    description: |
        Secure Shell SSH provides remote access to the ESXi shell, enabling direct host console access or remote connectivity.
        Deactivating SSH is a security measure aimed at minimizing remote access channels to the ESXi host, restricting it to
        essential connections only through vSphere Client, vCLI/PowerCLI, or published APIs. The service status should be set to
        Stopped, allowing manual start and stop for troubleshooting or diagnostic activities when necessary.
    remediation: |
        To disable SSH, perform the following: From the vSphere Web Client, select the host.
        Select                  Configure
         then expand                  System
         and select                  Services
        .
        Click on                  SSH
         then click                  Edit Startup Policy
        .
        Set the Startup Policy is set to                  Start and Stop Manually
        .
        Click                  OK
        .
        While                  ESXi Shell
         is still selected click                  Stop
        .               Alternately, use the following PowerCLI command:
        # Set SSH to start manually rather than automatically for all hosts
        Get-VMHost | Get-VMHostService | Where { $_.key -eq "TSM-SSH" } | Set-VMHostService -Policy Off
                     Impact: There is no functional impact noted; however, the measure requires alternative methods for remote
        management, such as vSphere Client or command-line tools, which may demand additional configurations or toolset
        proficiency.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.1', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'

  "3.2":
    title: '3.2 | L1 Host must deactivate the ESXi shell'
    section: 'Management'
    description: |
        The ESXi shell is an interactive command line environment available from the Direct Console User Interface DCUI or
        remotely via SSH. Activities performed from the ESXi Shell bypass all access controls, but are logged. The recommended
        setting for the ESXi shell is to be stopped and only started manually when needed, such as when running diagnostics or
        troubleshooting.
    remediation: |
        To disable the ESXi shell, perform the following: From the vSphere Web Client, select the host.
        Select                  Configure
         then expand                  System
         and select                  Services
        .
        Click on                  ESXi Shell
         then click                  Edit Startup Policy
        .
        Set the Startup Policy is set to                  Start and Stop Manually
        .
        Click on                  OK
        .               Alternately, use the following PowerCLI command:
        # Set the ESXi shell to start manually rather than automatically for all hosts
        Get-VMHost | Get-VMHostService | Where { $_.key -eq "TSM" } | Set-VMHostService -Policy Off
                     Impact: No functional impact is recorded. However, if ESXi shell functionalities are needed, manual
        activation is required.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.2', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'

  "3.3":
    title: '3.3 | L1 Host must deactivate the ESXi Managed Object Browser MOB'
    section: 'Management'
    description: |
        The Managed Object Browser MOB is a webbased server application that lets you examine and change system objects and
        configurations. It is a prudent security measure to deactivate the MOB unless its essential for operations. The
        parameter governing this behavior is Config.HostAgent.plugins.solo.enableMob with a recommended setting of False.
    remediation: |
        To disabled MOB, perform the following from the vSphere Web Client: Select a host
        Click                  Configure
         then expand                  System
         then select                  Advanced System Settings
        .
        Click                  Edit
         then search for                  Config.HostAgent.plugins.solo.enableMob

        Set the value to                  false
        .
        Click                  OK
        .               Note:
         You cannot disable the MOB while a host is in lockdown mode.             Note 2:
         You must disable MOB from the vSphere interface not via the                vim-cmd
         command.             Impact: There is no specified functional impact; however, if MOB functionalities are needed later,
        manual reactivation is required.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.3', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq false'
            - name: Undefined
              rule: 'Undefined'

  "3.4":
    title: '3.4 | L1 Host must deactivate SLP - manual'
    section: 'Management'
    description: |
        The Service Location Protocol SLP is used for the discovery and selection of network services in local area networks,
        which simplifies configuration by allowing computers to find necessary services automatically. The practice of
        deactivating SLP when not in use aligns with the principle of minimizing the attack surface by shutting down
        nonessential services. The recommended setting is to have the SLP service stopped, with the ability to start and stop it
        manually as required.
    remediation: |
        Impact: There is no functional impact noted, however, manual intervention is required to start the SLP service when
        needed.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.4', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.5":
    title: '3.5 | L1 Host must deactivate CIM - manual'
    section: 'Management'
    description: |
        Deactivating the Common Information Model CIM service, when not in use, aligns with the principle of minimizing the
        attack surface by disabling nonessential services. This action helps in reducing the potential vectors of attack, thus
        bolstering the hosts security posture.
    remediation: |
        Impact: No functional impact has been specified. However, the deactivation of CIM might require administrators to
        manually start or stop the service when needed, potentially affecting operational workflows if CIM is required at a
        later stage.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.5', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.6":
    title: '3.6 | L1 Host should deactivate SNMP - manual'
    section: 'Management'
    description: |
        Simple Network Management Protocol SNMP facilitates the management of networked devices. Minimize attack surface by
        disabling nonessential services. The recommended setting is to have the SNMP service stopped unless required and
        configured securely.
    remediation: |
        Impact: While there isn't a direct functional impact, the absence of SNMP may require alternative methods for network
        management and monitoring.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.6', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.7":
    title: '3.7 | L1 Host must automatically terminate idle DCUI sessions'
    section: 'Management'
    description: |
        By configuring a session timeout, unattended console sessions are automatically terminated, thereby reducing the
        potential security risks associated with lingering active sessions. The parameter governing this behavior is
        UserVars.DcuiTimeOut, with a recommended setting of 600 10 minutes.
    remediation: |
        To correct the DCUI timeout setting, perform the following steps: From the vSphere Web Client, select the host.
        Click                  Configure
        , then under                  System
         select                  Advanced System Settings
        .
        Select                  Edit
         then enter                  UserVars.DcuiTimeOut
         in the filter.               Click in the box for the current value, then set the value to 600 seconds or less.
        Alternately, use the following PowerCLI command: Get-VMHost | Get-AdvancedSetting -Name UserVars.DcuiTimeOut | Set-
        AdvancedSetting -Value 600
         Impact: While there's no functional impact specified, setting a timeout value that's too short may inconvenience users
        by terminating sessions prematurely, possibly interrupting workflow. Conversely, a timeout value that's too long may not
        adequately mitigate the risks associated with idle sessions. Hence, a balanced approach in configuring the session
        timeout value, aligned with the organizational security policy and user workflow, is crucial.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.7', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should be <= 600'
            - name: Undefined
              rule: 'Undefined'

  "3.8":
    title: '3.8 | L1 Host must automatically terminate idle shells'
    section: 'Management'
    description: |
        The host should be configured to automatically terminate idle shell sessions to prevent potential unauthorized access
        due to forgotten logouts. Setting a timeout for idle SSH connections ensures that any unattended sessions are closed,
        thereby reducing the security risk. The parameter governing this behavior is UserVars.ESXiShellInteractiveTimeOut with a
        recommended setting of 900.
    remediation: |
        To set the timeout to the desired value, perform the following from the vSphere web client: From the vSphere Web Client,
        select the host.
        Click                  Configure
         then expand                  System
        .
        Select                  Advanced System Settings
         then click                  Edit
        .
        Enter                  ESXiShellInteractiveTimeOut
         in the filter.
        Set the value for this parameter is set to the appropriate value (                 300
         seconds or less).
        Click                  OK
        .               Note:
         A value of 0 disables the ESXi ShellInteractiveTimeOut.             Alternately, use the following PowerCLI command:
        # Set Remove UserVars.ESXiShellInteractiveTimeOut to 300 on all hosts
        Get-VMHost | Get-AdvancedSetting -Name 'UserVars.ESXiShellInteractiveTimeOut' | Set-AdvancedSetting -Value "300"
                     Impact: There is no identified negative impact associated with enforcing this control as it serves to
        bolster the host's security posture.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.8', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should be <= 300'
            - name: Undefined
              rule: 'Undefined'

  "3.9":
    title: '3.9 | L1 Host must automatically deactivate shell services'
    section: 'Management'
    description: |
        Enabling the automatic deactivation of shell services minimizes the attack surface on the host. The time window for the
        ESXi Shell and SSH services availability is defined by UserVars.ESXiShellTimeOut, after which these services are
        terminated. The recommended setting for this parameter is 600.
    remediation: |
        To set the timeout to the desired value, perform the following from the vSphere web client: From the vSphere Web Client,
        select the host.
        Click                  Configure
         then expand                  System
        .
        Select                  Advanced System Settings
         then click                  Edit
        .
        Enter                  ESXiShellTimeOut
         in the filter.
        Set the value for this parameter is set to                  3600
         (1 hour) or less
        Click                  OK
        .               Note:
         A value of 0 disables the ESXiShellTimeOut.             Alternately, run the following PowerCLI command:
        # Set UserVars.ESXiShellTimeOut to 3600 on all hosts
        Get-VMHost | Get-AdvancedSetting -Name 'UserVars.ESXiShellTimeOut' | Set-AdvancedSetting -Value "3600"
                     Impact: There's no negative functional impact identified with this control; it contributes towards
        enhancing the host's security posture by limiting the availability of shell services.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.9', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should be <= 3600'
            - name: Undefined
              rule: 'Undefined'

  "3.10":
    title: '3.10 | L1 Host must not suppress warnings that the shell is enabled - manual'
    section: 'Management'
    description: |
        Having warnings for enabled SSH or ESXi Shell provides insight into potential security risks. Disabling such warnings
        can mask ongoing attacks. The parameter governing this behavior is UserVars.SuppressShellWarning with a recommended
        value of 0.
    remediation: |
        Impact: No negative functional impact is associated with this control; it enhances monitoring and response to potential
        security threats by ensuring warnings are visible and not suppressed.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.10', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.11":
    title: '3.11 | L1 Host must enforce password complexity - manual'
    section: 'Management'
    description: |
        The enforcement of password complexity is managed through the Security.PasswordQualityControl parameter, allowing
        configuration of password length, character set requirements, and failed logon attempt restrictions. The recommended
        setting is retry3 mindisabled,15,15,15,15 max64 similardeny passphrase3.
    remediation: |
        To set the password complexity requirements, perform the following: Login to the ESXi shell as a user with administrator
        privileges.
        Open                  /etc./pam.d/passwd
        .               Locate the following line:   password requisite /lib/security/$ISA/pam_passwdqc.so retry=N
        min=N0,N1,N2,N3,N4

        Set N0 to                  disabled
        .
        Set N1 to                  disabled
        .
        Set N2 to                  disabled
        .
        Set N3 to                  disabled
        .
        Set N4 to                  14
         or greater.               The above requires all passwords to be 14 or more characters long and comprised of at least
        one character from four distinct character sets. Impact: Altering password complexity via
        Security.PasswordQualityControl may cause installation issues with other products and services within the VMware
        ecosystem not expecting such changes.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.11', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.12":
    title: '3.12 | L1 Host must lock an account after a specified number of failed login attempts'
    section: 'Management'
    description: |
        The security control involves restricting account access following a specified number of failed login attempts, acting
        as a deterrent against bruteforce attacks. This control is applicable for SSH and vSphere Web Services SDK access,
        though not for the Direct Console Interface DCUI and the ESXi Shell. A default setting allows five failed attempts
        before account lockout, with automatic unlock after 15 minutes. The parameter governing this behavior is
        Security.AccountLockFailures with a recommended setting of 5.
    remediation: |
        To set the maximum failed login attempts correctly, perform the following steps: From the vSphere Web Client, select the
        host.
        Click                  Configure
         then expand                  System
        .
        Select                  Advanced System Settings
         then click                  Edit
        .
        Enter                  Security.AccountLockFailures
         in the filter.
        Set the value for this parameter to                  5
        .               Alternately, use the following PowerCLI command: Get-VMHost | Get-AdvancedSetting -Name
        Security.AccountLockFailures | Set-AdvancedSetting -Value 5
         Impact: A potential downside is the inadvertent denial-of-service scenario, especially with a low threshold for login
        failures. This could be exploited maliciously or trigger accidental lockouts, impacting system accessibility and
        possibly demanding additional administrative effort for account resets.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.12', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq 5'
            - name: Undefined
              rule: 'Undefined'

  "3.13":
    title: '3.13 | L1 Host must unlock accounts after a specified timeout period'
    section: 'Management'
    description: |
        Ensuring that user accounts on the ESXi host are automatically unlocked after a specified period contributes to a
        balance between security and operational usability. This mechanism reactivates idle accounts promptly while mitigating
        potential unauthorized access risks. Its configured through a specific parameter which, when adjusted, defines the
        duration of the lockout period. The parameter governing this behavior is Security.AccountUnlockTime with a recommended
        setting of 900 seconds.
    remediation: |
        To set the account lockout to 15 minutes, perform the following: From the vSphere Web Client, select the host.
        Click                  Configure
         then expand                  System
        .
        Select                  Advanced System Settings
         then click                  Edit
        .
        Enter                  Security.AccountUnlockTime
         in the filter.
        Set the value for this parameter to                  900
        .               Alternately, use the following PowerCLI command: Get-VMHost | Get-AdvancedSetting -Name
        Security.AccountUnlockTime | Set-AdvancedSetting -Value 900
         Impact: No functional impact noted. The parameter’s configuration ensures a security-usability balance, although
        misconfiguration could either expose the system to unauthorized access or disrupt user operations.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.13', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq 900'
            - name: Undefined
              rule: 'Undefined'

  "3.14":
    title: '3.14 | L1 Host must configure the password history setting to restrict the reuse of passwords - manual'
    section: 'Management'
    description: |
        The goal is to inhibit the reuse of past passwords, acting as a deterrent against potential security breaches stemming
        from the exploitation of old, compromised credentials. This is achieved by configuring the Security.PasswordHistory
        parameter, which specifies the number of unique passwords a user must cycle through before a previous password can be
        reused. The recommended setting for this parameter is 5.
    remediation: |
        To set the password history 5, perform the following: From the vSphere Web Client, select the host.
        Click                  Configure
         then expand                  System
        .
        Select                  Advanced System Settings
         then click                  Edit
        .
        Enter                  Security.PasswordHistory
         in the filter.
        Set the value for this parameter is set to                  5
        .               Alternately, the following PowerCLI command may be used: Get-VMHost | Get-AdvancedSetting
        Security.PasswordHistory | Set-AdvancedSetting -Value 5
         Impact: The impact of altering the Security.PasswordHistory parameter is dependent on the chosen value. A lower value
        might diminish security by allowing password reuse sooner, while a higher value increases security but may also increase
        the likelihood of user frustration.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.14', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.15":
    title: '3.15 | L1 Host must be configured with an appropriate maximum password age - manual'
    section: 'Management'
    description: |
        Implementing a maximum password age, as determined by the Security.PasswordMaxDays parameter, is aligned with modern
        password policies outlined in NIST 80063B Section 5.1.1.2, which argue against forced periodic password changes provided
        that passwords have sufficient complexity. The parameter governing this behavior is Security.PasswordMaxDays with a
        recommended setting of 99999.
    remediation: |
        Impact: Adjusting the Security.PasswordMaxDays parameter may affect vSphere UIs, requiring an email address for alert
        configurations. This necessitates either the provision of an email address or the use of PowerCLI for configuration,
        with the latter also requiring the configuration of an SMTP server in vCenter Server for email alerts. Various
        regulatory compliance frameworks have differing opinions of this practice.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.15', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.16":
    title: '3.16 | L1 Host must configure a session timeout for the API - manual'
    section: 'Management'
    description: |
        A designated timeout ensures that sessions are not left open indefinitely, thereby reducing the exposure window for
        potential security threats. The parameter governing this behavior is Config.HostAgent.vmacore.soap.sessionTimeout with a
        recommended setting of 30 seconds.
    remediation: |
        Impact: There is no functional impact noted when configuring this security control, making it a low-risk enhancement
        towards securing the ESXi environment.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.16', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.17":
    title: '3.17 | L1 Host must automatically terminate idle host client sessions - manual'
    section: 'Management'
    description: |
        Configuring the host to automatically terminate idle host client sessions helps mitigate security risks associated with
        unattended sessions, which could potentially be exploited. The recommended setting for this control is a timeout value
        of 900. The parameter governing this behavior is UserVars.HostClientSessionTimeout.
    remediation: |
        Impact: There is no functional impact mentioned, but ensuring a balanced timeout value is essential to prevent
        inadvertent session terminations while maintaining security.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.17', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.18":
    title: '3.18 | L1 Host must have an accurate DCUI.Access list'
    section: 'Management'
    description: |
        The DCUI.Access parameter in VMware ESXi is used to specify a list of users who are permitted to access the Direct
        Console User Interface DCUI of the ESXi host, especially when Lockdown Mode is enabled. This parameter helps in
        controlling and securing access to the ESXi host by allowing only authorized users to override Lockdown Mode and access
        the DCUI, particularly in scenarios where the host becomes isolated from vCenter. The parameter governing this behavior
        is DCUI.Access.
    remediation: |
        To set a trusted users list for DCUI, perform the following from the vSphere web client: From the vSphere Web Client,
        select the host.
        Click                  Configure
         then expand                  System
        .
        Select                  Advanced System Settings
         then click                  Edit
        .
        Enter                  DCUI.Access
         in the filter.
        Set the                  DCUI.Access
         attribute is set to a comma-separated list of the users who are allowed to override lockdown mode.
        Impact: Misconfiguration could lead to unauthorized access or potential lockout scenarios, making it crucial to validate
        the list and ensure the host's attachment to vCenter alongside correctly configured access and exception lists prior to
        Lockdown Mode activation.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.18', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'

  "3.19":
    title: '3.19 | L1 Host must have an accurate Exception Users list - manual'
    section: 'Management'
    description: |
        Establishing an accurate Exception Users list is essential for managing user privileges during lockdown mode. Users on
        this list retain their privileges, making it imperative to include only those necessary for direct host access like
        service accounts for thirdparty solutions. Ensuring a wellmaintained list mitigates the risk associated with
        unauthorized actions, especially during host isolation scenarios in lockdown mode.
    remediation: |
        To correct the membership of the                Exception Users
         list, perform the following in the vSphere Web Client:             Select the host.
        Click on                  Configure
         then expand                  System
         and select                  Security Profile
        .
        Select                  Edit
         next to                  Lockdown Mode
        .
        Click on                  Exception Users
        .               Add or delete users as appropriate.
        Click                  OK
        .               Impact: An improperly managed Exception Users list could potentially undermine the security posture by
        allowing unauthorized access, increasing the risk of malicious actions. It's vital to review and update this list
        regularly to align with the current operational and security requirements.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.19', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.20":
    title: '3.20 | L1 Host must enable normal lockdown mode'
    section: 'Management'
    description: |
        Implementing normal lockdown mode restricts direct access to ESXi hosts, mandating management via vCenter Server to
        uphold defined roles and access controls, mitigating risks associated with unauthorized or insufficiently audited
        activities. Exception Users list serves as an override mechanism, permitting specified users direct access even in
        lockdown mode. This mode offers a balanced approach between security and operational flexibility compared to the
        stricter lockdown mode which, if connectivity to vCenter Server is lost, necessitates host rebuilding.
    remediation: |
        To enable lockdown mode, perform the following from the vSphere web client: From the vSphere Web Client, select the
        host.
        Select                  Configure
         then expand                  System
         and select                  Security Profile
        .
        Across from                  Lockdown Mode
         click on                  Edit
        .
        Click the radio button for                  Normal
        .
        Click                  OK
        .               Alternately, run the following PowerCLI command:
        # Enable lockdown mode for each host
        Get-VMHost | Foreach { $_.EnterLockdownMode() }
                     Impact: The activation of lockdown mode may impede direct host access for certain operations like backup
        and troubleshooting. Although temporary deactivation is an option, ensuring proper reactivation post-operation is
        crucial to maintain the intended security posture.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.20', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "3.21":
    title: '3.21 | L2 Host should enable strict lockdown mode'
    section: 'Management'
    description: |
        Enabling lockdown mode disables direct local access to an ESXi host, requiring the host be managed remotely from vCenter
        Server. There are some operations, such as backup and troubleshooting, that require direct access to the host. In these
        cases, lockdown mode can be disabled on a temporary basis for specific hosts as needed, and then reenabled when the task
        is completed. Note Lockdown mode does not apply to users who log in using authorized keys. Also, users in the
        DCUI.Access list for each host are allowed to override lockdown mode and log in to the DCUI. By default, the root user
        is the only user listed in the DCUI.Access list.
    remediation: |
        To enable lockdown mode, perform the following from the vSphere web client: From the vSphere Web Client, select the
        host.
        Select                  Configure
         then expand                  System
         and select                  Security Profile
        .
        Across from                  Lockdown Mode
         click on                  Edit
        .
        Click the radio button for                  Strict
        .
        Click                  OK
        .               Alternately, run the following PowerCLI command:
        # Enable lockdown mode for each host
        Get-VMHost | Foreach { $_.EnterLockdownMode() }
                     Impact: With lockdown mode enabled the host will only be accessible through vCenter preventing 'local'
        access.  Disabling the DCUI can create a potential "lockout" situation, should the host become isolated from vCenter
        Server. Recovering from a "lockout" scenario requires reinstalling ESXi. Consider leaving DCUI enabled, and instead
        enable lockdown mode and limit the users allowed to access the DCUI using the DCUI.Access list.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_3.21', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "3.22":
    title: '3.22 | L1 Host must deny shell access for the dcui account - manual'
    section: 'Management'
    description: |
        The dcui account, utilized for process isolation for the Direct Console User Interface DCUI, possesses shell access
        which, when deactivated, minimizes the attack surface. This action is a proactive measure to enhance system security.
    remediation: |
        Impact: There is no functional impact noted from denying shell access for the dcui account, making it a low-risk yet
        effective security control.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.22', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.23":
    title: '3.23 | L2 Host must deny shell access for the vpxuser account - manual'
    section: 'Management'
    description: |
        Deactivating shell access for the vpxuser account enhances security by enforcing an API only stance for predefined
        nonroot ESXi users such as vpxuser and dcui.
    remediation: |
        Impact: Deactivating shell access prevents users from granting shell access to others or changing passwords of users who
        have shell access, necessitating host-by-host reconfiguration through an authorized account if changes are required.
        This could potentially impact third-party workflows and necessitates the retention of at least one fully privileged user
        for necessary configurations.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_3.23', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.24":
    title: '3.24 | L1 Host must display a login banner for the DCUI and Host Client - manual'
    section: 'Management'
    description: |
        Enabling a login banner on the Direct Console User Interface DCUI and the Host Client interfaces provides a mechanism to
        display legal notices or organizational announcements at login. The parameter governing this behavior is
        Annotations.WelcomeMessage, with the recommended value being a text string aligned with organizational or legal
        advisories.
    remediation: |
        Impact: Implementation masks the "F2/F12" options and IP address information on the DCUI, potentially requiring
        additional documentation or training to ensure users are aware of these changes.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.24', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.25":
    title: '3.25 | L1 Host must display a login banner for SSH connections - manual'
    section: 'Management'
    description: |
        ESXi facilitates the display of a login message, primarily aimed to deter unauthorized access and inform legitimate
        users regarding system usage obligations, particularly during SSH connections. The text for this display is defined by a
        specific parameter, which is advisable to be configured, especially when SSH is active, albeit its recommended to keep
        SSH in a stopped state barring troubleshooting scenarios. The parameter governing this behavior is Config.Etc.Issue.
    remediation: |
        Impact: There is no functional impact associated with this security control; however, the absence of a login banner
        might pose a risk in terms of legal protection and compliance adherence, especially during SSH connections where
        potential misuse could occur. It's prudent to consult with legal advisors to craft a banner text that aligns with
        organizational and legal requisites.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.25', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.26":
    title: '3.26 | L1 Host must enable the highest version of TLS supported - manual'
    section: 'Management'
    description: |
        The host should be configured to operate using the highest version of TLS supported to ensure secure communications.
        ESXi 8, by default, comes with TLS 1.2 enabled, although reenabling other protocols is possible if required. Employing
        the highest version of TLS aids in protecting against known vulnerabilities present in older versions. The parameter
        governing this behavior is UserVars.ESXiVPsDisabledProtocols with the recommended setting of sslv3,tlsv1,tlsv1.1.
    remediation: |
        Impact: Failure to enable the highest version of TLS supported may expose the host to vulnerabilities present in older
        versions, potentially compromising the confidentiality and integrity of communications.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.26', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "4.1":
    title: '4.1 | L1 Host must configure a persistent log location for all locally stored system logs - manual'
    section: 'Logging'
    description: |
        Configure the Syslog.global.logDir parameter to specify a persistent directory for system logs, ensuring they are
        retained across reboots. This can be set to a directory on mounted NFS or VMFS volumes, other than the default which is
        an inmemory filesystem that retains only a single days worth of logs.
    remediation: |
        To configure persistent logging properly, perform the following from the vSphere web client: Select the host
        Click                  Configure
         then expand                  System
         then select                  Advanced System Settings
        .
        Select                  Edit
         then enter                  Syslog.global.LogDir
         in the filter.
        Set                  Syslog.global.logDir
         to a persistent location specified as [datastorename] path_to_file where the path is relative to the datastore. For
        example, [datastore1] /systemlogs.
        Click                  OK
        .               Alternatively, run the following PowerCLI command:
        # Set Syslog.global.logDir for each host
        Get-VMHost | Foreach { Set-AdvancedConfiguration -VMHost $_ -Name Syslog.global.logDir -Value "<NewLocation>" }
                     Impact: There is no specified functional impact, however, consideration should be given to storage capacity
        as increased log retention will require more storage space. If the only local, non-vSAN storage is unreliable SD or USB
        media, configuring a remote logging host is advised.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_4.1', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "4.2":
    title: '4.2 | L1 Host must transmit system logs to a remote log collector'
    section: 'Logging'
    description: |
        Transmitting system logs to a remote log collector ensures that ESXi logs are stored in a secure and centralized manner.
        This centralization not only allows for the streamlined monitoring of all hosts through a single tool but also
        facilitates aggregate analysis and searching capabilities.
    remediation: |
        To configure remote logging properly, perform the following from the vSphere web client: Select the host
        Click                  Configure
         then expand                  System
         then select                  Advanced System Settings
        .
        Select                  Edit
         then enter                  Syslog.global.logHost
         in the filter.
        Set the                  Syslog.global.logHost
         to the hostname or IP address of the central log server.
        Click                  OK
        .               Alternately, run the following PowerCLI command:
        # Set Syslog.global.logHost for each host
        Get-VMHost | Foreach { Set-AdvancedSetting -VMHost $_ -Name Syslog.global.logHost -Value "<NewLocation>" }
                     Note:
         When setting a remote log host, it is also recommended to set the "Syslog.global.logDirUnique" to true. You must
        configure the syslog settings for each host.             Impact: There is no immediate functional impact when
        transmitting logs to a remote log collector. However, it is essential to ensure that the remote log collector is
        adequately secured and has sufficient storage capacity.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_4.2', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'

  "4.3":
    title: '4.3 | L1 Host must log sufficient information for events - manual'
    section: 'Logging'
    description: |
        Set the Syslog.global.logLevel parameter to info to ensure that audit logs capture sufficient information for diagnosing
        issues and investigating security events. This setting strikes a balance between log verbosity and storage utilization.
        The parameter governing this behavior is Syslog.global.logLevel with a recommended setting of info.
    remediation: |
        Impact: More verbose logging levels will demand additional storage space while potentially burying critical entries
        under less significant data. Conversely, less verbose levels might miss capturing crucial information, hindering
        effective diagnostics and incident response.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_4.3', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "4.4":
    title: '4.4 | L1 Host must set the logging informational level to info - manual'
    section: 'Logging'
    description: |
        Set the logging informational level to info via the Config.HostAgent.log.level parameter to ensure audit logs contain
        adequate data for diagnostics and forensics. This level provides a balanced amount of detail, suitable for routine
        analysis and investigation. The parameter governing this behavior is Config.HostAgent.log.level with a recommended
        setting of info.
    remediation: |
        Impact: A more verbose log level increases data volume, demanding additional storage, while a less verbose level may
        lack crucial information for effective diagnostics and forensics.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_4.4', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "4.5":
    title: '4.5 | L1 Host must deactivate log filtering - manual'
    section: 'Logging'
    description: |
        Log filtering can be employed to diminish the frequency of repetitive log entries and to preclude specific log events
        entirely. By employing the Syslog.global.logFilters configuration parameter, one can stipulate filtering criteria, which
        when met, will cause the designated log events to be excluded from the system logs. The control aids in maintaining a
        clean, informative logging environment by filtering out unwanted or redundant log entries. The parameter governing this
        behavior is Syslog.global.logFiltersEnable with a recommended setting of FALSE.
    remediation: |
        Impact: There is no direct functional impact from deactivating log filtering. However, it may result in increased
        storage requirements for log files due to the additional log entries being stored. Organizations should ensure adequate
        storage space is available for logs and consider adjusting log retention policies if necessary.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_4.5', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "4.6":
    title: '4.6 | L1 Host must enable audit record logging - manual'
    section: 'Logging'
    description: |
        Enabling audit record logging on ESXi hosts ensures the local storage of audit records, providing a trail of activities
        performed on the host. This measure is pivotal for accountability, troubleshooting, and security investigations. The
        parameter governing this behavior is Syslog.global.auditRecord.storageEnable with a recommended setting of TRUE.
    remediation: |
        Impact: While beneficial for security and compliance, enabling audit record logging consumes additional storage space on
        the host, which may necessitate enhanced storage management practices to ensure optimal performance.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_4.6', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "4.7":
    title: '4.7 | L1 Host must configure a persistent log location for all locally stored audit records - manual'
    section: 'Logging'
    description: |
        Configuring a persistent log location for locally stored audit records on ESXi hosts is critical to ensure audit
        continuity. When the /scratch directory is linked to /tmp/scratch, only a days worth of records are retained, and they
        are reinitialized upon each reboot, creating a security risk. A persistent datastore, except a vSAN datastore, should be
        designated for audit record logging to preserve records across reboots. The parameter governing this behavior is
        Syslog.global.auditRecord.storageDirectory.
    remediation: |
        Impact: Implementing this control will consume additional storage space for logs, necessitating a balanced approach to
        storage management, especially when local non-vSAN storage options are limited.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_4.7', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "4.8":
    title: '4.8 | L1 Host must store one week of audit records - manual'
    section: 'Logging'
    description: |
        Ensuring a local storage capacity for a weeks worth of audit records is imperative, especially when a remote audit
        record storage facility is used. This provision is critical during anticipated interruptions in record delivery to the
        remote facility, preventing loss or overwriting of audit records. The parameter governing this behavior is
        Syslog.global.auditRecord.storageCapacity with a recommended setting of 100.
    remediation: |
        Impact: This security control entails additional storage space consumption for logs, requiring possible adjustments in
        storage management.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_4.8', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "4.9":
    title: '4.9 | L1 Host must transmit audit records to a remote log collector - manual'
    section: 'Logging'
    description: |
        This control enables the forwarding of audit records from the ESXi host to a designated log collector, aiding in
        realtime monitoring and analysis. The parameter governing this behavior is Syslog.global.auditRecord.remoteEnable with a
        recommended setting of TRUE.
    remediation: |
        Impact: There is no noted functional impact from enabling this control; however, proper configuration is crucial to
        ensure reliable log transmission and to maintain the integrity and availability of audit records.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_4.9', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "4.10":
    title: '4.10 | L1 Host must verify certificates for TLS remote logging endpoints - manual'
    section: 'Logging'
    description: |
        When engaging in remote logging activities, it is of utmost importance to ensure that the logging endpoint is genuine
        and secure. To achieve this, hosts should verify the TLS certificates of these endpoints. This verification provides
        assurance that the endpoint is both authentic and trustworthy, mitigating the risk of transmitting logs to potentially
        malicious or untrusted entities. The parameter governing this behavior is Syslog.global.certificate.checkSSLCerts with a
        recommended setting of TRUE.
    remediation: |
        Impact: There is no direct functional impact when verifying certificates for TLS remote logging endpoints. However, it
        is essential to ensure that the certificates used by the logging endpoints are valid and up-to-date. If not, there might
        be interruptions in log transmissions or potential trust issues, necessitating certificate management and regular
        updates.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_4.10', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "4.11":
    title: '4.11 | L1 Host must use strict x509 verification for TLS-enabled remote logging endpoints - manual'
    section: 'Logging'
    description: |
        When employing remote logging with TLSenabled endpoints, it is essential to ensure the utmost integrity and authenticity
        of the certificates in use. The x509strict option provides a higher level of security by performing additional validity
        checks on CA root certificates during the verification process. This increased scrutiny ensures that only genuinely
        authenticated and trusted certificates are accepted, minimizing potential vulnerabilities. The parameter governing this
        behavior is Syslog.global.certificate.strictX509Compliance with a recommended setting of TRUE.
    remediation: |
        Impact: There is no immediate functional impact from using strict x509 verification for TLS-enabled remote logging
        endpoints. However, organizations must ensure that their CA root certificates meet the strict criteria set by this
        option. If certificates do not meet these criteria, there may be disruptions in log transmissions, necessitating
        adjustments or updates to the certificates in use.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_4.11', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.1":
    title: '5.1 | L1 Host firewall must only allow traffic from authorized networks - manual'
    section: 'Network'
    description: |
        The hosts firewall is designed to block all incoming and outgoing network traffic by default, unless exceptions are
        explicitly made, thus minimizing the attack surface and barring unauthorized access. The firewall settings, while
        simplistic, are akin to router ACLs, and might require reflexive rules to be configured for certain network scenarios.
        Through the VMware Host Client, restrictions can be placed on a perIP basis to only allow traffic from authorized
        networks, aligning with the security controls recommended value of permitting connections solely from authorized
        infrastructure and administration workstations.
    remediation: |
        To properly restrict access to services running on an ESXi host, perform the following from the vSphere web client:
        Select a host
        Click                  Configure
         then expand                  System
         then select                  Firewall
        .
        Click                  Edit
         to view services which are enabled (indicated by a check).               For each enabled service, (e.g., ssh, vSphere
        Web Access, http client) provide a list of allowed IP addresses.
        Click                  OK
        .               Impact: While this security control is instrumental in preventing unauthorized access, its simplistic
        firewall may necessitate additional configuration like reflexive rules, depending on the network setup. This could
        potentially require more administrative effort for correct configuration and management, ensuring that necessary
        communications are not inadvertently blocked.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_5.1', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.2":
    title: '5.2 | L1 Host must block network traffic by default - manual'
    section: 'Network'
    description: |
        By default, the host is configured to block all incoming and outgoing network traffic, except for the traffic pertaining
        to services enabled in the host security profile. This configuration is pivotal in reducing the attack surface and
        averting unauthorized access to the host. Even though there isnt a specific configuration parameter provided, the
        firewall settings are manageable through the VMware Host Client, wherein rules can be specified to allow or deny traffic
        for each service on a perIP basis, ensuring only authorized networks have access.
    remediation: |
        Impact: There is no functional impact mentioned for this security control. However, overly restrictive configurations
        might impede necessary communications if not properly managed, potentially affecting service availability and
        operational efficiency. Therefore, careful consideration and testing are advised when adjusting firewall settings to
        ensure essential traffic is not inadvertently blocked.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_5.2', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.3":
    title: '5.3 | L1 Host must restrict use of the dvFilter network API - manual'
    section: 'Network'
    description: |
        The Net.DVFilterBindIpAddress parameter controls the use of the dvFilter network API, allowing network information to be
        sent to a specified IP address. If enabled with a compromised IP address, unauthorized network access to other virtual
        machines on the host could occur. Its essential to keep this parameter unconfigured, unless required by a product like
        VMware NSX. The parameter governing this behavior is Net.DVFilterBindIpAddress with a recommended setting of .
    remediation: |
        To remove the configuration for the dvfilter network API, perform the following from the vSphere web client:
        From the vSphere web client, select the host and click                  Configure
         then expand                  System

        Click on                  Advanced System Settings
         then                  Edit
        .
        Search for                  Net.DVFilterBindIpAddress
         in the filter.
        Set                  Net.DVFilterBindIpAddress
         has an empty value.               If an appliance is being used, make sure the value of this parameter is set to the
        proper IP address. Enter the proper IP address.
        Click                  OK
        .               To implement the recommended configuration state, run the following PowerCLI command:
        # Set Net.DVFilterBindIpAddress to null on all hosts
        Get-VMHost HOST1 | Foreach { Set-AdvancedSetting -VMHost $_ -Name Net.DVFilterBindIpAddress -IPValue "" }
                     Impact: No functional impact is identified when restricting the dvFilter network API. However, incorrect
        configuration can lead to insecure network communication, posing a risk to the network security of virtual machines on
        the host.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_5.3', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.4":
    title: '5.4 | L1 Host must filter Bridge Protocol Data Unit BPDU packets - manual'
    section: 'Network'
    description: |
        To prevent cascading lockout of uplink interfaces from the ESXi host, the Net.BlockGuestBPDU parameter can be set to 1,
        enabling BPDU Filter to drop BPDU packets sent from virtual machines to the physical switch. This is crucial as ESXis
        Standard and Distributed Virtual Switches do not support STP, making them prone to network loops if BPDUs are
        unfiltered. The parameter governing this behavior is Net.BlockGuestBPDU with a recommended setting of 1.
    remediation: |
        Impact: While beneficial for network stability, enabling BPDU filtering could block legitimate BPDU packets from
        network-oriented workloads. Ensure no legitimate BPDU packets are generated by virtual machines on the ESXi host before
        enabling this control.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_5.4', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.5":
    title: '5.5 | L2 Host should deactivate virtual hardware management network interfaces - manual'
    section: 'Network'
    description: |
        Hardware management controllers may present virtual or USB NICs to the host, potentially serving as backdoors if left
        active. Its recommended to deactivate these interfaces both in the hardware configuration and within ESXi to prevent
        unauthorized access. The parameter governing this behavior is Net.BMCNetworkEnable with a recommended value of 0.
    remediation: |
        Impact: While this control enhances security, it may impact third-party managed solutions that require these interfaces,
        necessitating alternative configurations or additional management considerations.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_5.5', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.6":
    title: '5.6 | L1 Host should reject forged transmits on standard virtual switches and port groups'
    section: 'Network'
    description: |
        Setting the Forged transmits option to Reject helps prevent MAC impersonation by comparing the source MAC address from
        the guest operating system with the effective MAC address of its virtual machine adapter. If theres a mismatch, the
        packet is dropped, preventing potential malicious activities through impersonated MAC addresses.
    remediation: |
        To set the policy to reject forged transmissions, perform the following: From the vSphere Web Client, select the host.
        Click                  Configure
         then expand                  Networking
        .
        Select                  Virtual switches
         then click                  Edit
        .
        Click on                  Security
        .
        Set                  Forged transmits
         to                  Reject
         in the dropdown.
        Click on                  OK
        .               Alternately, the following ESXi shell command may be used: # esxcli network vswitch standard policy
        security set -v vSwitch2 -f false
         Impact: This setting may affect workloads like clustered applications and network devices/functions that rely on MAC
        address modifications. Creating a separate port group for authorized virtual machines that require such behavior is
        recommended to balance operational needs with network security.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.6', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'

  "5.7":
    title: '5.7 | L1 Host should reject MAC address changes on standard virtual switches and port groups'
    section: 'Network'
    description: |
        Enforcing MAC address stability on standard virtual switches and port groups prevents MAC impersonation by disallowing
        changes to the MAC address by virtual machines. This mitigates the risk of malicious activities initiated by
        impersonating authorized network adapters.
    remediation: |
        To set the policy to reject, perform the following: From the vSphere Web Client, select the host.
        Click                  Configure
         then expand                  Networking
        .
        Select                  Virtual switches
         then click                  Edit
        .
        Click on                  Security
        .
        Set                  MAC address changes
         to                  Reject
         in the dropdown.
        Click on                  OK
        .               Alternately, perform the following using the ESXi shell: # esxcli network vswitch standard policy
        security set -v vSwitch2 -m false
         Impact: Certain workloads and operations reliant on MAC address modifications could be affected. Creating a separate
        port group for authorized virtual machines that require MAC address changes is recommended to balance operational and
        security needs.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.7', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'

  "5.8":
    title: '5.8 | L1 Host should reject promiscuous mode requests on standard virtual switches and port groups'
    section: 'Network'
    description: |
        Enabling promiscuous mode allows all virtual machines in a port group to read all packets transmitted across it,
        regardless of the intended recipient. Rejecting promiscuous mode requests on standard virtual switches and port groups
        prevents unauthorized packet inspection, enhancing network isolation and data privacy.
    remediation: |
        To set the policy to reject, perform the following: From the vSphere Web Client, select the host.
        Click                  Configure
         then expand                  Networking
        .
        Select                  Virtual switches
         then click                  Edit
        .
        Click on                  Security
        .
        Set                  Promiscuous mode
         to                  Reject
         in the dropdown.
        Click on                  OK
        .               Alternately, perform the following via the ESXi shell: # esxcli network vswitch standard policy security
        set -v vSwitch2 -p false
         Impact: Some workloads like DHCP servers or security monitoring may require promiscuous mode. In such cases, a separate
        port group allowing this behavior, with only authorized virtual machines connected, is advisable to balance operational
        needs with security controls.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.8', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'

  "5.9":
    title: '5.9 | L1 Host must restrict access to a default or native VLAN on standard virtual switches'
    section: 'Network'
    description: |
        ESXi does not use the concept of native VLAN, so do not configure port groups to use the native VLAN ID. If the default
        value of 1 for the native VLAN is being used, the ESXi Server virtual switch port groups should be configured with any
        value between 2 and 4094. Otherwise, ensure that the port group is not configured to use whatever value is set for the
        native VLAN.
    remediation: |
        To stop using the native VLAN ID for port groups, perform the following: From the vSphere Web Client, select the host.
        Click                  Configure
         then expand                  Networking
        .
        Select                  Virtual switches
        .               Expand the Standard vSwitch. View the topology diagram of the switch, which shows the various port
        groups associated with that switch. For each port group on the vSwitch, verify and record the VLAN IDs used. If a VLAN
        ID change is needed, click the name of the port group in the topology diagram of the virtual switch.
        Click the                  Edit settings
         option.
        In the Properties section, enter an appropriate name in the                  Network label
         field.
        In the                  VLAN ID
         dropdown select or type a new VLAN.
        Click                  OK
        .
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.9', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'

  "5.10":
    title: '5.10 | L1 Host must restrict the use of Virtual Guest Tagging VGT on standard virtual switches'
    section: 'Network'
    description: |
        When a port group is set to VLAN 4095 on standard virtual switches, it enables Virtual Guest Tagging VGT, letting all
        network frames pass to the attached virtual machines VMs without altering the VLAN tags. This requires VMs to process
        VLAN information themselves via an 802.1Q driver. Only authorized and capable VMs should be allowed to use VGT to
        prevent potential network issues like denial of service or unauthorized VLAN traffic interaction.
    remediation: |
        To set port groups to values other than 4095 and 0 unless VGT is required, perform the following: From the vSphere Web
        Client, select the host.
        Click                  Configure
         then expand                  Networking
        .
        Select                  Virtual switches
        .               Expand the Standard vSwitch. View the topology diagram of the switch, which shows the various port
        groups associated with that switch. For each port group on the vSwitch, verify and record the VLAN IDs used. If a VLAN
        ID change is needed, click the name of the port group in the topology diagram of the virtual switch.
        Click the                  Edit settings
         option.
        In the Properties section, enter an appropriate name in the                  Network label
         field.
        In the                  VLAN ID
         dropdown select or type a new VLAN.
        Click                  OK
        .               Impact: Incorrect VGT configuration can lead to denial of service or unauthorized VLAN traffic
        interaction. Restricting VGT may require alternative configurations for VMs needing independent VLAN tag management,
        potentially affecting network operation.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.10', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'

  "5.11":
    title: '5.11 | L1 Host must isolate management communications - manual'
    section: 'Network'
    description: |
        Ensure that only vmk interfaces designated for management purposes have management services enabled to uphold network
        isolation and security. Incorrect configuration may undermine security efforts by breaching network isolation
        principles.
    remediation: |
        Impact: This control may affect third-party managed solutions requiring specific configurations. Configurations may need
        to be tailored based on the particular environment and third-party solutions in use.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_5.11', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.1.1":
    title: '6.1.1 | L1 Host CIM services if enabled must limit access - manual'
    section: 'CIM'
    description: |
        The Common Information Model CIM system allows for hardwarelevel management from remote applications through standard
        APIs. Ensuring only minimal access necessary to these applications is imperative to prevent potential security
        compromises. A dedicated service account, specific to each CIM application, should be created to limit access and
        privileges.
    remediation: |
        To limit CIM access, perform the following: Create a limited-privileged service account for CIM and other third-party
        applications. This account should access the system via vCenter.
        Give the account the                    CIM Interaction
         privilege only. This will enable the account to obtain a CIM ticket, which can then be used to perform both read and
        write CIM operations on the target host. If an account must connect to the host directly, this account must be granted
        the full "Administrator" role on the host. This is not recommended unless required by the monitoring software being
        used.                 Alternately, run the following PowerCLI command:
        # Create a new host user account -Host Local connection required-
        New-VMHostAccount -ID ServiceUser -Password <password> -UserAccount
                       Impact: If improper access is granted to CIM-based hardware monitoring tools or other third-party
        applications, they may not function as expected or could be exploited to compromise the host's security.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_6.1.1', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.2.1":
    title: '6.2.1 | L1 Host must isolate storage communications - manual'
    section: 'Core Storage'
    description: |
        Isolating storage communications through zoning and Logical Unit Number LUN masking is instrumental in segregating
        Storage Area Network SAN activity. Zoning defines the connections between host bus adapters HBAs and targets, ensuring
        devices outside a zone remain invisible to the devices within, thus facilitating the independent management of zones
        such as testing and production. On the other hand, LUN masking controls the visibility and accessibility of LUNs to
        different hosts, further enhancing the granularity of access control within the storage network. By implementing these
        measures, the attack surface of the SAN is reduced, nonESXi systems are prevented from accessing the SAN, and separation
        of environments like test and production is achieved.
    remediation: |
        The remediation procedures to properly segregate SAN activity are SAN vendor or product-specific. In general, with ESXi
        hosts, use a single-initiator zoning or a single-initiator-single-target zoning. The latter is a preferred zoning
        practice. Using the more restrictive zoning prevents problems and misconfigurations that can occur on the SAN. Impact:
        Failing to isolate storage communications can lead to an increased risk of unauthorized access to storage resources,
        potential data leakage, or interference between different operational zones. The lack of segregation might also pose
        challenges in managing and troubleshooting storage network activities, leading to operational inefficiencies and
        potential security risks.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_6.2.1', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.2.2":
    title: '6.2.2 | L1 Host must ensure all datastores have unique names - manual'
    section: 'Core Storage'
    description: |
        Ensuring unique naming for datastores is crucial to avoid potential errors that could affect the integrity and
        availability of data. A descriptive and unique name for each datastore facilitates better identification and management.
        Although theres no specific parameter to enforce this, manual or automated naming conventions should be adhered to.
    remediation: |
        Impact: Not adhering to a unique naming convention can lead to confusion, misconfiguration, or incorrect data access.
        While renaming datastores could have downstream effects on systems like automation, monitoring, and backup, the benefits
        of unique naming conventions outweigh the potential negatives.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_6.2.2', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.3.1":
    title: '6.3.1 | L1 Host iSCSI client if enabled must employ bidirectionalmutual CHAP authentication'
    section: 'iSCSI'
    description: |
        Implementing bidirectional CHAP authentication for iSCSI connections elevates security by necessitating mutual
        verification between the initiator client and target server, ensuring data integrity during transmission. Configuration
        involves setting the iSCSI storage adapter authentication to Use bidirectional CHAP and providing the requisite
        credentials. This setup ensures that all communication between the client and server remains secure and unaltered,
        significantly reducing the risk of data interception by unauthorized entities. The parameter governing this behavior is
        set iSCSI storage adapter authentication to Use bidirectional CHAP with a recommended setting of Enabled.
    remediation: |
        To enable bidirectional CHAP authentication for iSCSI traffic, perform the following: From the vSphere Web Client,
        select the host.
        Click                    Configure
         then expand                    Storage
        .
        Select                    Storage Adapters
         then select the iSCSI Adapter.
        Under                    Properties
         click on                    Edit
         next to                    Authentication
        .
        Next to                    Authentication Method
         select                    Use bidirectional CHAP
         from the dropdown.                 Specify the outgoing CHAP name.
        Make sure that the name you specify matches the name configured on the storage side.
                           To set the CHAP name to the iSCSI adapter name, select "Use initiator name". To set the CHAP name to
        anything other than the iSCSI initiator name, deselect "Use initiator name" and type a name in the Name text box.
                                 Enter an outgoing CHAP secret to be used as part of authentication. Use the same secret as your
        storage side secret. Specify incoming CHAP credentials. Make sure your outgoing and incoming secrets do not match.
        Click                    OK
        .
        Click the second to last symbol labeled                    Rescan Adapter
        .                 Alternately, run the following PowerCLI command:
        # Set the Chap settings for the Iscsi Adapter
        Get-VMHost | Get-VMHostHba | Where {$_.Type -eq "Iscsi"} | Set-VMHostHba # Use desired parameters here
                       Impact: No functional impact is anticipated upon the implementation of this control. However, it's
        imperative to ensure correct configuration to avoid potential communication disruptions between the iSCSI client and
        server.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.3.1', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "6.3.2":
    title: '6.3.2 | L1 Host iSCSI client if enabled must employ unique CHAP authentication secrets - manual'
    section: 'iSCSI'
    description: |
        ChallengeHandshake Authentication Protocol CHAP requires both client and host to know a secret to establish a
        connection. It is essential to employ unique CHAP authentication secrets for each iSCSI session to ensure secure
        communications. The parameter governing this behavior is outlined in the iSCSI or iSER storage adapter configuration
        under CHAP settings.
    remediation: |
        To change the values of CHAP secrets so they are unique, perform the following: From the vSphere Web Client, select the
        host.
        Click                    Configure
         then expand                    Storage
        .
        Select                    Storage Adapters
         then select the iSCSI Adapter.
        Under                    Properties
         click on                    Edit
         next to                    Authentication
        .
        Next to                    Authentication Method
         specify the authentication method from the dropdown.
                           None Use unidirectional CHAP if required by target Use unidirectional CHAP unless prohibited by
        target Use unidirectional CHAP Use bidirectional CHAP
                                 Specify the outgoing CHAP name.
        Make sure that the name you specify matches the name configured on the storage side.
                           To set the CHAP name to the iSCSI adapter name, select "Use initiator name". To set the CHAP name to
        anything other than the iSCSI initiator name, deselect "Use initiator name" and type a name in the Name text box.
                                 Enter an outgoing CHAP secret to be used as part of authentication. Use the same secret as your
        storage side secret. If configuring with bidirectional CHAP, specify incoming CHAP credentials. Make sure your outgoing
        and incoming secrets do not match. If configuring with bidirectional CHAP, specify incoming CHAP credentials. Make sure
        your outgoing and incoming secrets do not match.
        Click                    OK
        .
        Click the second to last symbol labeled                    Rescan Adapter
                                 Impact: While enhancing security, misconfiguration or sharing of CHAP secrets across sessions
        could potentially lead to connectivity issues or unauthorized access.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_6.3.2', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.4.1":
    title: '6.4.1 | L1 Host SNMP services if enabled must limit access - manual'
    section: 'SNMP'
    description: |
        To manage hosts securely, if SNMP is enabled, access must be restricted. Preferably, SNMPv3 should be employed as it
        offers superior security through key authentication and encryption compared to SNMPv1 or SNMPv2. Configuring the
        destination for SNMP traps is essential for ensuring monitoring data is directed to a legitimate and secure host.
    remediation: |
        To correct the SNMP configuration, perform the following from the ESXi Shell or vCLI: If SNMP is not needed, disable it
        by running: esxcli system snmp set --enable false
         If SNMP is needed, refer to the vSphere Monitoring and Performance guide, chapter 8 for steps to configure it.
        Additionally, the following PowerCLI command may be used to implement the configuration:
        # Update the host SNMP Configuration (single host connection required)
        Get-VmHostSNMP | Set-VMHostSNMP -Enabled:$true -ReadOnlyCommunity '<secret>'
                       Notes: SNMP must be configured on each ESXi host SNMP settings can be configured using Host Profiles
        Impact: Improper SNMP configuration can redirect sensitive monitoring data to malicious hosts, risking exploitation and
        compromising host security.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_6.4.1', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.5.1":
    title: '6.5.1 | L1 Host SSH daemon if enabled must use FIPS 140-2140-3 validated ciphers - manual'
    section: 'SSH'
    description: |
        For enhanced security, if the SSH daemon is enabled on the host, it must utilize FIPS 1402/1403 validated ciphers. This
        requirement ensures the encryption standards are robust and compliant with regulatory mandates.
    remediation: |
        Impact: There is no functional impact noted for this control; however, it significantly improves the security posture by
        enforcing the use of strong, validated encryption ciphers for SSH communications.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_6.5.1', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.5.2":
    title: '6.5.2 | L1 Host SSH daemon if enabled must use FIPS 140-2140-3 validated cryptographic modules - manual'
    section: 'SSH'
    description: |
        When enabled, the SSH daemon on the host should employ FIPS 1402/1403 validated cryptographic modules provided by
        OpenSSH. Although these modules are enabled by default, they can be deactivated for backward compatibility, thus
        auditing and ensuring the correct setting is crucial for maintaining security standards.
    remediation: |
        Impact: There's no functional impact associated with this control. It significantly enhances the security posture by
        enforcing the use of validated cryptographic modules, minimizing the risks associated with SSH communications.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_6.5.2', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.5.3":
    title: '6.5.3 | L1 Host SSH daemon if enabled must not allow use of gateway ports - manual'
    section: 'SSH'
    description: |
        When enabled, the SSH daemon on the host should have the gateway ports feature disabled to prevent remote hosts from
        forwarding connections. This is a hardening measure to ensure that the SSH service is securely configured against
        potential forwarding misuses.
    remediation: |
        Impact: There are no noted functional impacts associated with this control. It is a proactive security measure designed
        to prevent potential misuse of SSH service forwarding capabilities, without affecting the normal operation of the host.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_6.5.3', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.5.4":
    title: '6.5.4 | L1 Host SSH daemon if enabled must not allow host-based authentication - manual'
    section: 'SSH'
    description: |
        Ensuring the SSH daemon on the host disallows hostbased authentication is a crucial step towards hardening system
        services. This prevents a host from authenticating on behalf of the users, thereby enforcing individual accountability
        and minimizing the risk of unauthorized access.
    remediation: |
        Impact: No functional impact is associated with this control. It solely acts to enhance security by enforcing stricter
        authentication practices, without hindering system operations.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_6.5.4', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.5.5":
    title: '6.5.5 | L1 Host SSH daemon if enabled must set a timeout count on idle sessions - manual'
    section: 'SSH'
    description: |
        Setting a timeout count on idle SSH sessions ensures that inactive sessions are automatically disconnected after a
        specified period. This period is calculated by multiplying the timeout count with the idle timeout interval. Automatic
        disconnection of idle sessions reduces the window of opportunity for unauthorized access.
    remediation: |
        Impact: There's no functional impact reported with this control. It's a preventive measure aimed at enhancing the
        security posture by mitigating the risks associated with lingering idle sessions.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_6.5.5', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.5.6":
    title: '6.5.6 | L1 Host SSH daemon if enabled must set a timeout interval on idle sessions - manual'
    section: 'SSH'
    description: |
        Implementing a timeout interval on idle SSH sessions ensures that any inactive session gets disconnected after a certain
        period, improving the security posture. The total timeout duration is calculated by multiplying the timeout count by the
        idle timeout interval.
    remediation: |
        Impact: No functional impact is reported with this control. The measure is preventive, aiming to mitigate risks
        associated with open, idle SSH sessions.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_6.5.6', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.5.7":
    title: '6.5.7 | L1 Host SSH daemon if enabled must display the system login banner before granting access - manual'
    section: 'SSH'
    description: |
        Implementing a system login banner before granting SSH access ensures that crucial information or notices are conveyed
        to users attempting to login. The banner text is set through the hosts Config.Etc.Issue advanced parameter.
    remediation: |
        Impact: There is no functional impact reported with the enforcement of this control. It primarily serves to inform users
        or provide legal disclaimers, aiding in legal and regulatory compliance.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_6.5.7', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.5.8":
    title: '6.5.8 | L1 Host SSH daemon if enabled must ignore .rhosts files - manual'
    section: 'SSH'
    description: |
        Ignoring .rhosts files is crucial in hardening the SSH daemon on the host, ensuring that trust relationships are
        explicitly defined and not implicitly accepted, thereby reducing the attack surface.
    remediation: |
        Impact: There are no reported functional impacts associated with ignoring .rhosts files; however, this practice enhances
        the security posture by mitigating risks associated with unauthorized access.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_6.5.8', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.5.9":
    title: '6.5.9 | L1 Host SSH daemon if enabled must disable stream local forwarding - manual'
    section: 'SSH'
    description: |
        Disabling stream local forwarding on the SSH daemon ensures that no Unix domain sockets are forwarded, thus enforcing a
        security boundary. This measure aids in maintaining the integrity and confidentiality of the system.
    remediation: |
        Impact: There is no functional impact reported, indicating that disabling stream local forwarding is a safe measure
        towards enhancing system security without affecting operations.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_6.5.9', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.5.10":
    title: '6.5.10 | L1 Host SSH daemon if enabled must disable TCP forwarding - manual'
    section: 'SSH'
    description: |
        Disabling TCP forwarding in the SSH daemon is a measure to prevent potential unauthorized tunneling and forwarding
        activities that could lead to data leaks or unauthorized data access. This measure adds a layer of security to the SSH
        service when enabled, making the system more resilient against certain types of network attacks.
    remediation: |
        Impact: No functional impact has been reported. This indicates that disabling TCP forwarding is a precautionary measure
        that does not interfere with the normal operation of the host.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_6.5.10', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.5.11":
    title: '6.5.11 | L1 Host SSH daemon if enabled must not permit tunnels - manual'
    section: 'SSH'
    description: |
        Preventing tunnel creation in the SSH daemon is a security measure aimed at thwarting unauthorized network tunneling
        through the host. This control, when enforced, helps mitigate the risks associated with potential data exfiltration or
        unauthorized network access that could occur via SSH tunnels.
    remediation: |
        Impact: There is no reported functional impact associated with this security control, indicating that the prevention of
        SSH tunneling does not adversely affect the host's normal operational behavior.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_6.5.11', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.5.12":
    title: '6.5.12 | L1 Host SSH daemon if enabled must not permit user environment settings - manual'
    section: 'SSH'
    description: |
        Preventing user environment settings in the SSH daemon ensures a consistent and controlled environment, reducing the
        attack surface by limiting the customization of the SSH environment by users.
    remediation: |
        Impact: There is no functional impact noted, indicating that restricting user environment settings does not adversely
        affect the operational aspects of the host.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_6.5.12', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.1":
    title: '7.1 | L1 Virtual machines must enable Secure Boot - manual'
    section: 'Virtual Machine'
    description: |
        Enable Secure Boot on virtual machines to ensure that only authenticated code runs from the firmware up through the
        operating system, thus providing a fundamental security measure against boottime malware and unauthorized code
        execution. Supported by all modern guest operating systems, Secure Boot employs public key cryptography to validate the
        firmware, boot loader, drivers, and OS kernel at boot time.
    remediation: |
        The following PowerCLI command may be used:
        $VMobj = (Get-VM -Name $VM)
        $ConfigSpec = New-Object VMware.Vim.VirtualMachineConfigSpec
        $bootOptions = New-Object VMware.Vim.VirtualMachineBootOptions
        $bootOptions.EfiSecureBootEnabled = $true
        $ConfigSpec.BootOptions = $bootOptions
        $task = $VMobj.ExtensionData.ReconfigVM_Task($ConfigSpec)
                     Impact: Activation of Secure Boot post guest OS installation may entail more than merely enabling a
        setting; consult the respective guest OS documentation for detailed instructions. This may introduce additional steps in
        the setup process, potentially extending the deployment time.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_7.1', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.2":
    title: '7.2 | L1 Virtual machines must require encryption for vMotion - manual'
    section: 'Virtual Machine'
    description: |
        Requiring encryption for vMotion ensures the secure transfer of data among virtual machines. While the default
        opportunistic encryption setting generally provides encryption due to prevalent AESNI support, enforcing required
        encryption eradicates the possibility of unencrypted transfers. The parameter governing this behavior is VM
        Configuration with the recommended setting being required.
    remediation: |
        The following PowerCLI command may be used:
        $VMview = Get-VM -Name $VM | Get-View
        $ConfigSpec = New-Object VMware.Vim.VirtualMachineConfigSpec
        $ConfigSpec.MigrateEncryption = New-Object VMware.Vim.VirtualMachineConfigSpecEncryptedVMotionModes
        $ConfigSpec.MigrateEncryption = "required"
        $VMview.ReconfigVM_Task($ConfigSpec)
                     Impact: There is no functional impact noted.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_7.2', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.3":
    title: '7.3 | L1 Virtual machines must require encryption for Fault Tolerance - manual'
    section: 'Virtual Machine'
    description: |
        Requiring encryption for Fault Tolerance in virtual machines is critical for ensuring secure data transmission between
        primary and secondary VMs, especially in environments where sensitive data is processed. While the default setting
        opportunistic may result in encryption due to widespread AESNI support in vSpherecompatible hardware, enforcing the
        required setting for encryption guarantees that no unencrypted operations occur. The parameter governing this behavior
        is VM Configuration with a recommended setting of ftEncryptionRequired.
    remediation: |
        The following PowerCLI command may be used:
        $VMview = Get-VM -Name $VM | Get-View
        $ConfigSpec = New-Object VMware.Vim.VirtualMachineConfigSpec
        $ConfigSpec.FtEncryptionMode = New-object VMware.Vim.VirtualMachineConfigSpecEncryptedFtModes
        $ConfigSpec.FtEncryptionMode = "ftEncryptionRequired"
        $VMview.ReconfigVM_Task($ConfigSpec)
                     Impact: There are no identified negative impacts associated with enforcing encryption for Fault Tolerance,
        and it's instrumental in enhancing the security of data transmission within virtual environments.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_7.3', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.4":
    title: '7.4 | L1 Virtual machines should deactivate 3D graphics features when not required'
    section: 'Virtual Machine'
    description: |
        Due to performance reasons, modern graphic rendering is done within a dedicated graphic processing unit GPU. Virtual
        machines can use the hostbased GPU for such operations as well. Such dedicated hardware is typically accessed by using
        complex APIs like OpenGL and DirectX. This hardwarebased 3D acceleration should be disabled if it is not needed.
    remediation: |
        The following PowerCLI command may be used: Get-VM -Name $VM | Get-AdvancedSetting mks.enable3d | Set-AdvancedSetting
        -Value FALSE
         Impact: GPU and Virtual Desktops may require this functionality.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_7.4', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq false'
            - name: Undefined
              rule: 'Undefined'

  "7.5":
    title: '7.5 | L1 Virtual machines must be configured to lock when the last console connection is closed - manual'
    section: 'Virtual Machine'
    description: |
        Configuring virtual machines to lock upon closing the last console connection enhances security by mitigating the risk
        of unauthorized access via open console sessions. This configuration is particularly useful in environments where
        multiple users have access to the console. The parameter governing this behavior is tools.guest.desktop.autolock with
        the recommended setting being TRUE.
    remediation: |
        The following PowerCLI command may be used: Get-VM -Name $VM | Remove-AdvancedSetting -Name tools.guest.desktop.autolock
         Impact: No functional impact is associated with this control; it serves as a proactive measure to prevent unauthorized
        access through open console sessions.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_7.5', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.6":
    title: '7.6 | L1 Virtual machines must limit console sharing.'
    section: 'Virtual Machine'
    description: |
        By default, remote console sessions can be connected to by more than one user at a time. Permit only one remote console
        connection to a VM at a time. Other attempts will be rejected until the first connection disconnects.
    remediation: |
        To set this configuration utilize the vSphere interface as follows:
        Select the VM then select                  Actions
         followed by                  Edit Settings
        .
        Click on the                  VM Options
         tab then expand                  Advanced
        .
        Click on                  EDIT CONFIGURATION
        .
        Click on                  ADD CONFIGURATION PARAMS
         then input                  RemoteDisplay.maxConnections
         with a value of                  1
        .
        Click                  OK
        , then                  OK
         again.               Alternatively, run the following PowerCLI command for VMs that do not specify the setting:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "RemoteDisplay.maxConnections" -value 1
                     Run the following PowerCLI command for VMs that specify the setting but have the wrong value for it:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "RemoteDisplay.maxConnections" -value 1 -Force
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.6', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq 1'
            - name: Undefined
              rule: 'Undefined'

  "7.7":
    title: '7.7 | L1 Virtual machines must limit PCIPCIe device passthrough functionality'
    section: 'Virtual Machine'
    description: |
        DirectPath I/O features provide virtual machines the ability to directly access system hardware, which while
        advantageous for performance, can impact risk mitigation tools like vMotion, DRS, and High Availability. It also opens
        up a potential attack vector for privileged hardware access. It is crucial to ensure that only necessary VMs have this
        privilege and that compensatory measures are taken within the guest OS to enhance security.
    remediation: |
        The following PowerCLI command can be used:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "pciPassthru*.present" -value ""
                     Impact: Passthrough devices, like GPUs, may be adversely affected if disconnected. It's imperative to audit
        and document the business rationale for VMs requiring this functionality to understand the associated risks and ensure
        adequate compensatory controls are in place.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.7', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq false'
            - name: Undefined
              rule: 'Undefined'

  "7.8":
    title: '7.8 | L1 Virtual machines must prevent unauthorized modification of devices'
    section: 'Virtual Machine'
    description: |
        In a virtual machine, users and processes without root or administrator privileges can connect devices, such as network
        adapters and CDROM drives. This should be prevented.
    remediation: |
        To prevent unauthorized device connections, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.device.connectable.disable" -value $true
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.8', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "7.9":
    title: '7.9 | L1 Virtual machines must remove unnecessary audio devices - manual'
    section: 'Virtual Machine'
    description: |
        Removing unnecessary devices from virtual machines minimizes the attack surface and reduces potential pathways for data
        exfiltration or unauthorized data capture. This practice aligns with the principle of least functionality, ensuring that
        VMs have only the essential components required to perform their designated functions.
    remediation: |
        Impact: Careful analysis and understanding of the virtual machine's requirements and dependencies are crucial before
        implementing this security control to avoid unintended disruptions or degradation of service.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_7.9', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.10":
    title: '7.10 | L1 Virtual machines must remove unnecessary AHCI devices - manual'
    section: 'Virtual Machine'
    description: |
        Removing unnecessary devices from virtual machines minimizes the attack surface and reduces potential pathways for data
        exfiltration or unauthorized data capture. This practice aligns with the principle of least functionality, ensuring that
        VMs have only the essential components required to perform their designated functions.
    remediation: |
        Impact: Careful analysis and understanding of the virtual machine's requirements and dependencies are crucial before
        implementing this security control to avoid unintended disruptions or degradation of service.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_7.10', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.11":
    title: '7.11 | L1 Virtual machines must remove unnecessary USBXHCI devices'
    section: 'Virtual Machine'
    description: |
        Removing unnecessary devices from virtual machines minimizes the attack surface and reduces potential pathways for data
        exfiltration or unauthorized data capture. This practice aligns with the principle of least functionality, ensuring that
        VMs have only the essential components required to perform their designated functions.
    remediation: |
        To disconnect all USB devices from VMs, run the following PowerCLI command:
        # Remove all USB Devices attached to VMs
        Get-VM | Get-USBDevice | Remove-USBDevice
                     The VM will need to be powered off for this change to take effect. Impact: Careful analysis and
        understanding of the virtual machine's requirements and dependencies are crucial before implementing this security
        control to avoid unintended disruptions or degradation of service.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.11', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq false'
            - name: Undefined
              rule: 'Undefined'

  "7.12":
    title: '7.12 | L1 Virtual machines must remove unnecessary serial port devices'
    section: 'Virtual Machine'
    description: |
        Removing unnecessary devices from virtual machines minimizes the attack surface and reduces potential pathways for data
        exfiltration or unauthorized data capture. This practice aligns with the principle of least functionality, ensuring that
        VMs have only the essential components required to perform their designated functions.
    remediation: |
        To disconnect all serial ports from VMs, run the following PowerCLI command:
        # In this Example you will need to add the functions from this post:
        http://blogs.vmware.com/vipowershell/2012/05/working-with-vm-devices-in-powercli.html
        # Remove all Serial Ports attached to VMs
        Get-VM | Get-SerialPort | Remove-SerialPort
                     The VM will need to be powered off for this change to take effect. Impact: Careful analysis and
        understanding of the virtual machine's requirements and dependencies are crucial before implementing this security
        control to avoid unintended disruptions or degradation of service.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.12', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq false'
            - name: Undefined
              rule: 'Undefined'

  "7.13":
    title: '7.13 | L1 Virtual machines must remove unnecessary parallel port devices'
    section: 'Virtual Machine'
    description: |
        Removing unnecessary devices from virtual machines minimizes the attack surface and reduces potential pathways for data
        exfiltration or unauthorized data capture. This practice aligns with the principle of least functionality, ensuring that
        VMs have only the essential components required to perform their designated functions.
    remediation: |
        To disconnect all parallel ports from VMs, run the following PowerCLI command:
        # In this Example you will need to add the functions from this post:
        http://blogs.vmware.com/vipowershell/2012/05/working-with-vm-devices-in-powercli.html
        # Remove all Parallel Ports attached to VMs
        Get-VM | Get-ParallelPort | Remove-ParallelPort
                     The VM will need to be powered off for this change to take effect. Impact: Careful analysis and
        understanding of the virtual machine's requirements and dependencies are crucial before implementing this security
        control to avoid unintended disruptions or degradation of service.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.13', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq false'
            - name: Undefined
              rule: 'Undefined'

  "7.14":
    title: '7.14 | L2 Virtual machines must remove unnecessary CDDVD devices'
    section: 'Virtual Machine'
    description: |
        Removing unnecessary devices from virtual machines minimizes the attack surface and reduces potential pathways for data
        exfiltration or unauthorized data capture. This practice aligns with the principle of least functionality, ensuring that
        VMs have only the essential components required to perform their designated functions.
    remediation: |
        To disconnect all CD/DVD drives from VMs, run the following PowerCLI command:
        # Remove all CD/DVD Drives attached to VMs
        Get-VM | Get-CDDrive | Remove-CDDrive
                     The VM will need to be powered off for this change to take effect. Impact: Careful analysis and
        understanding of the virtual machine's requirements and dependencies are crucial before implementing this security
        control to avoid unintended disruptions or degradation of service.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_7.14', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq false'
            - name: Undefined
              rule: 'Undefined'

  "7.15":
    title: '7.15 | L1 Virtual machines must remove unnecessary floppy devices'
    section: 'Virtual Machine'
    description: |
        Removing unnecessary devices from virtual machines minimizes the attack surface and reduces potential pathways for data
        exfiltration or unauthorized data capture. This practice aligns with the principle of least functionality, ensuring that
        VMs have only the essential components required to perform their designated functions.
    remediation: |
        To disconnect all floppy drives from VMs, run the following PowerCLI command:
        # Remove all Floppy drives attached to VMs
        Get-VM | Get-FloppyDrive | Remove-FloppyDrive
                     The VM will need to be powered off for this change to take effect. Impact: Careful analysis and
        understanding of the virtual machine's requirements and dependencies are crucial before implementing this security
        control to avoid unintended disruptions or degradation of service.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.15', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq false'
            - name: Undefined
              rule: 'Undefined'

  "7.16":
    title: '7.16 | L1 Virtual machines must deactivate console drag and drop operations'
    section: 'Virtual Machine'
    description: |
        VM console drag and drop operations should be disabled.
    remediation: |
        To set this configuration utilize the vSphere interface as follows:
        Select the VM then select                  Actions
         followed by                  Edit Settings
        .
        Click on the                  VM Options
         tab then expand                  Advanced
        .
        Click on                  EDIT CONFIGURATION
        .
        Click on                  ADD CONFIGURATION PARAMS
         then input                  isolation.tools.dnd.disable
         with a value of                  TRUE
        .
        Click                  OK
        , then                  OK
         again.               To explicitly disable VM console drag and drop operations, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM -Name $VM | Remove-AdvancedSetting -Name isolation.tools.dnd.disable
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.16', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "7.17":
    title: '7.17 | L1 Virtual machines must deactivate console copy operations'
    section: 'Virtual Machine'
    description: |
        Deactivating console copy operations is critical for preventing data transfer between the virtual machine and the local
        client, irrespective of the access method, whether via Web Console, VMRC, or others. The parameter governing this
        behavior is isolation.tools.copy.disable with a recommended setting of TRUE or Undefined.
    remediation: |
        To set this configuration utilize the vSphere interface as follows:
        Select the VM then select                  Actions
         followed by                  Edit Settings
        .
        Click on the                  VM Options
         tab then expand                  Advanced
        .
        Click on                  EDIT CONFIGURATION
        .
        Click on                  ADD CONFIGURATION PARAMS
         then input                  isolation.tools.copy.disable
         with a value of                  TRUE
        .
        Click                  OK
        , then                  OK
         again.               To explicitly disable VM console copy operations, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.copy.disable" -value $true
                     Impact: There is no identified functional impact; however, this restriction enhances data security by
        minimizing unauthorized data transfer channels.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.17', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "7.18":
    title: '7.18 | L1 Virtual machines must deactivate console paste operations'
    section: 'Virtual Machine'
    description: |
        Disabling console paste operations on virtual machines obstructs data transfer from the local client to the VM,
        irrespective of the access method  be it Web Console, VMRC, or another console. This security measure aims to curtail
        potential avenues for unauthorized data transfer into the virtual environment. The parameter governing this behavior is
        isolation.tools.paste.disable with a recommended setting of TRUE or Undefined.
    remediation: |
        To set this configuration utilize the vSphere interface as follows:
        Select the VM then select                  Actions
         followed by                  Edit Settings
        .
        Click on the                  VM Options
         tab then expand                  Advanced
        .
        Click on                  EDIT CONFIGURATION
        .
        Click on                  ADD CONFIGURATION PARAMS
         then input                  isolation.tools.paste.disable
         with a value of                  TRUE
        .
        Click                  OK
        , then                  OK
         again.               To explicitly disable VM console paste operations, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.paste.disable" -value $true
                     Impact: There is no functional impact identified. The control simply enhances the security posture by
        reducing possible data transfer channels into the VM.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.18', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "7.19":
    title: '7.19 | L1 Virtual machines must limit access through the dvfilter network API - manual'
    section: 'Virtual Machine'
    description: |
        The dvFilter interface facilitates network traffic filtering and inspection, predominantly via tools like NSX. Its vital
        to allow only authorized tools to access this interface to uphold network security. Unauthorized access could lead to
        illicit network traffic inspection or misuse. The parameter governing this behavior is ethernet.filter.name with a
        recommended setting of Not Present.
    remediation: |
        To set this configuration utilize the vSphere interface as follows:
        Select the VM then select                  Actions
         followed by                  Edit Settings
        .
        Click on the                  VM Options
         tab then expand                  Advanced
        .
        Click on                  EDIT CONFIGURATION
        .
        Remove the value from                  ethernet0.filter1.name = dv-filter
        .               Parameters are removed when no value is present
        Click                  OK
        .               You may also configure a VM to allow dvfilter access via the following method in the VMX file:
        Configure the following in the VMX file:                  ethernet0.filter1.name = dv-filter1
         where                  ethernet0
         is the network adapter interface of the virtual machine that is to be protected, filter1 is the number of the filter
        that is being used, and                  dv-filter1
         is the name of the particular data path kernel module that is protecting the VM.
        If                  dvfilter
         access should not be permitted:  Remove the following from its VMX file:                  ethernet0.filter1.name = dv-
        filter1
        .               Set the name of the data path kernel correctly. Impact: While enhancing security by restricting access
        to the dvFilter interface, this control may hinder the functionality of legitimate network tools like NSX, which
        necessitate access to the "dvfilter" network API for proper operation.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_7.19', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.20":
    title: '7.20 | L1 Virtual machines must deactivate virtual disk shrinking operations'
    section: 'Virtual Machine'
    description: |
        Disabling virtual disk shrinking on virtual machines prevents potential disk unavailability issues. This operation is
        usually restricted for nonadministrative users within the guest environment. The parameter governing this behavior is
        isolation.tools.diskShrink.disable with a recommended setting of TRUE or Undefined.
    remediation: |
        To set this configuration utilize the vSphere interface as follows:
        Select the VM then select                  Actions
         followed by                  Edit Settings
        .
        Click on the                  VM Options
         tab then expand                  Advanced
        .
        Click on                  EDIT CONFIGURATION
        .
        Click on                  ADD CONFIGURATION PARAMS
         then input                  isolation.tools.diskShrink.disable
         with a value of                  TRUE
        .
        Click                  OK
        , then                  OK
         again.               To implement the recommended configuration state, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.diskShrink.disable" -value $true
                     Impact: There is no functional impact noted.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.20', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "7.21":
    title: '7.21 | L1 Virtual machines must deactivate virtual disk wiping operations'
    section: 'Virtual Machine'
    description: |
        Wiping a virtual disk reclaims all unused space in it. If there is empty space in the disk, this process reduces the
        amount of space the virtual disk occupies on the host drive. If virtual disk wiping is done repeatedly, it can cause the
        virtual disk to become unavailable while wiping occurs. In most datacenter environments, disk wiping is not needed, but
        normal users and processeswithout administrative privilegescan issue disk wipes unless the feature is disabled.
    remediation: |
        To set this configuration utilize the vSphere interface as follows:
        Select the VM then select                  Actions
         followed by                  Edit Settings
        .
        Click on the                  VM Options
         tab then expand                  Advanced
        .
        Click on                  EDIT CONFIGURATION
        .
        Click on                  ADD CONFIGURATION PARAMS
         then input                  isolation.tools.diskWiper.disable
         with a value of                  TRUE
        .
        Click                  OK
        , then                  OK
         again.               To disable virtual disk wiping, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.diskWiper.disable" -value $true
                     Impact: There isn't a functional impact noted
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.21', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "7.22":
    title: '7.22 | L1 Virtual machines must restrict sharing of memory pages with other VMs - manual'
    section: 'Virtual Machine'
    description: |
        Configuring virtual machines with the sched.mem.pshare.salt option restricts Transparent Page Sharing TPS among
        different VMs, mitigating the risk of unauthorized data access under certain conditions. By doing so, each VM operates
        with a distinct memory sharing pool, thereby enhancing isolation and security. The parameter governing this behavior is
        sched.mem.pshare.salt.
    remediation: |
        Impact: There is no functional impact associated with this security control as it serves to bolster the security posture
        of the VMs without affecting their operational performance or functionality.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_7.22', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.23":
    title: '7.23 | L1 Virtual machines must not be able to obtain host information from the hypervisor'
    section: 'Virtual Machine'
    description: |
        Configure VMware Tools to disable host information from being sent to guests unless a particular VM requires this
        information for performance monitoring purposes.
    remediation: |
        To set this configuration utilize the vSphere interface as follows:
        Select the VM then select                  Actions
         followed by                  Edit Settings
        .
        Click on the                  VM Options
         tab then expand                  Advanced
        .
        Click on                  EDIT CONFIGURATION
        .
        Click on                  ADD CONFIGURATION PARAMS
         then input                  tools.guestlib.enableHostInfo
         with a value of                  FALSE
        .
        Click                  OK
        , then                  OK
         again.               To prevent host information from being sent to guests, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "tools.guestlib.enableHostInfo" -value $false
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.23', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq false'
            - name: Undefined
              rule: 'Undefined'

  "7.24":
    title: '7.24 | L1 Virtual machines must enable diagnostic logging - manual'
    section: 'Virtual Machine'
    description: |
        Enabling diagnostic logging on virtual machines facilitates forensic analysis and troubleshooting by collecting
        necessary operational data. The parameter governing this behavior is Enable Logging with a recommended setting of TRUE.
    remediation: |
        Impact: There is no negative functional impact identified for enabling diagnostic logging. This control significantly
        aids in issue resolution, enhancing overall system reliability and performance.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_7.24', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.25":
    title: '7.25 | L1 Virtual machines must limit the number of retained diagnostic logs'
    section: 'Virtual Machine'
    description: |
        Limiting the number of retained diagnostic logs in virtual machines helps in managing datastore space effectively
        without hampering diagnostic capabilities. The parameter governing this behavior is log.keepOld with a recommended
        setting of 10 or Undefined.
    remediation: |
        To set this configuration utilize the vSphere interface as follows:
        Select the VM then select                  Actions
         followed by                  Edit Settings
        .
        Click on the                  VM Options
         tab then expand                  Advanced
        .
        Click on                  EDIT CONFIGURATION
        .
        Click on                  ADD CONFIGURATION PARAMS
         then input                  log.keepOld
         with a value of                  10
        .
        Click                  OK
        , then                  OK
         again.
        To set the number of log files to be used to                10
        , run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "log.keepOld" -value "10"
                     Impact: There is no negative functional impact.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.25', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should be <= 10'
            - name: Undefined
              rule: 'Undefined'

  "7.26":
    title: '7.26 | L1 Virtual machines must limit the size of diagnostic logs'
    section: 'Virtual Machine'
    description: |
        Limiting the size of diagnostic logs on virtual machines ensures efficient utilization of datastore space, particularly
        beneficial for longrunning VMs. This control assists in maintaining an optimal balance between diagnostic capabilities
        and storage resources. The parameter governing this behavior is log.rotateSize.
    remediation: |
        To set this configuration utilize the vSphere interface as follows:
        Select the VM then select                  Actions
         followed by                  Edit Settings
        .
        Click on the                  VM Options
         tab then expand                  Advanced
        .
        Click on                  EDIT CONFIGURATION
        .
        Click on                  ADD CONFIGURATION PARAMS
         then input                  log.rotateSize
         with a value of                  1024000
        .
        Click                  OK
        , then                  OK
         again.               To properly limit the maximum log file size, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "log.rotateSize" -value "1024000"
                     Impact: There is no negative functional impact identified by limiting the size of diagnostic logs. This
        control facilitates proficient management of storage resources, ensuring other vital functions are not compromised due
        to space exhaustion.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.26', 'cis_vmware_esxi_8.0_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should be <= 1024000'
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'should_not eq 0'
            - name: Undefined
              rule: 'Undefined'

  "7.27":
    title: '7.27 | L1 Virtual machines must limit informational messages from the virtual machine to the VMX file - manual'
    section: 'Virtual Machine'
    description: |
        Limit the number of informational messages from the virtual machine to the VMX file to prevent the file from exceeding
        its default size of 1MB, thereby avoiding potential denial of service situations due to a full datastore. The parameter
        governing this behavior is tools.setInfo.sizeLimit with a recommended setting of 1048576 or Undefined.
    remediation: |
        Impact: No negative functional impact identified.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_7.27', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.28":
    title: '7.28 | L2 Virtual machines should have virtual machine hardware version 19 or newer - manual'
    section: 'Virtual Machine'
    description: |
        Upgrade to hardware version 19 or newer to access enhanced features and better performance. Test the upgrades and ensure
        compatibility across all operational landscapes.
    remediation: |
        Impact: Changes in device versions within the guest may occur, requiring thorough testing to prevent service
        disruptions. Snapshots can aid in testing, allowing you to revert the hardware version if needed.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_7.28', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "8.1":
    title: '8.1 | L1 VMware Tools must be a version that has not reached End of General Support status - manual'
    section: 'VMware Tools'
    description: |
        Ensuring VMware Tools is running a version that has not reached its End of General Support EOGS status is imperative for
        maintaining a secure and supported environment. A version within its support period guarantees regular updates, security
        patches, and vendor support. Its advisable to have a procedure in place for regular checking and updating of VMware
        Tools to a supported version.
    remediation: |
        Impact: Using a version of VMware Tools that has reached its EOGS can expose the environment to security risks due to
        lack of updates and patches. It also may lead to compliance issues and lack of vendor support which could result in
        operational inefficiencies.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_8.1', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "8.2":
    title: '8.2 | L1 VMware Tools must have all software updates installed - manual'
    section: 'VMware Tools'
    description: |
        Ensuring that all software updates are installed on VMware Tools is crucial for maintaining a healthy and secure virtual
        environment. These updates provide essential drivers, enable effective management of guest operating systems, and offer
        features necessary for VM deployment and customization. Its vital to run a supported version compatible with the guest
        OS, be it Linux or Microsoft Windows, and keep it updated to benefit from the latest enhancements and security patches.
    remediation: |
        Impact: Neglecting to update VMware Tools could result in outdated drivers, lack of new features, and potential security
        vulnerabilities, which may hinder the performance and security of the virtual environment.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_8.2', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "8.3":
    title: '8.3 | L1 VMware Tools should configure automatic upgrades as appropriate for the environment - manual'
    section: 'VMware Tools'
    description: |
        Automatic upgrades of VMware Tools can be managed via vSphere, ensuring VMware Tools versions remain current. This
        functionality is advisable unless alternative management and update mechanisms are in place. It is recommended to have
        automatic updates enabled to minimize administrative overhead and maintain uptodate features and security patches. The
        parameter governing this behavior is autoupgrade allowupgrade with a recommended setting of true.
    remediation: |
        Impact: Disabling automatic upgrades necessitates alternative methods for updating and reconfiguring VMware Tools, which
        could increase administrative overhead and potentially leave VMs with outdated versions, posing security risks and
        operational inefficiencies.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_8.3', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "8.4":
    title: '8.4 | L1 VMware Tools on deployed virtual machines must prevent being recustomized - manual'
    section: 'VMware Tools'
    description: |
        Preventing recustomization of deployed virtual machines is essential to mitigate the risk of adversarial access through
        cloning and subsequent customization. Once a VM is deployed, it should be safeguarded against further customization to
        maintain the integrity of its configurations and data. The parameter governing this behavior is deployPkg
        enablecustomization with a recommended setting of false.
    remediation: |
        Impact: Disabling re-customization on deployed VMs may affect disaster recovery processes that necessitate IP address
        modifications. Such processes, facilitated by VMware Site Recovery Manager or VMware Cloud Disaster Recovery, will
        require alternative strategies for IP address management in recovery scenarios.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_8.4', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "8.5":
    title: '8.5 | L1 VMware Tools must limit the automatic addition of features - manual'
    section: 'VMware Tools'
    description: |
        Limit the automatic addition of features during VMware Tools upgrade processes to maintain the desired security profile
        of the guest operating system from vSphere. This control can be managed by setting the configuration parameter to a
        specified value. The parameter governing this behavior is autoupgrade allowaddfeature with a recommended setting of
        false.
    remediation: |
        Impact: With this control enforced, administrators will need to employ alternative methods to update and reconfigure
        VMware Tools as required, which might necessitate additional administrative effort and oversight.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_8.5', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "8.6":
    title: '8.6 | L1 VMware Tools must limit the automatic removal of features - manual'
    section: 'VMware Tools'
    description: |
        Limiting the automatic removal of features by VMware Tools during upgrade processes is crucial to maintain the intended
        security profile of the guest OS from vSphere. The automatic upgrade could potentially remove essential features,
        impacting the security posture inadvertently. The parameter governing this behavior is autoupgrade allowremovefeature
        with a recommended setting of false.
    remediation: |
        Impact: With this control, administrators would need to employ alternative methods for updating and reconfiguring VMware
        Tools, which might necessitate additional administrative effort.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_8.6', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "8.7":
    title: '8.7 | L1 VMware Tools must deactivate GlobalConf unless required - manual'
    section: 'VMware Tools'
    description: |
        The GlobalConf feature within VMware Tools facilitates the delivery of tools.conf configurations to virtual machines,
        simplifying configuration management. However, if not necessary, its advisable to deactivate this feature to reduce
        potential security risks. The parameter governing this behavior is globalconf enabled with a recommended setting of
        false.
    remediation: |
        Impact: With GlobalConf deactivated, administrators would need to employ alternative methods for updating and
        reconfiguring VMware Tools, which might require additional steps or tools.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_8.7', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "8.8":
    title: '8.8 | L1 VMware Tools must deactivate ContainerInfo unless required - manual'
    section: 'VMware Tools'
    description: |
        Deactivating the ContainerInfo plugin within VMware Tools is advised unless its functionality is required. This plugin
        collects data on running containers within a Linux guest operating system. The parameter governing this behavior is
        containerinfo pollinterval with a recommended setting of 0.
    remediation: |
        Impact: Disabling ContainerInfo could affect certain products and services within the VMware ecosystem that rely on this
        functionality, necessitating other configurations or methods to obtain the required container information.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_8.8', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "8.9":
    title: '8.9 | L1 VMware Tools must deactivate Appinfo information gathering unless required - manual'
    section: 'VMware Tools'
    description: |
        Deactivating the Appinfo module, unless necessary, through VMware Tools is a prudent measure to minimize the attack
        surface. This module is designed for application discovery, but if not in use, it should be disabled. The parameter
        governing this behavior is appinfo disabled with a recommended setting of true.
    remediation: |
        Impact: Disabling Appinfo may affect products and services within the VMware ecosystem that depend on this
        functionality, necessitating alternative configurations or solutions to retain those capabilities.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_8.9', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "8.10":
    title: '8.10 | L1 VMware Tools must deactivate Guest Store Upgrade operations unless required - manual'
    section: 'VMware Tools'
    description: |
        The GuestStore feature facilitates the distribution of specific content to multiple guests. If not required, it is
        advisable to disable this plugin to minimize potential attack vectors. The parameter governing this behavior is
        gueststoreupgrade policy with a recommended setting of off.
    remediation: |
        Impact: Deactivating Guest Store Upgrade operations may affect certain products and services within the VMware ecosystem
        that rely on this functionality, necessitating alternative configurations or methods to maintain required operational
        capabilities.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_8.10', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "8.11":
    title: '8.11 | L1 VMware Tools must deactivate Service Discovery unless required - manual'
    section: 'VMware Tools'
    description: |
        The VMware Tools Service Discovery plugin is designed to connect to Aria Operations, furnishing it with additional data
        concerning guests and workloads. Disabling this plugin, when not in use, is a prudent step to diminish the attack
        surface. The parameter governing this behavior is servicediscovery disabled with a recommended setting of true.
    remediation: |
        Impact: Disabling Service Discovery may affect certain products and services within the VMware ecosystem dependent on
        this functionality, necessitating alternative configurations or methods to retain required operational capabilities.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_8.11', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "8.12":
    title: '8.12 | L1 VMware Tools must limit the use of MSI transforms when reconfiguring VMware Tools - manual'
    section: 'VMware Tools'
    description: |
        Limiting the use of MSI transforms during VMware Tools reconfiguration is crucial to prevent unintended alterations to
        the installation database on Microsoft Windows guest operating systems from vSphere. This control is managed through a
        specific configuration parameter. The parameter governing this behavior is autoupgrade allowmsitransforms with a
        recommended setting of false.
    remediation: |
        Impact: Implementing this control will necessitate administrators to leverage alternative methods for updating and
        reconfiguring VMware Tools as required, which may demand additional administrative effort and oversight.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_8.12', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "8.13":
    title: '8.13 | L1 VMware Tools must enable VMware Tools logging - manual'
    section: 'VMware Tools'
    description: |
        Enable logging within VMware Tools to ensure the collection of pertinent information, facilitating diagnostic or
        forensic activities. Logging within VMware Tools is highly customizable, allowing for tailored logging setups. The
        parameter governing this behavior is logging log with a recommended setting of true.
    remediation: |
        Impact: There is no known negative functional impact from enabling VMware Tools logging. This control solely promotes
        the capture of essential data for diagnostics and analysis.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_8.13', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "8.14":
    title: '8.14 | L1 VMware Tools must send VMware Tools logs to the system log service - manual'
    section: 'VMware Tools'
    description: |
        Adjusting the logging destination in VMware Tools from the default file on disk to system log services streamlines log
        management. It redirects logs to syslog on Linux guests and the Windows Event Service on Microsoft Windows guests for
        centralized monitoring, management, and archiving. The parameter governing this behavior is logging vmsvc.handler with a
        recommended setting of syslog.
    remediation: |
        Impact: Processes dependent on log files in the default location may require modifications to function correctly with
        the new logging setup, necessitating updates to ensure proper operation and log data retrieval.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_8.14', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "8.15":
    title: '8.15 | L2 VMware Tools must deactivate Guest Operations unless required - manual'
    section: 'VMware Tools'
    description: |
        Guest Operations are a set of functions that underpin most hosttoguest interaction. Deactivating them reduces attack
        surface but also drastically reduces functionality. Ensure that your environment does not require these functions. Do
        not do this on template VMs. For a list of functions see
        https//vdcdownload.vmware.com/vmwbrepository/dcrpublic/fe08899f1eec4d8db3bca6664c168c2c/7fdf97a14c0d4be09d432ceebbc174d9/doc/vim.vm.guest.GuestOperationsManager.html
    remediation: |
        Impact: Deactivation of Guest Operations can hinder the functionality of certain products and services within the VMware
        ecosystem, requiring alternative configurations or methods to maintain required functionalities. This includes guest
        customization.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_8.15', 'cis_vmware_esxi_8.0_benchmark']
    enabled: false
    properties:
      match: all
      rules:

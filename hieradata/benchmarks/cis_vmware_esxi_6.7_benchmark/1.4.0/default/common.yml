---

inspec_rules:
  "1.1":
    title: '1.1 | L1 Ensure ESXi is properly patched - manual'
    section: 'Install'
    description: |
        VMware Update Manager is a tool used to automate patch management for vSphere hosts and virtual machines. Creating a
        baseline for patches is a good way to ensure all hosts are at the same patch level. VMware also publishes advisories on
        security patches and offers a way to subscribe to email alerts for them.
    remediation: |
        Employ a process to keep ESXi hosts up to date with patches in accordance with industry standards and internal
        guidelines. Leverage the VMware Update Manager to test and apply patches as they become available. Impact: ESXi servers
        must be in Maintenance Mode to apply patches. This implies all VMs must be moved or powered off on the ESXi server, so
        the patching process may necessitate having brief outages.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_1.1', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "1.2":
    title: '1.2 | L1 Ensure the Image Profile VIB acceptance level is configured properly'
    section: 'Install'
    description: |
        A VIB vSphere Installation Bundle is a collection of files that are packaged into an archive. The VIB contains a
        signature file that is used to verify the level of trust. The ESXi Image Profile supports four VIB acceptance levels
        VMware Certified  VIBs created, tested, and signed by VMware VMware Accepted  VIBs created by a VMware partner but
        tested and signed by VMware Partner Supported  VIBs created, tested, and signed by a certified VMware partner Community
        Supported  VIBs that have not been tested by VMware or a VMware partner
    remediation: |
        To implement the recommended configuration state, run the following PowerCLI command (in the example code, the level is
        Partner Supported):
        # Set the Software AcceptanceLevel for each host<span>
        Foreach ($VMHost in Get-VMHost ) {
         $ESXCli = Get-EsxCli -VMHost $VMHost
         $ESXCli.software.acceptance.Set("PartnerSupported")
        }
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_1.2', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'

  "1.3":
    title: '1.3 | L1 Ensure no unauthorized kernel modules are loaded on the host'
    section: 'Install'
    description: |
        ESXi hosts by default do not permit the loading of kernel modules that lack valid digital signatures. This feature can
        be overridden, which would allow unauthorized kernel modules to be loaded.
    remediation: |
        Secure the host by disabling unsigned modules and removing the offending VIBs from the host. To implement the
        recommended configuration state, run the following PowerCLI command:
        # To disable a module:
        $ESXCli = Get-EsxCli -VMHost "MyHostName_or_IPaddress"
        $ESXCli.system.module.set($false, $false, "MyModuleName")
                     Note:
         evacuate VMs and place the host into maintenance mode before disabling kernel modules.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_1.3', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should cmp == VMware Signed'
            - name: Undefined
              rule: 'Undefined'

  "1.4":
    title: '1.4 | L2 Ensure the default value of individual salt per vm is configured'
    section: 'Install'
    description: |
        The concept of salting has been introduced to help address concerns system administrators may have over the security
        implications of Transparent Page Sharing otherwise known as TPS.  As per the original TPS implementation, multiple
        virtual machines could share pages when the contents of the pages were same. With the new salting settings, the virtual
        machines can share pages only if the salt value and contents of the pages are identical. A new host config option
        Mem.ShareForceSalting is introduced to enable or disable salting. By default, salting is enabled Mem.ShareForceSalting2
        and each virtual machine has a different salt. This means page sharing does not occur across the virtual machines
        interVM TPS and only happens inside a virtual machine intra VM.
    remediation: |
        From vSphere Web Client: Select a host Click "Configure" -> "Settings" -> "System" -> "Advanced System settings" Filter
        for Mem.ShareForceSalting. Click edit Set it to 2. Additionally, the following PowerCLI command can be used: Get-VMHost
        | Get-AdvancedSetting -Name Mem.ShareForceSalting | Set-AdvancedSetting -Value 2
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_1.4', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq 2'
            - name: Undefined
              rule: 'Undefined'

  "2.1":
    title: '2.1 | L1 Ensure NTP time synchronization is configured properly'
    section: 'Communication'
    description: |
        Network Time Protocol NTP synchronization should be configured correctly and enabled on each VMware ESXi host to ensure
        accurate time for system event logs. The time sources used by the ESXi hosts should be in sync with an agreedupon time
        standard such as Coordinated Universal Time UTC. There should be at minimum two NTP sources in place, and they should
        sync whenever possible.
    remediation: |
        To enable and properly configure NTP synchronization, perform the following from the vSphere web client: Select the
        host. Click "Configure" -> "System" -> "Time Configuration". Click the "Edit..." button. Click on "Use Network Time
        Protocol". Provide the names or IP addresses of your NTP servers. Separate servers with commas. If the NTP Service
        Status is "Stopped", click on "Start". Change the startup policy to "Start and stop with host". Click "OK". To implement
        the recommended configuration state, run the following PowerCLI command:
        # Set the NTP Settings for all hosts
        # If an internal NTP server is used, replace pool.ntp.org with
        # the IP address or the Fully Qualified Domain Name (FQDN) of the internal NTP server
        $NTPServers = "pool.ntp.org", "pool2.ntp.org"
        Get-VMHost | Add-VmHostNtpServer $NTPServers
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.1', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'

  "2.2":
    title: '2.2 | L1 Ensure the ESXi host firewall is configured to restrict access to services running on the host'
    section: 'Communication'
    description: |
        The ESXi firewall is enabled by default and allows ping ICMP and communication with DHCP/DNS clients. Access to services
        should only be allowed by authorized IP addresses/networks.
    remediation: |
        To properly restrict access to services running on an ESXi host, perform the following from the vSphere web client:
        Select the host. Go to "Configure" -> "System" -> "Security Profile". In the "Firewall" section, select "Edit...". For
        each enabled service, (e.g., ssh, vSphere Web Access, http client) provide the range of allowed IP addresses. Click
        "OK".
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_2.2', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "2.3":
    title: '2.3 | L1 Ensure Managed Object Browser MOB is disabled'
    section: 'Communication'
    description: |
        The Managed Object Browser MOB is a webbased server application that lets you examine objects that exist on the server
        side, explore the object model used by the VM kernel to manage the host, and change configurations. It is installed and
        started automatically when vCenter is installed.
    remediation: |
        To disable the MOB, run the following ESXi shell command: vim-cmd proxysvc/remove_service "/mob" "httpsWithRedirect"
         Additionally, the following PowerCLI command may be used: Get-VMHost | Get-AdvancedSetting -Name
        Config.HostAgent.plugins.solo.enableMob |Set-AdvancedSetting -value "false"
         Note:
         You cannot disable the MOB while a host is in lockdown mode.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_2.3', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq false'
            - name: Undefined
              rule: 'Undefined'

  "2.4":
    title: '2.4 | L2 Ensure default self-signed certificate for ESXi communication is not used'
    section: 'Communication'
    description: |
        The default certificate is selfsigned, not signed by a trusted certificate authority CA. It should be replaced with a
        valid certificate issued by a trusted CA.
    remediation: |
        Backup and replace the details of the SSL certificate presented by the ESXi host and determine if it is issued by a
        trusted CA: Log in to the ESXi Shell, either directly from the DCUI or from an SSH client, as a user with administrator
        privileges. In the directory /etc/vmware/ssl, rename the existing certificates using the following commands:
        mv rui.crt orig.rui.crt
        mv rui.key orig.rui.key
                     Copy the certificates you want to use to /etc/vmware/ssl. Rename the new certificate and key to rui.crt and
        rui.key. Restart the host after you install the new certificate. Alternatively, you can put the host into maintenance
        mode, install the new certificate, use the Direct Console User Interface (DCUI) to restart the management agents, and
        set the host to exit maintenance mode. Leverage VMware's SSL Certificate Automation Tool to install CA-signed SSL
        certificates. For more information on this tool, please see
        [http://kb.vmware.com/kb/2057340](http://kb.vmware.com/kb/2057340).
         Impact: Replacing the default certificate might cause vCenter Server to stop managing the host. Disconnect and
        reconnect the host if vCenter Server cannot verify the new certificate.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_2.4', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "2.5":
    title: '2.5 | L1 Ensure SNMP is configured properly - manual'
    section: 'Communication'
    description: |
        Simple Network Management Protocol SNMP can be used to help manage hosts. Many organizations have other means in place
        of managing hosts and do not need SNMP enabled. If SNMP is needed, it should be configured properly to reduce the risk
        of misuse or compromise. For example, ESXi supports SNMPv3, which provides stronger security than SNMPv1 or SNMPv2,
        including key authentication and encryption. It is also important to configure the destination for SNMP traps.
    remediation: |
        To correct the SNMP configuration, perform the following from the ESXi Shell or vCLI: If SNMP is not needed, disable it
        by running: esxcli system snmp set --enable false
         If SNMP is needed, refer to the vSphere Monitoring and Performance guide, chapter 8 for steps to configure it.
        Additionally, the following PowerCLI command may be used to implement the configuration:
        # Update the host SNMP Configuration (single host connection required)
        Get-VmHostSNMP | Set-VMHostSNMP -Enabled:$true -ReadOnlyCommunity '<secret>'
                     Notes: SNMP must be configured on each ESXi host SNMP settings can be configured using Host Profiles
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_2.5', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.6":
    title: '2.6 | L1 Ensure dvfilter API is not configured if not used - manual'
    section: 'Communication'
    description: |
        The dvfilter network API is used by some products e.g., VMSafe. If it is not in use, it should not be configured to send
        network information to a VM.
    remediation: |
        To remove the configuration for the dvfilter network API, perform the following from the vSphere web client: Select the
        host and click "Configure" -> "System" -> "Advanced System Settings".
        Enter                  Net.DVFilterBindIpAddress
         in the filter.
        Set                  Net.DVFilterBindIpAddress
         to an empty value.               If an appliance is being used, make sure the value of this parameter is set to the
        proper IP address. Make sure the attribute is highlighted, then click the pencil icon. Enter the proper IP address.
        Click "OK". To implement the recommended configuration state, run the following PowerCLI command:
        # Set Net.DVFilterBindIpAddress to null on all hosts
        Get-VMHost HOST1 | Foreach { Set-AdvancedSetting -VMHost $_ -Name Net.DVFilterBindIpAddress -IPValue "" }
                     Impact: This will prevent a dvfilter-based network security appliance such as a firewall from functioning
        if not configured correctly.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_2.6', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.7":
    title: '2.7 | L1 Ensure expired and revoked SSL certificates are removed from the ESXi server - manual'
    section: 'Communication'
    description: |
        By default, ESXi hosts do not have Certificate Revocation List CRL checking available, so expired and revoked SSL
        certificates must be checked and removed manually.
    remediation: |
        Replace expired and revoked certificates with certificates from a trusted CA. Certificates can be replaced in a number
        of ways: Replace a Default ESXi Certificate and Key from the ESXi Shell Log in to the ESXi Shell, either directly from
        the DCUI or from an SSH client, as a user with administrator privileges. In the directory /etc/vmware/ssl, rename the
        existing certificates using the following commands:
        mv rui.crt orig.rui.crt
        mv rui.key orig.rui.key
                     Copy the certificates that you want to use to /etc/vmware/ssl. Rename the new certificate and key to
        rui.crt and rui.key. Restart the host after you install the new certificate. Alternatively, you can put the host into
        maintenance mode, install the new certificate, use the Direct Console User Interface (DCUI) to restart the management
        agents, and set the host to exit maintenance mode. Replace a Default ESI Certificate and Key by Using the vifs Command
        Back up the existing certificates. Generate a certificate request following the instructions from the certificate
        authority. At the command line, use the vifs command to upload the certificate to the appropriate location on the host.
        vifs --server hostname --username username --put rui.crt /host/ssl_cert
        vifs --server hostname --username username --put rui.key /host/ssl_key
                     Restart the host. Alternatively, you can put the host into maintenance mode, install the new certificate,
        and then use the Direct Console User Interface (DCUI) to restart the management agents. Replace A Default ESI
        Certificate and Key Using HTTP PUT Back up the existing certificates. In your upload application, process each file as
        follows: Open the file. Publish the file to one of these locations:
        Certificates   https://hostname/host/ssl_cert
        Keys   https://hostname/host/ssl_key
                     The locations /host/ssl_cert and host/ssl_key link to the certificate files in /etc/vmware/ssl. Restart the
        host.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_2.7', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.8":
    title: '2.8 | L1 Ensure vSphere Authentication Proxy is used when adding hosts to Active Directory - manual'
    section: 'Communication'
    description: |
        vSphere Authentication Proxy enables ESXi hosts to join a domain without using Active Directory credentials. vSphere
        Authentication Proxy enhances security for PXEbooted hosts and hosts that are provisioned using Auto Deploy and Host
        profiles, by removing the need to store Active Directory credentials in the host configuration. The vSphere
        Authentication Proxy service binds to an IPv4 address for communication with vCenter Server, and does not support IPv6.
        The vCenter Server can be on a host machine in an IPv4only, IPv4/IPv6 mixedmode, or IPv6only network environment, but
        the machine that connects to the vCenter Server through the vSphere Client must have an IPv4 address for the vSphere
        Authentication Proxy service to work.
    remediation: |
        To properly set the vSphere Authentication Proxy from Web Client directly: Select the host Click on "Configure" ->
        "Settings" -> "Authentication Services" Click on "Join Domain" Select "Using Proxy Server" radio button. Provide proxy
        server IP address. To properly set the vSphere Authentication Proxy via Host Profiles: Install and configure the
        Authentication proxy From the vSphere web client, navigate to "Host Profiles" Select the host profile Select "Configure"
        -> "Edit Host profile" Expand "Security and Services" -> "Security Settings" -> "Authentication Configuration" Select
        "Active Directory configuration" Set the "Join Domain Method" to "Use vSphere Authentication Proxy to add the host do
        domain" Provide the IP address of the authentication proxy
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_2.8', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "2.9":
    title: '2.9 | L1 Ensure VDS health check is disabled - manual'
    section: 'Communication'
    description: |
        The health check support in VDS helps you identify and troubleshoot configuration errors in a vSphere Distributed
        Switch.  It is recommended that health check be turned off by default and confirmed that it is turned off when
        troubleshooting is finished.
    remediation: |
        Using the vSphere Web Client for each VDS: Select a VDS Go to "Configure" -> "Settings" -> Health check". Click "Edit"
        Set "VLAN and MTU Check" to "Disabled". Set "Teaming and Failover Check" to "Disabled". Additionally, the following
        PowerCLI command can be used: Get-View -ViewType DistributedVirtualSwitch | ?{($_.config.HealthCheckConfig | ?{$_.enable
        -notmatch "False"})}| %{$_.UpdateDVSHealthCheckConfig(@((New-Object Vmware.Vim.VMwareDVSVlanMtuHealthCheckConfig
        -property @{enable=0}),(New-Object Vmware.Vim.VMwareDVSTeamingHealthCheckConfig -property @{enable=0})))}
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_2.9', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.1":
    title: '3.1 | L1 Ensure a centralized location is configured to collect ESXi host core dumps'
    section: 'Logging'
    description: |
        The VMware vSphere Network Dump Collector service allows for collecting diagnostic information from a host that
        experiences a critical fault. This service provides a centralized location for collecting ESXi host core dumps.
    remediation: |
        To implement the recommended configuration state, run the following ESXi shell commands:
        # Configure remote Dump Collector Server
        esxcli system coredump network set -v [VMK#] -i [DUMP_SERVER] -o [PORT]
        # Enable remote Dump Collector
        esxcli system coredump network set -e true
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.1', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'

  "3.2":
    title: '3.2 | L1 Ensure persistent logging is configured for all ESXi hosts - manual'
    section: 'Logging'
    description: |
        ESXi can be configured to store log files on an inmemory file system. This occurs when the hosts
        Syslog.global.LogDir
         property is set to a nonpersistent location, such as            /scratch.
         When this is done, only a single days worth of logs are stored at any time. Additionally, log files will be
        reinitialized upon each reboot.
    remediation: |
        To configure persistent logging properly, perform the following from the vSphere web client: Select the host and go to
        "Configure" -> "System" -> "Advanced System Settings".
        Enter                  Syslog.global.LogDir
         in the filter.
        Set the                  Syslog.global.LogDir
         to a persistent location specified as [datastorename] path_to_file where the path is relative to the datastore. For
        example, [datastore1] /systemlogs.               Make sure the attribute is highlighted, then click the pencil icon.
        Alternatively, run the following PowerCLI command:
        # Set Syslog.global.logDir for each host
        Get-VMHost | Foreach { Set-AdvancedConfiguration -VMHost $_ -Name Syslog.global.logDir -Value "<NewLocation>" }
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_3.2', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "3.3":
    title: '3.3 | L1 Ensure remote logging is configured for ESXi hosts'
    section: 'Logging'
    description: |
        By default, ESXI logs are stored on a local scratch volume or ramdisk. To preserve logs, also configure remote logging
        to a central log host for the ESXI hosts.
    remediation: |
        To configure remote logging properly, perform the following from the vSphere web client: Select the host and click
        "Configure" -> "System" -> "Advanced System Settings".
        Enter                  Syslog.global.logHost
         in the filter.
        Make sure                  Syslog.global.logHost
         is highlighted, then click the pencil icon.
        Set                  Syslog.global.logHost
         to the hostname or IP address of the central log server.               Click "OK". Alternately, run the following
        PowerCLI command:
        # Set Syslog.global.logHost for each host
        Get-VMHost | Foreach { Set-<span>AdvancedSetting </span><span>-VMHost $_ -Name Syslog.global.logHost -Value
        "<NewLocation>" }</span>
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_3.3', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'

  "4.1":
    title: '4.1 | L1 Ensure a non-root user account exists for local admin access'
    section: 'Access'
    description: |
        By default, each ESXi host has a single root admin account that is used for local administration and to connect the host
        to vCenter Server. Use of this shared account should be limited, and named nonroot user accounts with admin privileges
        should be used instead.
    remediation: |
        To create one or more named user accounts (local ESXi user accounts), perform the following using the vSphere client
        (not the vSphere web client) for each ESXi host: Connect directly to the ESXi host using the vSphere Client. Login as
        root. Select Manage, then select the Security & Users tab. Select User and view the local users. Add a local user and
        grant shell access to this user. Select the Host, then select "Actions" and "Permissions". Assign the "Administrator"
        role to the user. Notes: Even if you add your ESXi host to an Active Directory domain, it is still recommended to add at
        least one local user account to ensure admins can still login in the event the host ever becomes isolated and unable to
        access Active Directory. Adding local user accounts can be automated using Host Profiles.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_4.1', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'

  "4.2":
    title: '4.2 | L1 Ensure passwords are required to be complex - manual'
    section: 'Access'
    description: |
        ESXi uses the            pampasswdqc.so
         plugin to set password strength and complexity. You can change the required length and character class requirement or
        allow pass phrases using the Security.PasswordQualityControl advanced option. The settings should enforce the
        organizations password policies.         The character classes are digits, lowercase letters, uppercase letters, and
        other characters. There is also a special class for nonASCII characters, which could not be classified, but are assumed
        to be nondigits. The Security.PasswordQualityControl advanced option follows the following format retryN
        minN0,N1,N2,N3,N4 retryN

        The number of times the module will ask for a new password if the user fails to provide a sufficiently strong password
        and enter it twice the first time.         minN0,N1,N2,N3,N4

        The minimum allowed password lengths for different kinds of passwords/passphrases. The keyword            disabled
         can be used to disallow passwords of a given kind regardless of their length. Each subsequent number is required to be
        no larger than the preceding one.         N0

        Passwords consisting of characters from one1 character class only         N1

        Passwords consisting of characters from two2 character classes that do not meet the requirements for a passphrase.
        N2

        Used for passphrases         N3

        Passwords consisting of characters from three3 character classes that do not meet the requirements for a passphrase.
        N4

        Passwords consisting of characters from four4 character classes that do not meet the requirements for a passphrase.
        Note
         An uppercase character that begins a password does not count toward the number of character classes used, and neither
        does a number that ends a password.         Note
         ESXi imposes no restrictions on the root password. Password strength and complexity rules only apply to nonroot users.
    remediation: |
        To set the password complexity requirements, perform the following: Get-VmHost | Get-AdvancedSetting -Name
        Security.PasswordQualityControl | Set-AdvancedSetting -Value 'retry=N min=N0,N1,N2,N3,N4'

        Confirm N0 is set to                  disabled
        .
        Confirm N1 is set to                  disabled
        .
        Confirm N2 is set to                  disabled
        .
        Confirm N3 is set to                  disabled
        .
        Confirm N4 is set to                  14
         or greater.               The above requires all passwords to be 14 or more characters long and comprised of at least
        one character from four distinct character sets.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_4.2', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "4.3":
    title: '4.3 | L1 Ensure the maximum failed login attempts is set to 5'
    section: 'Access'
    description: |
        Authentication should be configured so there is a maximum number of consecutive failed login attempts for each account,
        at which point the account at risk will be locked out.
    remediation: |
        To set the maximum failed login attempts correctly, perform the following steps: From the vSphere Web Client, select the
        host. Click "Configure" -> "Settings" -> "System" -> "Advanced System Settings". Enter "Security.AccountLockFailures" in
        the filter. Click "Edit". Set the value for this parameter to 5. Alternately, use the following PowerCLI command: Get-
        VMHost | Get-AdvancedSetting -Name Security.AccountLockFailures | Set-AdvancedSetting -Value 5
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_4.3', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq 5'
            - name: Undefined
              rule: 'Undefined'

  "4.4":
    title: '4.4 | L1 Ensure account lockout is set to 15 minutes'
    section: 'Access'
    description: |
        An account is automatically locked after the maximum number of failed consecutive login attempts is reached. The account
        should be automatically unlocked after 15 minutes, otherwise administrators will need to manually unlock accounts on
        request by authorized users.
    remediation: |
        To set the account lockout to 15 minutes, perform the following: From the vSphere Web Client, select the host. Click
        "Configure" -> "Settings" -> "System" -> "Advanced System Settings". Enter "Security.AccountUnlockTime" in the filter.
        Click "Edit". Set the value for this parameter to 900. Alternately, use the following PowerCLI command: Get-VMHost |
        Get-AdvancedSetting -Name Security.AccountUnlockTime | Set-AdvancedSetting -Value 900
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_4.4', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq 900'
            - name: Undefined
              rule: 'Undefined'

  "4.5":
    title: '4.5 | L1 Ensure Active Directory is used for local user authentication - manual'
    section: 'Access'
    description: |
        ESXi can be configured to use a directory service such as Active Directory to manage users and groups. It is recommended
        that a directory service be used. Note
         If the AD group ESX Admins default is created, all users and groups that are members of this group will have full
        administrative access to all ESXi hosts in the domain.
    remediation: |
        To use AD for local user authentication, perform the following from the vSphere Web Client: Select the host and go to
        "Manage" -> "Security & Users" -> "Authentication". Click the "Join Domain" button. Provide the domain name along with
        the user credentials for an AD user that has the rights to join computers to the domain. Click "OK". Alternately, run
        the following PowerCLI command:
        # Join the ESXI Host to the Domain
        Get-VMHost HOST1 | Get-VMHostAuthentication | Set-VMHostAuthentication -Domain domain.local -User Administrator
        -Password Passw0rd -JoinDomain
                     Notes
        :             Host Profiles can be used to automate adding hosts to an AD domain. Consider using the vSphere
        Authentication proxy to avoid transmitting AD credentials over the network.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_4.5', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "4.6":
    title: '4.6 | L1 Ensure only authorized users and groups belong to the esxAdminsGroup group - manual'
    section: 'Access'
    description: |
        The AD group used by vSphere is defined by the            esxAdminsGroup
         attribute. By default, this attribute is set to ESX Admins. All members of the group are granted full administrative
        access to all ESXi hosts in the domain. Monitor AD for the creation of this group, and limit membership to highly
        trusted users and groups.
    remediation: |
        To remove unauthorized users and groups belonging to                esxAdminsGroup
        , perform the following steps after coordination between vSphere admins and Active Directory admins:
        Verify the setting of the                  esxAdminsGroup
         attribute.               View the list of members for that Microsoft Active Directory group. Remove all unauthorized
        users and groups from that group.
        If full admin access for the AD ESX admins group is not desired, you can disable this behavior using the advanced host
        setting: "               Config.HostAgent.plugins.hostsvc.esxAdminsGroupAutoAdd
        ".             Alternately, run the following PowerCLI command:
        # Join the ESXI Host to the Domain
        Get-VMHost | Get-AdvancedSetting -Name Config.HostAgent.plugins.hostsvc.esxAdminsGroup | Set-AdvancedSetting -Value
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_4.6', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "4.7":
    title: '4.7 | L1 Ensure the Exception Users list is properly configured - manual'
    section: 'Access'
    description: |
        Users who are added to the Exception Users list do not lose their permissions when the host enters lockdown mode.
        Usually you may want to add some service accounts, such as a backup agent, to the Exception Users list.
    remediation: |
        To correct the membership of the "Exception Users" list, perform the following: From the vSphere web client, select
        host. Click on "Configure" -> "Settings" -> "System" -> "Security Profile". Scroll down to "Lockdown Mode". Click
        "Edit", then click on "Exception Users". Add or delete users as per your organization's requirements.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_4.7', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.1":
    title: '5.1 | L1 Ensure the DCUI timeout is set to 600 seconds or less'
    section: 'Console'
    description: |
        The Direct Console User Interface DCUI is used for directly logging into an ESXi host and carrying out host management
        tasks. This setting terminates an idle DCUI session after the specified number of seconds has elapsed.
    remediation: |
        To correct the DCUI timeout setting, perform the following steps: From the vSphere Web Client, select the host. Click
        "Configure" -> "Settings" -> "System" -> "Advanced System Settings". Enter "UserVars.DcuiTimeOut" in the filter. Click
        "Edit". Set the value for this parameter to 600 seconds or less. Alternately, use the following PowerCLI command: Get-
        VMHost | Get-AdvancedSetting -Name UserVars.DcuiTimeOut | Set-AdvancedSetting -Value 600
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.1', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should be <= 600'
            - name: Undefined
              rule: 'Undefined'

  "5.2":
    title: '5.2 | L2 Ensure DCUI is disabled'
    section: 'Console'
    description: |
        The Direct Console User Interface DCUI allows for lowlevel host configuration such as configuring IP address, hostname,
        and root password as well as diagnostic capabilities such as enabling the ESXi shell, viewing log files, restarting
        agents, and resetting configurations. The DCUI can be disabled to prevent any local administration from the host. Once
        the DCUI is disabled, any administration of the ESXi host must be done through vCenter.
    remediation: |
        To disable DCUI, perform the following: From the vSphere web client, select the host. Select "Configure" -> "System" ->
        "Security Profile". Scroll down to "Services". Click "Edit...". Select "Direct Console UI". Click "Stop". Change the
        Startup Policy to "Start and Stop Manually". Click "OK". Alternately, use the following PowerCLI command:
        # Set DCUI to start manually rather than automatically for all hosts
        Get-VMHost | Get-VMHostService | Where { $_.key -eq "DCUI" } | Set-VMHostService -Policy Off
                     Impact: Disabling the DCUI can create a potential "lockout" situation, should the host become isolated from
        vCenter Server. Recovering from a "lockout" scenario requires reinstalling ESXi. Consider leaving DCUI enabled, and
        instead enable lockdown mode and limit the users allowed to access the DCUI using the DCUI.Access list.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_5.2', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'

  "5.3":
    title: '5.3 | L1 Ensure the ESXi shell is disabled'
    section: 'Console'
    description: |
        The ESXi shell is an interactive command line environment available from the Direct Console User Interface DCUI or
        remotely via SSH. The ESXi shell should only be enabled on a host when running diagnostics or troubleshooting.
    remediation: |
        To disable the ESXi shell, perform the following: From the vSphere web client, select the host. Select "Configure" ->
        "System" -> "Security Profile". Scroll down to "Services". Click "Edit...". Select "ESXi Shell". Click "Stop". Change
        the Startup Policy to "Start and Stop Manually". Click "OK". Alternately, use the following PowerCLI command:
        # Set the ESXi shell to start manually rather than automatically for all hosts
        Get-VMHost | Get-VMHostService | Where { $_.key -eq "TSM" } | Set-VMHostService -Policy Off
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.3', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'

  "5.4":
    title: '5.4 | L1 Ensure SSH is disabled'
    section: 'Console'
    description: |
        The ESXi shell, when enabled, can be accessed directly from the host console through the DCUI or remotely using SSH.
        Disable Secure Shell SSH for each ESXi host to prevent remote access to the ESXi shell, and only enable SSH when needed
        for troubleshooting or diagnostics.
    remediation: |
        To disable SSH, perform the following: From the vSphere web client, select the host. Select "Configure" -> "System" ->
        "Security Profile". Scroll down to "Services". Click "Edit...". Select "SSH". Click "Stop". Change the Startup Policy to
        "to Start and Stop Manually". Click "OK". Alternately, use the following PowerCLI command:
        # Set SSH to start manually rather than automatically for all hosts
        Get-VMHost | Get-VMHostService | Where { $_.key -eq "TSM-SSH" } | Set-VMHostService -Policy Off
                     Impact: Disabling SSH may impact the ability to complete assessments with some third-party tools and may
        need to be temporarily enabled for these tools to function.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.4', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'

  "5.5":
    title: '5.5 | L1 Ensure CIM access is limited - manual'
    section: 'Console'
    description: |
        The Common Information Model CIM system provides an interface that enables hardwarelevel management from remote
        applications using a set of standard APIs. Provide only the minimum access necessary to applications. Do not provision
        CIMbased hardware monitoring tools and other thirdparty applications to run as root or as another administrator account.
        Instead, create a dedicated service account specific to each CIM application with the minimal access and privileges
        needed for that application.
    remediation: |
        To limit CIM access, perform the following: Create a limited-privileged service account for CIM and other third-party
        applications. This account should access the system via vCenter. Give the account the "CIM Interaction" privilege only.
        This will enable the account to obtain a CIM ticket, which can then be used to perform both read and write CIM
        operations on the target host. If an account must connect to the host directly, this account must be granted the full
        "Administrator" role on the host. This is not recommended unless required by the monitoring software being used.
        Alternately, run the following PowerCLI command:
        # Create a new host user account -Host Local connection required-
        New-VMHostAccount -ID ServiceUser -Password <password> -UserAccount
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_5.5', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.6":
    title: '5.6 | L1 Ensure Lockdown mode is enabled'
    section: 'Console'
    description: |
        Enabling lockdown mode disables direct local access to an ESXi host, requiring the host be managed remotely from vCenter
        Server. There are some operations, such as backup and troubleshooting, that require direct access to the host. In these
        cases, lockdown mode can be disabled on a temporary basis for specific hosts as needed, and then reenabled when the task
        is completed. Note Lockdown mode does not apply to users who log in using authorized keys. Also, users in the
        DCUI.Access list for each host are allowed to override lockdown mode and log in to the DCUI. By default, the root user
        is the only user listed in the DCUI.Access list.
    remediation: |
        To enable lockdown mode, perform the following from the vSphere web client: Select the host. Select "Configure" ->
        "System" -> "Security Profile". Scroll down to "Lockdown Mode". Click "Edit...". Select the "Enable Lockdown Mode"
        checkbox. Click "OK". Alternately, run the following PowerCLI command:
        # Enable lockdown mode for each host
        Get-VMHost | Foreach { $_.EnterLockdownMode() }
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.6', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "5.7":
    title: '5.7 | L2 Ensure the SSH authorized keys file is empty - manual'
    section: 'Console'
    description: |
        ESXi hosts come with Secure Shell SSH, which can be configured to authenticate remote users using public key
        authentication. For daytoday operations, the ESXi host should be in lockdown mode with the SSH service disabled.
        Lockdown mode does not prevent root users from logging in using keys. The presence of a remote users public key in the
        /etc/ssh/keysroot/authorizedkeys
         file on an ESXi host identifies the user as trusted, meaning the user is granted access to the host without providing a
        password.
        Disabling            authorizedkeys
         access may limit your ability to run unattended remote scripts.
    remediation: |
        To remove all keys from the authorized_keys file, perform the following: Logon to the ESXi shell as root or another
        admin user.
        Edit the                  /etc/ssh/keys-root/authorized_keys
         file.               Remove all keys from the file and save the file.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_5.7', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "5.8":
    title: '5.8 | L1 Ensure idle ESXi shell and SSH sessions time out after 300 seconds or less'
    section: 'Console'
    description: |
        The            ESXiShellInteractiveTimeOut
         allows you to automatically terminate idle ESXi shell and SSH sessions. The permitted idle time should be 300 seconds
        or less.
    remediation: |
        To set the timeout to the desired value, perform the following from the vSphere web client: Select the host. Click
        "Configure" -> "System" -> "Advanced System Settings".
        Type                  ESXiShellInteractiveTimeOut
         in the filter.               Click on the attribute to highlight it. Click the pencil icon to edit.
        Set the attribute to the desired value (                 300
         seconds or less).               Click "OK". Note:
         A value of 0 disables the ESXi ShellInteractiveTimeOut.             Alternately, use the following PowerCLI command:
        # Set Remove UserVars.ESXiShellInteractiveTimeOut to 300 on all hosts
        Get-VMHost | Get-AdvancedSetting -Name 'UserVars.ESXiShellInteractiveTimeOut' | Set-AdvancedSetting -Value "300"
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.8', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq 300'
            - name: Undefined
              rule: 'Undefined'

  "5.9":
    title: '5.9 | L1 Ensure the shell services timeout is set to 1 hour or less'
    section: 'Console'
    description: |
        When the ESXi shell or SSH services are enabled on a host, they will run indefinitely. To avoid this, set the
        ESXiShellTimeOut
        , which defines a window of time after which the ESXi shell and SSH services will automatically be terminated.
        It is recommended to set the            ESXiShellInteractiveTimeOut
         together with            ESXiShellTimeOut
        .
    remediation: |
        To set the timeout to the desired value, perform the following from the vSphere web client: Select the host and click
        "Configure" -> "System" -> "Advanced System Settings".
        Type                  ESXiShellTimeOut
         in the filter.               Click on the attribute to highlight it. Click the pencil icon to edit. Set the attribute
        to 3600 seconds (1 hour) or less. Click "OK". Note:
         A value of 0 disables the ESXiShellTimeOut.             Alternately, run the following PowerCLI command:
        # Set UserVars.ESXiShellTimeOut to 3600 on all hosts
        Get-VMHost | Get-AdvancedSetting -Name 'UserVars.ESXiShellTimeOut' | Set-AdvancedSetting -Value "3600"
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_5.9', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq 3600'
            - name: Undefined
              rule: 'Undefined'

  "5.10":
    title: '5.10 | L1 Ensure DCUI has a trusted users list for lockdown mode'
    section: 'Console'
    description: |
        Lockdown mode disables direct host access, requiring admins to manage hosts from vCenter. Set DCUI.Access to a list of
        highly trusted users who would be able to override lockdown mode and access the DCUI in the event an ESXi host became
        isolated from vCenter. NOTE
         If you disable lockdown mode using the DCUI, all users with the DCUI.Access privilege will be granted the Administrator
        role on the host.
    remediation: |
        To set a trusted users list for DCUI, perform the following from the vSphere web client: Select the host. Select
        "Configure" -> "System" -> "Advanced System Settings".
        Type                  DCUI.Access
         in the filter.               Click on the attribute to highlight it. Click edit.
        Set the                  DCUI.Access
         attribute to a comma-separated list of the users who are allowed to override lockdown mode.               Click "OK".
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_5.10', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'

  "5.11":
    title: '5.11 | L2 Ensure contents of exposed configuration files have not been modified - manual'
    section: 'Console'
    description: |
        Although most configurations on ESXi are controlled via an API, there are a limited set of configuration files that are
        used directly to govern host behavior. These files are exposed via the vSphere HTTPSbased file transfer API. These files
        should be monitored for modifications. WARNING
         Do not attempt to monitor files that are NOT exposed via this file transfer API, since this can result in a
        destabilized system.
    remediation: |
        Restore all modified configuration files to a known good state by restoring backups or using other means. To help
        prevent future occurrences, you can back up the host configuration data after configuring or reconfiguring an ESXi host.
        The vicfg-cfgbackup command is available only for ESXi hosts; it is not available through a vCenter Server system
        connection. No equivalent ESXCLI command is supported. To help identify future occurrences more quickly, implement a
        procedure to monitor the files and their contents over time to ensure they are not improperly modified. Be sure not to
        monitor log files and other files whose content is expected to change regularly due to system activity. Also, account
        for configuration file changes that are due to authorized administrative activity. Note:
         Host Profiles may also be used to track configuration changes on the host; however, Host Profiles do not track all
        configuration changes.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_5.11', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.1":
    title: '6.1 | L1 Ensure bidirectional CHAP authentication for iSCSI traffic is enabled'
    section: 'Storage'
    description: |
        vSphere allows for the use of bidirectional authentication of both the iSCSI target and host. Bidirectional
        ChallengeHandshake Authentication Protocol CHAP, also known as Mutual CHAP, should be enabled to provide bidirectional
        authentication.
    remediation: |
        To enable bidirectional CHAP authentication for iSCSI traffic, perform the following: From the vSphere Web Client,
        navigate to "Hosts and Clusters". Click on a host. Click on "Configure" -> "Storage" -> "Storage Adapters". Select the
        iSCSI adapter to configure OR click the green plus symbol to create a new adapter. Under Adapter Details, click the
        Properties tab and click "Edit" in the Authentication panel. Specify authentication method: "Use bidirectional CHAP".
        Specify the outgoing CHAP name.
        Make sure that the name you specify matches the name configured on the storage side.
                         To set the CHAP name to the iSCSI adapter name, select "Use initiator name". To set the CHAP name to
        anything other than the iSCSI initiator name, deselect "Use initiator name" and type a name in the Name text box.
                              Enter an outgoing CHAP secret to be used as part of authentication. Use the same secret as your
        storage side secret. Specify incoming CHAP credentials. Make sure your outgoing and incoming secrets do not match. Click
        OK. Click the second to last symbol to rescan the iSCSI adapter. Alternately, run the following PowerCLI command:
        # Set the Chap settings for the Iscsi Adapter
        Get-VMHost | Get-VMHostHba | Where {$_.Type -eq "Iscsi"} | Set-VMHostHba # Use desired parameters here
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_6.1', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "6.2":
    title: '6.2 | L1 Ensure the uniqueness of CHAP authentication secrets for iSCSI traffic - manual'
    section: 'Storage'
    description: |
        ChallengeHandshake Authentication Protocol CHAP requires both client and host to know the secret password to establish a
        connection. Each mutual authentication secret should be unique.
    remediation: |
        To change the values of CHAP secrets so they are unique, perform the following: From the vSphere Web Client, navigate to
        "Hosts". Click on a host. Click on "Configure" -> "Storage" -> "Storage Adapters". Select the iSCSI adapter to configure
        OR click the green plus symbol to create a new adapter. Under Adapter Details, click the Properties tab and click "Edit"
        in the Authentication panel.
        Specify the authentication method.
                         None Use unidirectional CHAP if required by target Use unidirectional CHAP unless prohibited by target
        Use unidirectional CHAP Use bidirectional CHAP
                              Specify the outgoing CHAP name.
        Make sure that the name you specify matches the name configured on the storage side.
                         To set the CHAP name to the iSCSI adapter name, select "Use initiator name". To set the CHAP name to
        anything other than the iSCSI initiator name, deselect "Use initiator name" and type a name in the Name text box.
                              Enter an outgoing CHAP secret to be used as part of authentication. Use the same secret as your
        storage side secret. If configuring with bidirectional CHAP, specify incoming CHAP credentials. Make sure your outgoing
        and incoming secrets do not match. Click OK. Click the second to last symbol to rescan the iSCSI adapter.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_6.2', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "6.3":
    title: '6.3 | L1 Ensure storage area network SAN resources are segregated properly - manual'
    section: 'Storage'
    description: |
        Use zoning and logical unit number LUN masking to segregate storage area network SAN activity. Zoning provides access
        control in the SAN topology. Zoning defines which host bus adapters HBAs can connect to which targets. The devices
        outside a zone are not visible to the devices inside the zone when SAN zoning is configured. For example, zones defined
        for testing should be managed independently within the SAN so they do not interfere with activity in the production
        zones. Similarly, you can set up different zones for different departments. Zoning must take into account any host
        groups that have been set up on the SAN device. LUN masking is a process that makes a LUN available to some hosts and
        unavailable to other hosts.
    remediation: |
        The remediation procedures to properly segregate SAN activity are SAN vendor or product-specific. In general, with ESXi
        hosts, use a single-initiator zoning or a single-initiator-single-target zoning. The latter is a preferred zoning
        practice. Using the more restrictive zoning prevents problems and misconfigurations that can occur on the SAN.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_6.3', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.1":
    title: '7.1 | L1 Ensure the vSwitch Forged Transmits policy is set to reject'
    section: 'vNetwork'
    description: |
        Set the vSwitch Forged Transmits policy to reject for each vSwitch. Reject Forged Transmit can be set at the vSwitch
        and/or the Portgroup level. You can override switchlevel settings at the Portgroup level.
    remediation: |
        To set the policy to reject forged transmissions, perform the following: In the vSphere Web Client, navigate to the
        host. Go to "Hosts and Clusters" -> "vCenter" -> host. On the Configure tab, click Networking, and select Virtual
        switches. Select a standard switch from the list and click the pencil icon to edit settings. Select Security. Set Forged
        transmits to "Reject". Click "OK". Alternately, the following ESXi shell command may be used: # esxcli network vswitch
        standard policy security set -v vSwitch2 -f false
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.1', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'

  "7.2":
    title: '7.2 | L1 Ensure the vSwitch MAC Address Change policy is set to reject'
    section: 'vNetwork'
    description: |
        Ensure the MAC Address Change policy within the vSwitch is set to reject. Reject MAC Changes can be set at the vSwitch
        and/or the Portgroup level. You can override switchlevel settings at the Portgroup level.
    remediation: |
        To set the policy to reject, perform the following: In the vSphere Web Client, navigate to the host. Go to "Hosts and
        Clusters" -> "vCenter" -> host. On the Configure tab, click Networking, and select Virtual switches. Select a standard
        switch from the list and click the pencil icon to edit settings. Select Security. Set MAC Address Changes to "Reject".
        Click "OK". Alternately, perform the following using the ESXi shell: # esxcli network vswitch standard policy security
        set -v vSwitch2 -m false
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.2', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'

  "7.3":
    title: '7.3 | L1 Ensure the vSwitch Promiscuous Mode policy is set to reject'
    section: 'vNetwork'
    description: |
        Ensure the Promiscuous Mode Policy within the vSwitch is set to reject. Promiscuous mode can be set at the vSwitch
        and/or the Portgroup level. You can override switchlevel settings at the Portgroup level.
    remediation: |
        To set the policy to reject, perform the following: In the vSphere Web Client, navigate to the host. Go to "Hosts and
        Clusters" -> "vCenter" -> host. On the Configure tab, click Networking, and select Virtual switches. Select a standard
        switch from the list and click the pencil icon to edit settings. Select Security. Set Promiscuous Mode to "Reject".
        Click "OK". Alternately, perform the following via the ESXi shell: # esxcli network vswitch standard policy security set
        -v vSwitch2 -p false
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.3', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'

  "7.4":
    title: '7.4 | L1 Ensure port groups are not configured to the value of the native VLAN'
    section: 'vNetwork'
    description: |
        ESXi does not use the concept of native VLAN, so do not configure port groups to use the native VLAN ID. If the default
        value of 1 for the native VLAN is being used, the ESXi Server virtual switch port groups should be configured with any
        value between 2 and 4094. Otherwise, ensure that the port group is not configured to use whatever value is set for the
        native VLAN.
    remediation: |
        To stop using the native VLAN ID for port groups, perform the following: From the vSphere web client, select the host.
        On the Configure tab, click Networking, and select Virtual switches. Select a standard switch from the list. View the
        topology diagram of the switch, which shows the various port groups associated with that switch. For each port group on
        the vSwitch, verify and record the VLAN IDs used. If a VLAN ID change is needed, click the name of the port group in the
        topology diagram of the virtual switch. Click the "Edit settings" pencil icon under the topology diagram title. In the
        Properties section, name the port group in the Network Label text field. Choose an existing VLAN ID drop-down menu or
        type in a new one.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.4', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'

  "7.5":
    title: '7.5 | L1 Ensure port groups are not configured to VLAN values reserved by upstream physical switches - manual'
    section: 'vNetwork'
    description: |
        Ensure that port groups are not configured to VLAN values reserved by upstream physical switches. Certain physical
        switches reserve certain VLAN IDs for internal purposes and often disallow traffic configured to these values. For
        example, Cisco Catalyst switches typically reserve VLANs 1001 through 1024 and 4094, while Nexus switches typically
        reserve 3968 through 4047 and 4094. Check the documentation for your specific switch.
    remediation: |
        To change the VLAN values for port groups to non-reserved values, perform the following: From the vSphere web client,
        select the host. On the Configure tab, click Networking, and select Virtual switches. Select a standard switch from the
        list. View the topology diagram of the switch, which shows the various port groups associated with that switch. For each
        port group on the vSwitch, verify and record the VLAN IDs used. If a VLAN ID change is needed, click the name of the
        port group in the topology diagram of the virtual switch. Click the "Edit settings" pencil icon under the topology
        diagram title. In the Properties section, name the port group in the Network Label text field. Choose an existing VLAN
        ID drop-down menu or type in a new one.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_7.5', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.6":
    title: '7.6 | L1 Ensure port groups are not configured to VLAN 4095 except for Virtual Guest Tagging VGT'
    section: 'vNetwork'
    description: |
        Port groups should not be configured to VLAN 4095 except for Virtual Guest Tagging VGT. When a port group is set to VLAN
        4095, this activates VGT mode. In this mode, the vSwitch passes all network frames to the guest virtual machine without
        modifying the VLAN tags, leaving it up to the guest to deal with them. VLAN 4095 should be used only if the guest has
        been specifically configured to manage VLAN tags itself.
    remediation: |
        To set port groups to values other than 4095 unless VGT is required, perform the following: From the vSphere web client,
        select the host. On the Configure tab, click Networking, and select Virtual switches. Select a standard switch from the
        list. View the topology diagram of the switch, which shows the various port groups associated with that switch. For each
        port group on the vSwitch, verify and record the VLAN IDs used. If a VLAN ID change is needed, click the name of the
        port group in the topology diagram of the virtual switch. Click the "Edit settings" pencil icon under the topology
        diagram title. In the Properties section, name the port group in the Network Label text field. Choose an existing VLAN
        ID drop-down menu or type in a new one.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.6', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'

  "7.7":
    title: '7.7 | L1 Ensure Virtual Disributed Switch Netflow traffic is sent to an authorized collector - manual'
    section: 'vNetwork'
    description: |
        The vSphere VDS can export Netflow information about traffic crossing the VDS. These exports are not encrypted and can
        contain information about the virtual network making it easier for  a Man in the Middle attack to be executed
        successfully.
    remediation: |
        Using the vSphere Web Client For each distributed switch Go to "Configure" -> "Settings" -> "NetFlow". Click "Edit" Set
        the "Collector IP address" and "Collector port" to the organization approved systems. Additionally, the following
        PowerCLI command may be used "# Disable Netfow for a VDPortgroup
        $DPortgroup = <name of portgroup>
        Get-VDPortgroup $DPortGroup | Disable-PGNetflow

        #Function for  Disable-PGNetflow
        #From: http://www.virtu-al.net/2013/07/23/disabling-netflow-with-powercli/

        Function Disable-PGNetflow {
           [CmdletBinding()]
           Param (
              [Parameter(ValueFromPipeline=$true)]
              $DVPG
           )
           Process {
              Foreach ($PG in $DVPG) {
                 $spec = New-Object VMware.Vim.DVPortgroupConfigSpec
                 $spec.configversion = $PG.Extensiondata.Config.ConfigVersion
                 $spec.defaultPortConfig = New-Object VMware.Vim.VMwareDVSPortSetting
                 $spec.defaultPortConfig.ipfixEnabled = New-Object VMware.Vim.BoolPolicy
                 $spec.defaultPortConfig.ipfixEnabled.inherited = $false
                 $spec.defaultPortConfig.ipfixEnabled.value = $false

                 $PGView = Get-View -Id $PG.Id
                 $PGView.ReconfigureDVPortgroup_Task($spec)
              }
           }
        }
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_7.7', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "7.8":
    title: '7.8 | L1 Ensure port-level configuration overrides are disabled.'
    section: 'vNetwork'
    description: |
        Portlevel configuration overrides are disabled by default. Once enabled, it allows for different security to be set
        ignoring what is set at the PortGroup level.
    remediation: |
        Using the vSphere Web Client, For each portgroup within each distributed switch Go to "Configure" -> "Settings" ->
        "Properties". Click "Edit" Go to "Advanced". Disable all "Override port policies".
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_7.8', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'

  "8.1.1":
    title: '8.1.1 | L1 Ensure informational messages from the VM to the VMX file are limited'
    section: 'Communication'
    description: |
        Limit informational messages from the virtual machine VM to the virtual machine extensions VMX file to avoid filling the
        datastore. The configuration file containing these namevalue pairs is limited to a size of 1 MB by default. This should
        be sufficient for most cases, but you can change this value if necessary, such as if large amounts of custom information
        are being stored in the configuration file.
    remediation: |
        To limit informational messages to 1 MB, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "tools.setInfo.sizeLimit" -value 1048576
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_8.1.1', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should be <= 1048576'
            - name: Undefined
              rule: 'Undefined'

  "8.1.2":
    title: '8.1.2 | L2 Ensure only one remote console connection is permitted to a VM at any time'
    section: 'Communication'
    description: |
        By default, remote console sessions can be connected to by more than one user at a time. Permit only one remote console
        connection to a VM at a time. Other attempts will be rejected until the first connection disconnects.
    remediation: |
        To permit only one remote console session at a time, run the following PowerCLI command for VMs that do not specify the
        setting:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "RemoteDisplay.maxConnections" -value 1
                       Run the following PowerCLI command for VMs that specify the setting but have the wrong value for it:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "RemoteDisplay.maxConnections" -value 1 -Force
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.1.2', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq 1'
            - name: Undefined
              rule: 'Undefined'

  "8.2.1":
    title: '8.2.1 | L1 Ensure unnecessary floppy devices are disconnected'
    section: 'Devices'
    description: |
        Ensure that no floppy device is connected to a virtual machine unless required. For a floppy device to be disconnected,
        the floppyX.present parameter should either not be present or have a value of FALSE.
    remediation: |
        To disconnect all floppy drives from VMs, run the following PowerCLI command:
        # Remove all Floppy drives attached to VMs
        Get-VM | Get-FloppyDrive | Remove-FloppyDrive
                       The VM will need to be powered off for this change to take effect.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_8.2.1', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq false'
            - name: Undefined
              rule: 'Undefined'

  "8.2.2":
    title: '8.2.2 | L2 Ensure unnecessary CDDVD devices are disconnected'
    section: 'Devices'
    description: |
        Ensure that no CD/DVD device is connected to a virtual machine unless required. For a CD/DVD device to be disconnected,
        the ideXY.present parameter should either not be present or have a value of FALSE.
    remediation: |
        To disconnect all CD/DVD drives from VMs, run the following PowerCLI command:
        # Remove all CD/DVD Drives attached to VMs
        Get-VM | Get-CDDrive | Remove-CDDrive
                       The VM will need to be powered off for this change to take effect.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.2.2', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq false'
            - name: Undefined
              rule: 'Undefined'

  "8.2.3":
    title: '8.2.3 | L1 Ensure unnecessary parallel ports are disconnected'
    section: 'Devices'
    description: |
        Ensure that no parallel port is connected to a virtual machine unless required. For a parallel port to be disconnected,
        the parallelX.present parameter should either not be present or have a value of FALSE.
    remediation: |
        To disconnect all parallel ports from VMs, run the following PowerCLI command:
        # In this Example you will need to add the functions from this post:
        http://blogs.vmware.com/vipowershell/2012/05/working-with-vm-devices-in-powercli.html
        # Remove all Parallel Ports attached to VMs
        Get-VM | Get-ParallelPort | Remove-ParallelPort
                       The VM will need to be powered off for this change to take effect.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_8.2.3', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq false'
            - name: Undefined
              rule: 'Undefined'

  "8.2.4":
    title: '8.2.4 | L1 Ensure unnecessary serial ports are disconnected'
    section: 'Devices'
    description: |
        Ensure that no serial port is connected to a virtual machine unless required. For a serial port to be disconnected, the
        serialX.present parameter should either not be present or have a value of FALSE.
    remediation: |
        To disconnect all serial ports from VMs, run the following PowerCLI command:
        # In this Example you will need to add the functions from this post:
        http://blogs.vmware.com/vipowershell/2012/05/working-with-vm-devices-in-powercli.html
        # Remove all Serial Ports attached to VMs
        Get-VM | Get-SerialPort | Remove-SerialPort
                       The VM will need to be powered off for this change to take effect.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_8.2.4', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq false'
            - name: Undefined
              rule: 'Undefined'

  "8.2.5":
    title: '8.2.5 | L1 Ensure unnecessary USB devices are disconnected'
    section: 'Devices'
    description: |
        Ensure that no USB device is connected to a virtual machine unless required. For a USB device to be disconnected, the
        usb.present parameter should either not be present or have a value of FALSE.
    remediation: |
        To disconnect all USB devices from VMs, run the following PowerCLI command:
        # Remove all USB Devices attached to VMs
        Get-VM | Get-USBDevice | Remove-USBDevice
                       The VM will need to be powered off for this change to take effect.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_8.2.5', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq false'
            - name: Undefined
              rule: 'Undefined'

  "8.2.6":
    title: '8.2.6 | L1 Ensure unauthorized modification and disconnection of devices is disabled'
    section: 'Devices'
    description: |
        In a virtual machine, users and processes without root or administrator privileges can disconnect devices, such as
        network adapters and CDROM drives, and modify device settings within the guest operating system. These actions should be
        prevented.
    remediation: |
        To prevent unauthorized device modifications and disconnections, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.device.edit.disable" -value $true
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_8.2.6', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.2.7":
    title: '8.2.7 | L1 Ensure unauthorized connection of devices is disabled'
    section: 'Devices'
    description: |
        In a virtual machine, users and processes without root or administrator privileges can connect devices, such as network
        adapters and CDROM drives. This should be prevented.
    remediation: |
        To prevent unauthorized device connections, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.device.connectable.disable" -value $true
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_8.2.7', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.2.8":
    title: '8.2.8 | L1 Ensure PCI and PCIe device passthrough is disabled'
    section: 'Devices'
    description: |
        Using the VMware DirectPath I/O feature to pass through a PCI or PCIe device to a virtual machine can result in a
        potential security vulnerability.
    remediation: |
        Using the vSphere Web Client: Select each VM Click "Configure" -> "Settings" -> "Virtual Hardware" -> Remove the
        PCI/PCIe passthrough device. Additionally, the following PowerCLI command can be used:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "pciPassthru*.present" -value ""
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_8.2.8', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq false'
            - name: Undefined
              rule: 'Undefined'

  "8.3.1":
    title: '8.3.1 | L1 Ensure unnecessary or superfluous functions inside VMs are disabled - manual'
    section: 'Guest'
    description: |
        Disable all system components that are not needed to support the application or service running on the VM. VMs often
        dont require as many functions as ordinary physical servers, so when virtualizing, you should evaluate whether a
        particular function is truly needed.
    remediation: |
        To disable unneeded functions, perform whichever of the following steps are applicable: Disable unused services in the
        operating system. Disconnect unused physical devices, such as CD/DVD drives, floppy drives, and USB adaptors. Turn off
        any screen savers. If using a Linux, BSD, or Solaris guest operating system, do not run the X Windows system unless it
        is necessary.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_8.3.1', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "8.3.2":
    title: '8.3.2 | L1 Ensure use of the VM console is limited - manual'
    section: 'Guest'
    description: |
        The VM console enables you to connect to the console of a VM, in effect seeing what a monitor on a physical server would
        show. The VM console also provides power management and removable device connectivity controls. Instead of the VM
        console, use native remote management services, such as terminal services and ssh, to interact with VMs. Grant access to
        the VM console only when needed, and use custom roles to provide finegrained permissions for those people who do need
        access. By default, the vCenter roles Virtual Machine Power User and Virtual Machine Administrator have the Virtual
        Machine.Interaction.Console Interaction privilege.
    remediation: |
        To properly limit use of the VM console, perform the following steps: From the vSphere Client, navigate to vCenter -->
        Administration --> Roles. Create a custom role and choose Edit to enable only the minimum needed effective privileges.
        Next, select an object in the inventory. Click the Permissions tab to view the user and role pair assignments for that
        object. Remove any default "Admin" or "Power User" roles, and assign the new custom role as needed.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_8.3.2', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "8.3.3":
    title: '8.3.3 | L1 Ensure secure protocols are used for virtual serial port access - manual'
    section: 'Guest'
    description: |
        Serial ports are interfaces for connecting peripherals to the VM. They are often used on physical systems to provide a
        direct, lowlevel connection to the console of a server. Virtual serial ports allow VMs to communicate with serial ports
        over networks. If virtual serial ports are needed, they should be configured to use secure protocols.
    remediation: |
        To configure all virtual serial ports to use secure protocols, change any protocols that are not secure to one of the
        following: ssl - the equivalent of TCP+SSL tcp+ssl - SSL over TCP over IPv4 or IPv6 tcp4+ssl - SSL over TCP over IPv4
        tcp6+ssl - SSL over TCP over IPv6 telnets - telnet over SSL over TCP
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_8.3.3', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "8.3.4":
    title: '8.3.4 | L1 Ensure standard processes are used for VM deployment - manual'
    section: 'Guest'
    description: |
        Have a standard process for VM deployment whether this is a VMware template or another means to ensure Operating Systems
        have the appropriate security controls.  Refer to CIS Benchmarks for information in regards to specific Operating System
        hardening.
    remediation: |
        Create documentation and a standard process for the method for VM deployment.  If utilizing templates in VMware create
        the templates, document the process for using them as well as keeping them up-to-date, then ensure the process is
        followed accordingly through periodic review.
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_8.3.4', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "8.4.1":
    title: '8.4.1 | L1 Ensure access to VMs through the dvfilter network APIs is configured correctly - manual'
    section: 'Monitor'
    description: |
        A VM must be configured explicitly to accept access by the dvfilter network API. Only VMs that need to be accessed by
        that API should be configured to accept such access.
    remediation: |
        To configure a VM to allow dvfilter access, perform the following steps:
        Configure the following in the VMX file:                    ethernet0.filter1.name = dv-filter1
         where                    ethernet0
         is the network adapter interface of the virtual machine that is to be protected, filter1 is the number of the filter
        that is being used, and                    dv-filter1
         is the name of the particular data path kernel module that is protecting the VM.                 Set the name of the
        data path kernel correctly. To configure a VM to not allow dvfilter access, perform the following steps:
        Remove the following from its VMX file:                    ethernet0.filter1.name = dv-filter1
        .
    type: Undefined
    impact: '0.0'
    tags: ['level1', 'rule_8.4.1', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "8.4.2":
    title: '8.4.2 | L2 Ensure Autologon is disabled'
    section: 'Monitor'
    description: |
        Autologon should be disabled if it is not needed.
    remediation: |
        To disable autologon, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.ghi.autologon.disable" -value $true
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.4.2', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.4.3":
    title: '8.4.3 | L2 Ensure BIOS BBS is disabled'
    section: 'Monitor'
    description: |
        BIOS BBS should be disabled if it is not needed.
    remediation: |
        To disable BIOS BBS, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.bios.bbs.disable" -value $true
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.4.3', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.4.4":
    title: '8.4.4 | L2 Ensure Guest Host Interaction Protocol Handler is set to disabled'
    section: 'Monitor'
    description: |
        Guest Host Interaction Protocol Handle should be disabled if it is not needed.
    remediation: |
        To disable Guest Host Interaction Protocol Handle, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.ghi.protocolhandler.info.disable" -value $true
                       Impact: Some automated tools and processes may cease to function.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.4.4', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.4.5":
    title: '8.4.5 | L2 Ensure Unity Taskbar is disabled'
    section: 'Monitor'
    description: |
        The Unity Taskbar feature should be disabled if it is not needed.
    remediation: |
        To disable the Unity Taskbar feature, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.unity.taskbar.disable" -value $true
                       Impact: Some automated tools and processes may cease to function.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.4.5', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.4.6":
    title: '8.4.6 | L2 Ensure Unity Active is disabled'
    section: 'Monitor'
    description: |
        The Unity Active feature should be disabled if it is not needed.
    remediation: |
        To disable the Unity Active feature, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.unityActive.disable" -value $True
                       Impact: Some automated tools and processes may cease to function.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.4.6', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.4.7":
    title: '8.4.7 | L2 Ensure Unity Window Contents is disabled'
    section: 'Monitor'
    description: |
        The Unity Window Contents feature should be disabled if it is not needed.
    remediation: |
        To disable the Unity Window Contents feature, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.unity.windowContents.disable" -value $True
                       Impact: Some automated tools and processes may cease to function.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.4.7', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.4.8":
    title: '8.4.8 | L2 Ensure Unity Push Update is disabled'
    section: 'Monitor'
    description: |
        The Unity Push Update feature should be disabled if it is not needed.
    remediation: |
        To disable the Unity Push Update feature, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.unity.push.update.disable" -value $true
                       Impact: Some automated tools and processes may cease to function.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.4.8', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.4.9":
    title: '8.4.9 | L2 Ensure Drag and Drop Version Get is disabled'
    section: 'Monitor'
    description: |
        The Drag and Drop Version Get feature should be disabled if it is not needed.
    remediation: |
        To disable the Drag and Drop Version Get feature, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.vmxDnDVersionGet.disable" -value $true
                       Impact: Some automated tools and processes may cease to function.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.4.9', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.4.10":
    title: '8.4.10 | L2 Ensure Drag and Drop Version Set is disabled'
    section: 'Monitor'
    description: |
        The Drag and Drop Version Set feature should be disabled if it is not needed.
    remediation: |
        To disable the Drag and Drop Version Set feature, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.guestDnDVersionSet.disable" -value $true
                       Impact: Some automated tools and processes may cease to function.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.4.10', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.4.11":
    title: '8.4.11 | L2 Ensure Shell Action is disabled'
    section: 'Monitor'
    description: |
        The Shell Action feature should be disabled if it is not needed.
    remediation: |
        To disable the Shell Action feature, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.ghi.host.shellAction.disable" -value $true
                       Impact: Some automated tools and processes may cease to function.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.4.11', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.4.12":
    title: '8.4.12 | L2 Ensure Request Disk Topology is disabled'
    section: 'Monitor'
    description: |
        The Request Disk Topology feature should be disabled if it is not needed.
    remediation: |
        To disable the Request Disk Topology feature, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.dispTopoRequest.disable" -value $true
                       Impact: Some automated tools and processes may cease to function.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.4.12', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.4.13":
    title: '8.4.13 | L2 Ensure Trash Folder State is disabled'
    section: 'Monitor'
    description: |
        The Trash Folder State feature should be disabled if it is not needed.
    remediation: |
        To disable the Trash Folder State feature, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.trashFolderState.disable" -value $true
                       Impact: Some automated tools and processes may cease to function.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.4.13', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.4.14":
    title: '8.4.14 | L2 Ensure Guest Host Interaction Tray Icon is disabled'
    section: 'Monitor'
    description: |
        The Guest Host Interaction Tray Icon feature should be disabled if it is not needed.
    remediation: |
        To disable the Guest Host Interaction Tray Icon feature, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.ghi.trayicon.disable" -value $true
                       Impact: Some automated tools and processes may cease to function.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.4.14', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.4.15":
    title: '8.4.15 | L2 Ensure Unity is disabled'
    section: 'Monitor'
    description: |
        The Unity feature should be disabled if it is not needed.
    remediation: |
        To disable the Unity feature, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.unity.disable" -value $true
                       Impact: Some automated tools and processes may cease to function.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.4.15', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.4.16":
    title: '8.4.16 | L2 Ensure Unity Interlock is disabled'
    section: 'Monitor'
    description: |
        The Unity Interlock feature should be disabled if it is not needed.
    remediation: |
        To disable the Unity Interlock feature, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.unityInterlockOperation.disable" -value $true
                       Impact: Some automated tools and processes may cease to function.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.4.16', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.4.17":
    title: '8.4.17 | L2 Ensure GetCreds is disabled'
    section: 'Monitor'
    description: |
        The GetCreds feature should be disabled if it is not needed.
    remediation: |
        To disable the GetCreds feature, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.getCreds.disable" -value $true
                       Impact: Some automated tools and processes may cease to function.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.4.17', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.4.18":
    title: '8.4.18 | L2 Ensure Host Guest File System Server is disabled'
    section: 'Monitor'
    description: |
        The Host Guest File System Server should be disabled if it is not needed.
    remediation: |
        To disable the Host Guest File System Server, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.hgfsServerSet.disable" -value $true
                       Impact: This will cause the VMX process to not respond to commands from the tools process. Setting
        isolation.tools.hgfsServerSet.disable to TRUE disables the registration of the guest's HGFS server with the host. APIs
        that use HGFS to transfer files to and from the guest operating system, such as some VIX commands or the VMware Tools
        auto-upgrade utility, will not function.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.4.18', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.4.19":
    title: '8.4.19 | L2 Ensure Guest Host Interaction Launch Menu is disabled'
    section: 'Monitor'
    description: |
        The Guest Host Interaction Launch Menu feature should be disabled if it is not needed.
    remediation: |
        To disable the Guest Host Interaction Launch Menu feature, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.ghi.launchmenu.change" -value $true
                       Impact: Some automated tools and processes may cease to function.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.4.19', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.4.20":
    title: '8.4.20 | L2 Ensure memSchedFakeSampleStats is disabled'
    section: 'Monitor'
    description: |
        The memSchedFakeSampleStats feature should be disabled if it is not needed.
    remediation: |
        To disable the memSchedFakeSampleStats feature, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.memSchedFakeSampleStats.disable" -value $true
                       Impact: Some automated tools and processes may cease to function.
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.4.20', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.4.21":
    title: '8.4.21 | L1 Ensure VM Console Copy operations are disabled'
    section: 'Monitor'
    description: |
        VM console copy operations should be disabled.
    remediation: |
        To explicitly disable VM console copy operations, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.copy.disable" -value $true
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_8.4.21', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.4.22":
    title: '8.4.22 | L1 Ensure VM Console Drag and Drop operations is disabled'
    section: 'Monitor'
    description: |
        VM console drag and drop operations should be disabled.
    remediation: |
        To explicitly disable VM console drag and drop operations, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.dnd.disable" -value $true
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_8.4.22', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.4.23":
    title: '8.4.23 | L1 Ensure VM Console GUI Options is disabled'
    section: 'Monitor'
    description: |
        VM console and paste GUI options should be disabled.
    remediation: |
        To explicitly disable VM console and paste GUI options, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.setGUIOptions.enable" -value $false
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_8.4.23', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq false'
            - name: Undefined
              rule: 'Undefined'

  "8.4.24":
    title: '8.4.24 | L1 Ensure VM Console Paste operations are disabled'
    section: 'Monitor'
    description: |
        VM console paste operations should be disabled.
    remediation: |
        To explicitly disable VM console paste operations, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.paste.disable" -value $true
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_8.4.24', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.4.25":
    title: '8.4.25 | L1 Ensure access to VM console via VNC protocol is limited'
    section: 'Monitor'
    description: |
        Minimize access to the Virtual Machine via VNC protocol.
    remediation: |
        To implement the recommended configuration state, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "RemoteDisplay.vnc.enabled" -value $false
                       Impact: Configuring VM settings and opening up the firewall means multiple steps to be configured and
        monitored.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_8.4.25', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq false'
            - name: Undefined
              rule: 'Undefined'

  "8.4.26":
    title: '8.4.26 | L2 Ensure all but VGA mode on virtual machines is disabled - manual'
    section: 'Monitor'
    description: |
        Enable VGA Only mode for the Virtual Machine video card. Notethis setting should only be applied to those virtual
        machines for which a video card is not needed such as Windows Server Core and UNIX / Linux servers.
    remediation: |
        Check that the virtual machine advanced setting of "svga.vgaonly" is set to TRUE. To modify the advanced settings of a
        virtual machine using the vSphere Client: Ensure that the virtual machine has been shutdown and is powered off. Right-
        click on the virtual machine. Click Edit Settings... to open the Virtual Machine Properties window. Click the VM Options
        tab. From the list on the left, click Advanced. On the Configuration Parameters frame on the right, click Edit
        Configuration ... Click Add Parameter. On the new row, click under the Key column and specify the configuration option
        name. On the new row, click under the Value column and specify the configuration value. Start the virtual machine for
        the settings take effect. Additionally, the following PowerCLI command may be used:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "svga.vgaOnly" -value $true
                       Impact: Configuring this setting to True will not allow any advanced graphics functions to work. Only
        character-cell console mode will be available. Use of this setting renders mks.enable3d moot. The mks.enable3d has no
        effect. Note:
         this setting should only be applied to those virtual machines for which a video card is not needed such as Windows
        Server Core and UNIX / Linux servers.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_8.4.26', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "8.5.1":
    title: '8.5.1 | L2 Ensure VM limits are configured correctly - manual'
    section: 'Resources'
    description: |
        By default, all virtual machines on an ESXi host share the resources equally. By using the resource management
        capabilities of ESXi, such as limits with reservations, shares, and/or resource pools, you can control the server
        resources a virtual machine consumes.
    remediation: |
        To configure VM limits correctly, do all of the following that are applicable: Use shares or reservations to guarantee
        resources to critical VMs. Use limits to constrain resource consumption by VMs that have a greater risk of being
        exploited or attacked, or that run applications that are known to have the potential to greatly consume resources. Use
        resource pools to guarantee resources to a common group of critical VMs.
    type: Undefined
    impact: '0.0'
    tags: ['level2', 'rule_8.5.1', 'cis_vmware_esxi_6.7_benchmark']
    enabled: false
    properties:
      match: all
      rules:

  "8.5.2":
    title: '8.5.2 | L2 Ensure hardware-based 3D acceleration is disabled'
    section: 'Resources'
    description: |
        Due to performance reasons, modern graphic rendering is done within a dedicated graphic processing unit GPU. Virtual
        machines can use the hostbased GPU for such operations as well. Such dedicated hardware is typically accessed by using
        complex APIs like OpenGL and DirectX. This hardwarebased 3D acceleration should be disabled if it is not needed.
    remediation: |
        To disable hardware-based 3D acceleration, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "mks.enable3d" -value $false
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.5.2', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq false'
            - name: Undefined
              rule: 'Undefined'

  "8.6.1":
    title: '8.6.1 | L2 Ensure nonpersistent disks are limited'
    section: 'Storage'
    description: |
        By default, VM disks use dependent mode, which means they are affected by snapshots. To avoid this, VM disks can use
        independent mode instead. Independent mode can be configured as persistent data is written permanently to the disk or
        nonpersistent all changes made to disk are lost when the system is rebooted. Use of nonpersistent mode should be avoided
        unless the data is not needed e.g., already duplicated elsewhere.
    remediation: |
        To limit the use of nonpersistent mode, run the following PowerCLI command:
        #Add the parameters for the following cmdlet to set the VM Disk Type:
        Get-VM  | Get-HardDisk | Set-HardDisk
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.6.1', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'
            - name: Undefined
              rule: 'Undefined'

  "8.6.2":
    title: '8.6.2 | L1 Ensure virtual disk shrinking is disabled'
    section: 'Storage'
    description: |
        If Virtual disk shrinking is done repeatedly it will cause the virtual disk to become unavailable resulting in a denial
        of service. You can prevent virtual disk shrinking by disabling it.
    remediation: |
        To implement the recommended configuration state, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.diskShrink.disable" -value $true
                       Impact: Inability to shrink virtual machine disks in the event that a datastore runs out of space.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_8.6.2', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.6.3":
    title: '8.6.3 | L1 Ensure virtual disk wiping is disabled'
    section: 'Storage'
    description: |
        Wiping a virtual disk reclaims all unused space in it. If there is empty space in the disk, this process reduces the
        amount of space the virtual disk occupies on the host drive. If virtual disk wiping is done repeatedly, it can cause the
        virtual disk to become unavailable while wiping occurs. In most datacenter environments, disk wiping is not needed, but
        normal users and processeswithout administrative privilegescan issue disk wipes unless the feature is disabled.
    remediation: |
        To disable virtual disk wiping, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.diskWiper.disable" -value $true
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_8.6.3', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.7.1":
    title: '8.7.1 | L2 Ensure VIX messages from the VM are disabled'
    section: 'Tools'
    description: |
        The VIX API is a library for writing scripts and programs to manipulate virtual machines. If you do not make use of
        custom VIX programming in your environment, then you should disable certain features, such as the ability to send
        messages from the VM to the host. Disabling that feature does not adversely affect the functioning of VIX operations
        that originate outside the guest, so certain VMware and thirdparty solutions that rely upon this capability should
        continue to work. This is a deprecated interface.
    remediation: |
        To disable VIX messages from the VM, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "isolation.tools.vixMessage.disable" -value $true
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.7.1', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq true'
            - name: Undefined
              rule: 'Undefined'

  "8.7.2":
    title: '8.7.2 | L1 Ensure the number of VM log files is configured properly'
    section: 'Tools'
    description: |
        Normally a new log file is created only when a host is rebooted, so the file can grow to be quite large. You can ensure
        that new log files are created more frequently by limiting the maximum size of the log files. If you want to restrict
        the total size of logging data, VMware recommends saving 10 log files, each one limited to 1 MB. Each time an entry is
        written to the log, the size of the log is checked if it is over the limit, the next entry is written to a new log. If
        the maximum number of log files already exists, when a new one is created, the oldest log file is deleted.
    remediation: |
        To set the number of log files to be used to                  10
        , run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "log.keepOld" -value "10"
                       Impact: A more extreme strategy is to disable logging altogether for the virtual machine. Disabling
        logging makes troubleshooting challenging and support difficult. Do not consider disabling logging unless the log file
        rotation approach proves insufficient.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_8.7.2', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should be <= 10'
            - name: Undefined
              rule: 'Undefined'

  "8.7.3":
    title: '8.7.3 | L2 Ensure host information is not sent to guests'
    section: 'Tools'
    description: |
        Configure VMware Tools to disable host information from being sent to guests unless a particular VM requires this
        information for performance monitoring purposes.
    remediation: |
        To prevent host information from being sent to guests, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "tools.guestlib.enableHostInfo" -value $false
    type: Undefined
    impact: '1.0'
    tags: ['level2', 'rule_8.7.3', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq false'
            - name: Undefined
              rule: 'Undefined'

  "8.7.4":
    title: '8.7.4 | L1 Ensure VM log file size is limited'
    section: 'Tools'
    description: |
        Normally a new log file is created only when a host is rebooted, so the file can grow to be quite large. You can ensure
        that new log files are created more frequently by limiting the maximum size of the log files. If you want to restrict
        the total size of logging data, VMware recommends saving 10 log files, each one limited to 1 MB. If the maximum number
        of log files already exists, when a new one is created, the oldest log file is deleted.
    remediation: |
        To properly limit the maximum log file size, run the following PowerCLI command:
        # Add the setting to all VMs
        Get-VM | New-AdvancedSetting -Name "log.rotateSize" -value "1024000"
                       Impact: A more extreme strategy is to disable logging altogether for the virtual machine. Disabling
        logging makes troubleshooting challenging and support difficult. Do not consider disabling logging unless the log file
        rotation approach proves insufficient.
    type: Undefined
    impact: '1.0'
    tags: ['level1', 'rule_8.7.4', 'cis_vmware_esxi_6.7_benchmark']
    enabled: true
    properties:
      match: all
      rules:
        - checks:
            - name: Undefined
              rule: 'should eq 1024000'
            - name: Undefined
              rule: 'Undefined'

<xccdf:Benchmark xmlns:xccdf="http://checklists.nist.gov/xccdf/1.2" xmlns="http://checklists.nist.gov/xccdf/1.2" xmlns:ae="http://benchmarks.cisecurity.org/ae/0.5" xmlns:cc6="http://cisecurity.org/20-cc/v6.1" xmlns:cc7="http://cisecurity.org/20-cc/v7.0" xmlns:cc8="http://cisecurity.org/20-cc/v8.0" xmlns:ciscf="https://benchmarks.cisecurity.org/ciscf/1.0" xmlns:notes="http://benchmarks.cisecurity.org/notes" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="xccdf_org.cisecurity.benchmarks_benchmark_1.7.0_CIS_Docker_Benchmark" style="SCAP_1.2" xsi:schemaLocation="http://checklists.nist.gov/xccdf/1.2 https://scap.nist.gov/schema/xccdf/1.2/xccdf_1.2.xsd">
   <xccdf:status date="2024-07-11">draft</xccdf:status>
   <xccdf:title xml:lang="en">CIS Docker Benchmark</xccdf:title>
   <xccdf:description xml:lang="en">
      <xhtml:p>
This document, CIS Docker Benchmark, provides prescriptive guidance for establishing a secure configuration posture for Docker Engine v20.10. This guide was tested against Docker Engine 20.10.20 on RHEL 7 and Ubuntu 20.04. To obtain the latest version of this guide, please visit       <xhtml:a href="http://benchmarks.cisecurity.org">http://benchmarks.cisecurity.org</xhtml:a>
. If you have questions, comments, or have identified ways to improve this guide, please write us at       <xhtml:a href="https://community.cisecurity.org/collab/public/feedback@cisecurity.org">feedback@cisecurity.org</xhtml:a>
.    </xhtml:p>
   </xccdf:description>
   <xccdf:notice id="terms-of-use" xml:lang="en">	BACKGROUND.
	The Center for Internet Security ("CIS") provides benchmarks, scoring tools, software, data, information, suggestions, ideas, and other services and materials from the CIS website or elsewhere ("Products") as a public service to Internet users worldwide.	Recommendations contained in the Products ("Recommendations") result from a consensus-building process that involves many security experts and are generally generic in nature.	The Recommendations are intended to provide helpful information to organizations attempting to evaluate or improve the security of their networks, systems, and devices.	Proper use of the Recommendations requires careful analysis and adaptation to specific user requirements.	The Recommendations are not in any way intended to be a "quick fix" for anyone's information security needs.
	NO REPRESENTATIONS, WARRANTIES, OR COVENANTS.
	CIS makes no representations, warranties, or covenants whatsoever as to (i) the positive or negative effect of the Products or the Recommendations on the operation or the security of any particular network, computer system, network device, software, hardware, or any component of any of the foregoing or (ii) the accuracy, reliability, timeliness, or completeness of	the Products or the Recommendations.	CIS is providing the Products and the Recommendations "as is" and "as available" without representations, warranties, or covenants of any kind.	USER AGREEMENTS.
	By using the Products and/or the Recommendations, I and/or my organization ("We") agree and acknowledge that:
	1.	No network, system, device, hardware, software, or component can be made fully secure;
	2.	We are using the Products and the Recommendations solely at our own risk;
	3.	We are not compensating CIS to assume any liabilities associated with our use of the Products or the Recommendations, even risks that result from 		CIS's negligence or failure to perform; 
	4.	We have the sole responsibility to evaluate the risks and benefits of the Products and Recommendations to us and to adapt the Products and the 			Recommendations to our particular circumstances and requirements;
	5.	Neither CIS, nor any CIS Party (defined below) has any responsibility to make any corrections, updates, upgrades, or bug fixes; or to notify us of 		the need for any such corrections, updates, upgrades, or bug fixes; and
	6.	Neither CIS nor any CIS Party has or will have any liability to us whatsoever (whether based in contract, tort, strict liability or otherwise) for 		any direct, indirect, incidental, consequential, or special damages (including without limitation loss of profits, loss of sales, loss of or damage 		to reputation,loss of customers, loss of software, data, information or emails, loss of privacy, loss of use of any computer or other equipment, 	business interruption, wasted management or other staff resources or claims of any kind against us from third parties) arising out of or in any way 	Connected with our use of or our inability to use any of the Products or Recommendations (even if CIS has been advised of the possibility of such 	damages), including without limitation any liability associated with infringement of intellectual property, defects, bugs, errors, omissions, 	viruses, worms, backdoors, Trojan horses or other harmful items.
	GRANT OF LIMITED RIGHTS.
	CIS hereby grants each user the following rights, but only so long as the user complies with all of the terms of these Agreed Terms of Use:
	1.	Except to the extent that we may have received additional authorization pursuant to a written agreement with CIS, each user may download, install and 	use each of the Products on a single computer;
	2.	Each user may print one or more copies of any Product or any component of a Product that is in a .txt, .pdf, .doc, .mcw, or .rtf format, provided 		that all such copies are printed in full and are kept intact, including without limitation the text of this Agreed Terms of Use in its entirety.
	RETENTION OF INTELLECTUAL PROPERTY RIGHTS; LIMITATIONS ON DISTRIBUTION.
	The Products are protected by copyright and other intellectual property laws and by international treaties.	We acknowledge and agree that we are not acquiring title to any intellectual property rights in the Products and that full title and all ownership rights to the Products will remain the exclusive property of CIS or CIS Parties.	CIS reserves all rights not expressly granted to users in the preceding section entitled "Grant of limited rights."
	Subject to the paragraph entitled "Special Rules" (which includes a waiver, granted to some classes of CIS Members, of certain limitations in this paragraph), and except as we may have otherwise agreed in a written agreement with CIS, we agree that we will not (i) decompile, disassemble, reverse engineer, or otherwise attempt to derive the source code for any software Product that is not already in the form of source code; (ii) distribute, redistribute, encumber, sell, rent, lease, lend, sublicense, or otherwise transfer or exploit rights to any Product or any component of a Product; (iii) post any Product or any component of a Product on any website, bulletin board, ftp server, newsgroup, or other similar mechanism or device, without regard to whether such mechanism or device is internal or external, (iv) remove or alter trademark, logo, copyright or other proprietary notices, legends, symbols or labels in any Product or any component of a Product; (v) remove these Agreed Terms of Use from, or alter these Agreed Terms of Use as they appear in, any Product or any component of a Product; (vi) use any Product or any component of a Product with any derivative works based directly on a Product or any component of a Product; (vii) use any Product or any component of a Product with other products or applications that are directly and specifically dependent on such Product or any component for any part of their functionality, or (viii) represent or claim a particular level of compliance with a CIS Benchmark, scoring tool or other Product.	We will not facilitate or otherwise aid other individuals or entities in any of the activities listed in this paragraph.
	We hereby agree to indemnify, defend, and hold CIS and all of its officers, directors, members, contributors, employees, authors, developers, agents, affiliates, licensors, information and service providers, software suppliers, hardware suppliers, and all other persons who aided CIS in the creation, development, or maintenance of the Products or Recommendations ("CIS Parties") harmless from and against any and all liability, losses, costs, and expenses (including attorneys' fees and court costs) incurred by CIS or any CIS Party in connection with any claim arising out of any violation by us of the preceding paragraph, including without limitation CIS's right, at our expense, to assume the exclusive defense and control of any matter subject to this indemnification, and in such case, we agree to cooperate with CIS in its defense of such claim.	We further agree that all CIS Parties are third-party beneficiaries of our undertakings in these Agreed Terms of Use.	SPECIAL RULES.
	CIS has created and will from time to time create, special rules for its members and for other persons and organizations with which CIS has a written contractual relationship.	Those special rules will override and supersede these Agreed Terms of Use with respect to the users who are covered by the special rules.
	CIS hereby grants each CIS Security Consulting or Software Vendor Member and each CIS Organizational User Member, but only so long as such Member remains in good standing with CIS and complies with all of the terms of these Agreed Terms of Use, the right to distribute the Products and Recommendations within such Member's own organization, whether by manual or electronic means.	Each such Member acknowledges and agrees that the foregoing grant is subject to the terms of such Member's membership arrangement with CIS and may, therefore, be modified or terminated by CIS at any time.
	CHOICE OF LAW; JURISDICTION; VENUE.
	We acknowledge and agree that these Agreed Terms of Use will be governed by and construed in accordance with the laws of the State of Maryland, that any action at law or in equity arising out of or relating to these Agreed Terms of Use shall be filed only in the courts located in the State of Maryland, that we hereby consent and submit to the personal jurisdiction of such courts for the purposes of litigating any such action.	If any of these Agreed Terms of Use shall be determined to be unlawful, void, or for any reason unenforceable, then such terms shall be deemed severable and shall not affect the validity and enforceability of any remaining provisions.
	BY USING THE PRODUCTS I(WE) ACKNOWLEDGE THAT WE HAVE READ THESE AGREED TERMS OF USE IN THEIR ENTIRETY, UNDERSTAND THEM, AND I(WE) AGREE TO BE BOUND BY THEM IN ALL RESPECTS.</xccdf:notice>
   <xccdf:version>1.7.0</xccdf:version>
   <xccdf:Profile id="xccdf_org.cisecurity.benchmarks_profile_Level_1_-_Docker_-_Linux">
      <xccdf:title xml:lang="en">Level 1 - Docker - Linux</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>Items in this profile intend to:</xhtml:p>
         <xhtml:ul>
            <xhtml:li>Be practical and prudent;</xhtml:li>
            <xhtml:li>Provide a clear security benefit; and</xhtml:li>
            <xhtml:li>Not inhibit the utility of the technology beyond acceptable means.</xhtml:li>
         </xhtml:ul>
      </xccdf:description>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.1_Ensure_a_separate_partition_for_containers_has_been_created" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.2_Ensure_only_trusted_users_are_allowed_to_control_Docker_daemon" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.3_Ensure_auditing_is_configured_for_the_Docker_daemon" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.4_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_runcontainerd" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.5_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_varlibdocker" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.6_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_etcdocker" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.2.1_Ensure_the_container_host_has_been_Hardened" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.2.2_Ensure_that_the_version_of_Docker_is_up_to_date" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.1_Run_the_Docker_daemon_as_a_non-root_user_if_possible" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2_Ensure_network_traffic_is_restricted_between_containers_on_the_default_bridge" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.3_Ensure_the_logging_level_is_set_to_info" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.4_Ensure_Docker_is_allowed_to_make_changes_to_iptables" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.5_Ensure_insecure_registries_are_not_used" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.6_Ensure_aufs_storage_driver_is_not_used" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.7_Ensure_TLS_authentication_for_Docker_daemon_is_configured" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.8_Ensure_the_default_ulimit_is_configured_appropriately" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.14_Ensure_containers_are_restricted_from_acquiring_new_privileges" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.15_Ensure_live_restore_is_enabled" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.16_Ensure_Userland_Proxy_is_Disabled" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.18_Ensure_that_experimental_features_are_not_implemented_in_production" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1_Ensure_that_the_docker.service_file_ownership_is_set_to_rootroot" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.2_Ensure_that_docker.service_file_permissions_are_appropriately_set" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.3_Ensure_that_docker.socket_file_ownership_is_set_to_rootroot" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.4_Ensure_that_docker.socket_file_permissions_are_set_to_644_or_more_restrictive" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.5_Ensure_that_the_etcdocker_directory_ownership_is_set_to_rootroot" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.6_Ensure_that_etcdocker_directory_permissions_are_set_to_755_or_more_restrictively" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.7_Ensure_that_registry_certificate_file_ownership_is_set_to_rootroot" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.8_Ensure_that_registry_certificate_file_permissions_are_set_to_444_or_more_restrictively" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.9_Ensure_that_TLS_CA_certificate_file_ownership_is_set_to_rootroot" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.10_Ensure_that_TLS_CA_certificate_file_permissions_are_set_to_444_or_more_restrictively" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.11_Ensure_that_Docker_server_certificate_file_ownership_is_set_to_rootroot" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.12_Ensure_that_the_Docker_server_certificate_file_permissions_are_set_to_444_or_more_restrictively" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.13_Ensure_that_the_Docker_server_certificate_key_file_ownership_is_set_to_rootroot" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.14_Ensure_that_the_Docker_server_certificate_key_file_permissions_are_set_to_400" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.15_Ensure_that_the_Docker_socket_file_ownership_is_set_to_rootdocker" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.16_Ensure_that_the_Docker_socket_file_permissions_are_set_to_660_or_more_restrictively" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.23_Ensure_that_the_Containerd_socket_file_ownership_is_set_to_rootroot" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.24_Ensure_that_the_Containerd_socket_file_permissions_are_set_to_660_or_more_restrictively" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.1_Ensure_that_a_user_for_the_container_has_been_created" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.2_Ensure_that_containers_use_only_trusted_base_images" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.3_Ensure_that_unnecessary_packages_are_not_installed_in_the_container" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.4_Ensure_images_are_scanned_and_rebuilt_to_include_security_patches" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.6_Ensure_that_HEALTHCHECK_instructions_have_been_added_to_container_images" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.7_Ensure_update_instructions_are_not_used_alone_in_Dockerfiles" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.9_Ensure_that_COPY_is_used_instead_of_ADD_in_Dockerfiles" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.10_Ensure_secrets_are_not_stored_in_Dockerfiles" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.12_Ensure_all_signed_artifacts_are_validated" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1_Ensure_swarm_mode_is_not_Enabled_if_not_needed" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.2_Ensure_that_if_applicable_an_AppArmor_Profile_is_enabled" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.4_Ensure_that_Linux_kernel_capabilities_are_restricted_within_containers" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.5_Ensure_that_privileged_containers_are_not_used" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.6_Ensure_sensitive_host_system_directories_are_not_mounted_on_containers" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.7_Ensure_sshd_is_not_run_within_containers" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.8_Ensure_privileged_ports_are_not_mapped_within_containers" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.9_Ensure_that_only_needed_ports_are_open_on_the_container" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.10_Ensure_that_the_hosts_network_namespace_is_not_shared" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.11_Ensure_that_the_memory_usage_for_containers_is_limited" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.12_Ensure_that_CPU_priority_is_set_appropriately_on_containers" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.13_Ensure_that_the_containers_root_filesystem_is_mounted_as_read_only" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.14_Ensure_that_incoming_container_traffic_is_bound_to_a_specific_host_interface" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.15_Ensure_that_the_on-failure_container_restart_policy_is_set_to_5" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.16_Ensure_that_the_hosts_process_namespace_is_not_shared" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.17_Ensure_that_the_hosts_IPC_namespace_is_not_shared" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.18_Ensure_that_host_devices_are_not_directly_exposed_to_containers" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.19_Ensure_that_the_default_ulimit_is_overwritten_at_runtime_if_needed" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.20_Ensure_mount_propagation_mode_is_not_set_to_shared" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.21_Ensure_that_the_hosts_UTS_namespace_is_not_shared" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.22_Ensure_the_default_seccomp_profile_is_not_Disabled" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.25_Ensure_that_cgroup_usage_is_confirmed" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.26_Ensure_that__the_container_is_restricted_from_acquiring_additional_privileges" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.27_Ensure_that_container_health_is_checked_at_runtime" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.28_Ensure_that_Docker_commands_always_make_use_of_the_latest_version_of_their_image" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.29_Ensure_that_the_PIDs_cgroup_limit_is_used" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.31_Ensure_that_the_hosts_user_namespaces_are_not_shared" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.32_Ensure_that_the_Docker_socket_is_not_mounted_inside_any_containers" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1_Ensure_that_image_sprawl_is_avoided" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.2_Ensure_that_container_sprawl_is_avoided" selected="true"/>
   </xccdf:Profile>
   <xccdf:Profile id="xccdf_org.cisecurity.benchmarks_profile_Level_2_-_Docker_-_Linux">
      <xccdf:title xml:lang="en">Level 2 - Docker - Linux</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>Items in this profile exhibit one or more of the following characteristics:</xhtml:p>
         <xhtml:ul>
            <xhtml:li>Are intended for environments or use cases where security is paramount</xhtml:li>
            <xhtml:li>Acts as defense in depth measure</xhtml:li>
            <xhtml:li>May negatively inhibit the utility or performance of the technology</xhtml:li>
         </xhtml:ul>
      </xccdf:description>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.1_Ensure_a_separate_partition_for_containers_has_been_created" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.2_Ensure_only_trusted_users_are_allowed_to_control_Docker_daemon" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.3_Ensure_auditing_is_configured_for_the_Docker_daemon" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.4_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_runcontainerd" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.5_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_varlibdocker" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.6_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_etcdocker" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.7_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_docker.service" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.8_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_containerd.sock" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.9_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_docker.sock" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.10_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_etcdefaultdocker" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.11_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_etcdockerdaemon.json" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.12_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_etccontainerdconfig.toml" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.13_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_etcsysconfigdocker" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.14_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_usrbincontainerd" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.15_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_usrbincontainerd-shim" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.16_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_usrbincontainerd-shim-runc-v1" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.17_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_usrbincontainerd-shim-runc-v2" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1.18_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_usrbinrunc" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.2.1_Ensure_the_container_host_has_been_Hardened" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.2.2_Ensure_that_the_version_of_Docker_is_up_to_date" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.1_Run_the_Docker_daemon_as_a_non-root_user_if_possible" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2_Ensure_network_traffic_is_restricted_between_containers_on_the_default_bridge" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.3_Ensure_the_logging_level_is_set_to_info" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.4_Ensure_Docker_is_allowed_to_make_changes_to_iptables" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.5_Ensure_insecure_registries_are_not_used" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.6_Ensure_aufs_storage_driver_is_not_used" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.7_Ensure_TLS_authentication_for_Docker_daemon_is_configured" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.8_Ensure_the_default_ulimit_is_configured_appropriately" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.9_Enable_user_namespace_support" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.10_Ensure_the_default_cgroup_usage_has_been_confirmed" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.11_Ensure_base_device_size_is_not_changed_until_needed" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.12_Ensure_that_authorization_for_Docker_client_commands_is_enabled" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.13_Ensure_centralized_and_remote_logging_is_configured" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.14_Ensure_containers_are_restricted_from_acquiring_new_privileges" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.15_Ensure_live_restore_is_enabled" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.16_Ensure_Userland_Proxy_is_Disabled" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.17_Ensure_that_a_daemon-wide_custom_seccomp_profile_is_applied_if_appropriate" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.18_Ensure_that_experimental_features_are_not_implemented_in_production" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1_Ensure_that_the_docker.service_file_ownership_is_set_to_rootroot" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.2_Ensure_that_docker.service_file_permissions_are_appropriately_set" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.3_Ensure_that_docker.socket_file_ownership_is_set_to_rootroot" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.4_Ensure_that_docker.socket_file_permissions_are_set_to_644_or_more_restrictive" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.5_Ensure_that_the_etcdocker_directory_ownership_is_set_to_rootroot" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.6_Ensure_that_etcdocker_directory_permissions_are_set_to_755_or_more_restrictively" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.7_Ensure_that_registry_certificate_file_ownership_is_set_to_rootroot" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.8_Ensure_that_registry_certificate_file_permissions_are_set_to_444_or_more_restrictively" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.9_Ensure_that_TLS_CA_certificate_file_ownership_is_set_to_rootroot" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.10_Ensure_that_TLS_CA_certificate_file_permissions_are_set_to_444_or_more_restrictively" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.11_Ensure_that_Docker_server_certificate_file_ownership_is_set_to_rootroot" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.12_Ensure_that_the_Docker_server_certificate_file_permissions_are_set_to_444_or_more_restrictively" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.13_Ensure_that_the_Docker_server_certificate_key_file_ownership_is_set_to_rootroot" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.14_Ensure_that_the_Docker_server_certificate_key_file_permissions_are_set_to_400" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.15_Ensure_that_the_Docker_socket_file_ownership_is_set_to_rootdocker" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.16_Ensure_that_the_Docker_socket_file_permissions_are_set_to_660_or_more_restrictively" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.17_Ensure_that_the_daemon.json_file_ownership_is_set_to_rootroot" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.18_Ensure_that_daemon.json_file_permissions_are_set_to_644_or_more_restrictive" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.19_Ensure_that_the_etcdefaultdocker_file_ownership_is_set_to_rootroot" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.20_Ensure_that_the_etcdefaultdocker_file_permissions_are_set_to_644_or_more_restrictively" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.21_Ensure_that_the_etcsysconfigdocker_file_permissions_are_set_to_644_or_more_restrictively" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.22_Ensure_that_the_etcsysconfigdocker_file_ownership_is_set_to_rootroot" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.23_Ensure_that_the_Containerd_socket_file_ownership_is_set_to_rootroot" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.24_Ensure_that_the_Containerd_socket_file_permissions_are_set_to_660_or_more_restrictively" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.1_Ensure_that_a_user_for_the_container_has_been_created" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.2_Ensure_that_containers_use_only_trusted_base_images" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.3_Ensure_that_unnecessary_packages_are_not_installed_in_the_container" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.4_Ensure_images_are_scanned_and_rebuilt_to_include_security_patches" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.5_Ensure_Content_trust_for_Docker_is_Enabled" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.6_Ensure_that_HEALTHCHECK_instructions_have_been_added_to_container_images" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.7_Ensure_update_instructions_are_not_used_alone_in_Dockerfiles" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.8_Ensure_setuid_and_setgid_permissions_are_removed" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.9_Ensure_that_COPY_is_used_instead_of_ADD_in_Dockerfiles" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.10_Ensure_secrets_are_not_stored_in_Dockerfiles" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.11_Ensure_only_verified_packages_are_installed" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.12_Ensure_all_signed_artifacts_are_validated" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1_Ensure_swarm_mode_is_not_Enabled_if_not_needed" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.2_Ensure_that_if_applicable_an_AppArmor_Profile_is_enabled" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.3_Ensure_that_if_applicable_SELinux_security_options_are_set" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.4_Ensure_that_Linux_kernel_capabilities_are_restricted_within_containers" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.5_Ensure_that_privileged_containers_are_not_used" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.6_Ensure_sensitive_host_system_directories_are_not_mounted_on_containers" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.7_Ensure_sshd_is_not_run_within_containers" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.8_Ensure_privileged_ports_are_not_mapped_within_containers" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.9_Ensure_that_only_needed_ports_are_open_on_the_container" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.10_Ensure_that_the_hosts_network_namespace_is_not_shared" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.11_Ensure_that_the_memory_usage_for_containers_is_limited" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.12_Ensure_that_CPU_priority_is_set_appropriately_on_containers" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.13_Ensure_that_the_containers_root_filesystem_is_mounted_as_read_only" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.14_Ensure_that_incoming_container_traffic_is_bound_to_a_specific_host_interface" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.15_Ensure_that_the_on-failure_container_restart_policy_is_set_to_5" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.16_Ensure_that_the_hosts_process_namespace_is_not_shared" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.17_Ensure_that_the_hosts_IPC_namespace_is_not_shared" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.18_Ensure_that_host_devices_are_not_directly_exposed_to_containers" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.19_Ensure_that_the_default_ulimit_is_overwritten_at_runtime_if_needed" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.20_Ensure_mount_propagation_mode_is_not_set_to_shared" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.21_Ensure_that_the_hosts_UTS_namespace_is_not_shared" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.22_Ensure_the_default_seccomp_profile_is_not_Disabled" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.23_Ensure_that__docker_exec_commands_are_not_used_with_the_privileged_option" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.24_Ensure_that_docker_exec_commands_are_not_used_with_the_userroot_option" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.25_Ensure_that_cgroup_usage_is_confirmed" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.26_Ensure_that__the_container_is_restricted_from_acquiring_additional_privileges" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.27_Ensure_that_container_health_is_checked_at_runtime" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.28_Ensure_that_Docker_commands_always_make_use_of_the_latest_version_of_their_image" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.29_Ensure_that_the_PIDs_cgroup_limit_is_used" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.30_Ensure_that_Dockers_default_bridge_docker0_is_not_used" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.31_Ensure_that_the_hosts_user_namespaces_are_not_shared" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.32_Ensure_that_the_Docker_socket_is_not_mounted_inside_any_containers" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1_Ensure_that_image_sprawl_is_avoided" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.2_Ensure_that_container_sprawl_is_avoided" selected="true"/>
   </xccdf:Profile>
   <xccdf:Profile id="xccdf_org.cisecurity.benchmarks_profile_Level_1_-_Docker_Swarm">
      <xccdf:title xml:lang="en">Level 1 - Docker Swarm</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>For use if Docker Swarm will be enabled</xhtml:p>
      </xccdf:description>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.1_Ensure_that_the_minimum_number_of_manager_nodes_have_been_created_in_a_swarm" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2_Ensure_that_swarm_services_are_bound_to_a_specific_host_interface" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.3_Ensure_that_all_Docker_swarm_overlay_networks_are_encrypted" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.4_Ensure_that_Dockers_secret_management_commands_are_used_for_managing_secrets_in_a_swarm_cluster" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.5_Ensure_that_swarm_manager_is_run_in_auto-lock_mode" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.6_Ensure_that_the_swarm_manager_auto-lock_key_is_rotated_periodically" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.7_Ensure_that_node_certificates_are_rotated_as_appropriate" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.8_Ensure_that_CA_certificates_are_rotated_as_appropriate" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.9_Ensure_that_management_plane_traffic_is_separated_from_data_plane_traffic" selected="true"/>
   </xccdf:Profile>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808425_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for the Docker daemon</title>
      <description>This value is used in Rule: Ensure auditing is configured for the Docker daemon</description>
      <value>\/usr\/bin\/dockerd</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808426_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - /var/lib/docker</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - /var/lib/docker</description>
      <value>\/var\/lib\/docker</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808427_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - /etc/docker</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - /etc/docker</description>
      <value>\/etc\/docker</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808428_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - docker.service</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - docker.service</description>
      <value>.+</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808429_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - docker.service</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - docker.service</description>
      <value>docker.service</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808430_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - containerd.sock</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - containerd.sock</description>
      <value>.+</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808431_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - containerd.sock</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - containerd.sock</description>
      <value>containerd.sock</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808432_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - docker.sock</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - docker.sock</description>
      <value>docker.sock</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808433_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - docker.sock</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - docker.sock</description>
      <value>docker.socket</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808434_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - /etc/default/docker</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - /etc/default/docker</description>
      <value>\/etc\/default\/docker</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808435_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - /etc/default/docker</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - /etc/default/docker</description>
      <value>\/etc\/default\/docker</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808436_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json</description>
      <value>.+</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808437_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json</description>
      <value>\/etc\/docker\/daemon.json</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808438_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - /etc/containerd/config.toml</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - /etc/containerd/config.toml</description>
      <value>.+</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808439_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - /etc/containerd/config.toml</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - /etc/containerd/config.toml</description>
      <value>\/etc\/containerd\/config.toml</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808440_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - /etc/sysconfig/docker</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - /etc/sysconfig/docker</description>
      <value>\/etc\/sysconfig\/docker</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808441_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - /etc/sysconfig/docker</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - /etc/sysconfig/docker</description>
      <value>\/etc\/sysconfig\/docker</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808442_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - /usr/bin/containerd</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - /usr/bin/containerd</description>
      <value>\/usr\/bin\/containerd</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808443_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - /usr/bin/containerd</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - /usr/bin/containerd</description>
      <value>\/usr\/bin\/containerd</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808444_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - /usr/bin/containerd-shim</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - /usr/bin/containerd-shim</description>
      <value>\/usr\/bin\/containerd-shim</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808445_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - /usr/bin/containerd-shim</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - /usr/bin/containerd-shim</description>
      <value>\/usr\/bin\/containerd-shim</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808446_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - /usr/bin/containerd-shim-runc-v1</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - /usr/bin/containerd-shim-runc-v1</description>
      <value>\/usr\/bin\/containerd-shim-runc-v1</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808448_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - /usr/bin/containerd-shim-runc-v2</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - /usr/bin/containerd-shim-runc-v2</description>
      <value>/usr/bin/containerd-shim-runc-v2</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808449_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - /usr/bin/containerd-shim-runc-v2</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - /usr/bin/containerd-shim-runc-v2</description>
      <value>\/usr\/bin\/containerd-shim-runc-v2</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808450_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - /usr/bin/runc</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - /usr/bin/runc</description>
      <value>\/usr\/bin\/runc</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808451_var" operator="pattern match" type="string">
      <title>Ensure auditing is configured for Docker files and directories - /usr/bin/runc</title>
      <description>This value is used in Rule: Ensure auditing is configured for Docker files and directories - /usr/bin/runc</description>
      <value>\/usr\/bin\/runc</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808457_var" operator="pattern match" type="string">
      <title>Ensure that the /etc/docker directory ownership is set to root:root</title>
      <description>This value is used in Rule: Ensure that the /etc/docker directory ownership is set to root:root</description>
      <value>root:root</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808459_var" operator="pattern match" type="string">
      <title>Ensure that /etc/docker directory permissions are set to 755 or more restrictively</title>
      <description>This value is used in Rule: Ensure that /etc/docker directory permissions are set to 755 or more restrictively</description>
      <value>755</value>
   </Value>
   <Value id="xccdf_org.cisecurity.benchmarks_value_4808460_var" operator="pattern match" type="string">
      <title>Ensure that the Docker socket file ownership is set to root:docker</title>
      <description>This value is used in Rule: Ensure that the Docker socket file ownership is set to root:docker</description>
      <value>root:docker</value>
   </Value>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_1_Host_Configuration">
      <xccdf:title xml:lang="en">Host Configuration</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>This section covers security recommendations that you should follow to prepare the host machine that you plan to use for executing containerized workloads. Securing the Docker host and following your infrastructure security best practices would build a solid and secure foundation for executing containerized workloads.</xhtml:p>
      </xccdf:description>
      <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_1.1_Linux_Hosts_Specific_Configuration">
         <xccdf:title xml:lang="en">Linux Hosts Specific Configuration</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>This section contains recommendations that securing Linux Hosts running Docker Containers.</xhtml:p>
         </xccdf:description>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1.1_Ensure_a_separate_partition_for_containers_has_been_created" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Ensure a separate partition for containers has been created</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>
All Docker containers and their data and metadata is stored under             <xhtml:span class="inline_block">/var/lib/docker</xhtml:span>
 directory. By default,             <xhtml:span class="inline_block">/var/lib/docker</xhtml:span>
 should be mounted under either the             <xhtml:span class="inline_block">/</xhtml:span>
 or             <xhtml:span class="inline_block">/var</xhtml:span>
 partitions dependent on how the Linux operating system in use is configured.          </xhtml:p>
            </xccdf:description>
            <xccdf:metadata>
               <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
                  <controls:framework urn="urn:cisecurity.org:controls:8.0">
                     <controls:safeguard title="Segment Data Processing and Storage Based on Sensitivity" urn="urn:cisecurity.org:controls:8.0:3:12">
                        <controls:implementation_groups ig2="true" ig3="true"/>
                        <controls:asset_type>Network</controls:asset_type>
                        <controls:security_function>Protect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
                  <controls:framework urn="urn:cisecurity.org:controls:7.0">
                     <controls:control title="Controlled Access Based on the Need to Know" urn="urn:cisecurity.org:controls:7.0:14"/>
                  </controls:framework>
               </controls:cis_controls>
            </xccdf:metadata>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>
Docker depends on             <xhtml:span class="inline_block">/var/lib/docker</xhtml:span>
 as the default directory where all Docker related files, including the images, are stored. This directory could fill up quickly causing both Docker and the host to become unusable. For this reason, you should create a separate partition (logical volume) for storing Docker files.          </xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/12" system="http://cisecurity.org/20-cc/v8.0"/>
            <xccdf:ident system="URL">https://www.projectatomic.io/docs/docker-storage-recommendation/</xccdf:ident>
            <xccdf:ident system="URL">https://docs.docker.com/storage/</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>
For new installations,  you should create a separate partition for the                 <xhtml:span class="inline_block">/var/lib/docker</xhtml:span>
 mount point. For systems which have already been installed, you should use the Logical Volume Manager (LVM) within Linux to create a new partition.              </xhtml:p>
                     <xhtml:p class="bold">Impact:</xhtml:p>
                     <xhtml:p>
                        <xhtml:p>None.</xhtml:p>
                     </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1.2_Ensure_only_trusted_users_are_allowed_to_control_Docker_daemon" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Ensure only trusted users are allowed to control Docker daemon</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>
The Docker daemon currently requires access to the Docker socket which is, by default, owned by the user             <xhtml:span class="inline_block">root</xhtml:span>
 and the group             <xhtml:span class="inline_block">docker</xhtml:span>
.          </xhtml:p>
            </xccdf:description>
            <xccdf:metadata>
               <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
                  <controls:framework urn="urn:cisecurity.org:controls:8.0">
                     <controls:safeguard title="Establish an Access Granting Process" urn="urn:cisecurity.org:controls:8.0:6:1">
                        <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                        <controls:asset_type>Users</controls:asset_type>
                        <controls:security_function>Protect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
                  <controls:framework urn="urn:cisecurity.org:controls:7.0">
                     <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
                  </controls:framework>
               </controls:cis_controls>
            </xccdf:metadata>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>
Docker allows you to share a directory between the Docker host and a guest container without limiting the access rights of the container. This means that you can start a container and map the             <xhtml:span class="inline_block">/</xhtml:span>
 directory on your host to the container. The container would then be able to modify your host file system without any restrictions. This means that you could gain elevated privileges simply by being a member of the             <xhtml:span class="inline_block">docker</xhtml:span>
 group and subsequently start a container which maps the root             <xhtml:span class="inline_block">/</xhtml:span>
 directory on the host.          </xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/6/subcontrol/1" system="http://cisecurity.org/20-cc/v8.0"/>
            <xccdf:ident system="URL">https://docs.docker.com/engine/security/#docker-daemon-attack-surface</xccdf:ident>
            <xccdf:ident system="URL">http://www.projectatomic.io/blog/2015/08/why-we-dont-let-non-root-users-run-docker-in-centos-fedora-or-rhel/</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>
You should remove any untrusted users from the                 <xhtml:span class="inline_block">docker</xhtml:span>
 group. Additionally, you should not create a mapping of sensitive directories from the host to container volumes.              </xhtml:p>
                     <xhtml:p class="bold">Impact:</xhtml:p>
                     <xhtml:p>
                        <xhtml:p>Provided the proceeding instructions are implemented, rights to build and execute containers as normal user would be restricted.</xhtml:p>
                     </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1.3_Ensure_auditing_is_configured_for_the_Docker_daemon" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure auditing is configured for the Docker daemon</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>Audit all Docker daemon activities.</xhtml:p>
            </xccdf:description>
            <xccdf:metadata>
               <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
                  <controls:framework urn="urn:cisecurity.org:controls:8.0">
                     <controls:safeguard title="Collect Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:2">
                        <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                        <controls:asset_type>Network</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
                  <controls:framework urn="urn:cisecurity.org:controls:7.0">
                     <controls:safeguard title="Activate audit logging" urn="urn:cisecurity.org:controls:7.0:6:2">
                        <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                        <controls:asset_type>Network</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                     <controls:safeguard title="Enable Detailed Logging" urn="urn:cisecurity.org:controls:7.0:6:3">
                        <controls:implementation_groups ig2="true" ig3="true"/>
                        <controls:asset_type>Network</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
               </controls:cis_controls>
            </xccdf:metadata>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>
As well as auditing the normal Linux file system and system calls, you should also audit the Docker daemon.  Because this daemon runs with             <xhtml:span class="inline_block">root</xhtml:span>
 privileges. It is very important to audit its activities and usage.          </xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/2" system="http://cisecurity.org/20-cc/v8.0"/>
            <xccdf:ident system="URL">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/system_design_guide/auditing-the-system_system-design-guide</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>You should add rules for the Docker daemon.</xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:p>
Add the line below to the                 <xhtml:span class="inline_block">/etc/audit/rules.d/audit.rules</xhtml:span>
 file:              </xhtml:p>
                     <xhtml:code class="code_block">-w /usr/bin/dockerd -k docker
</xhtml:code>
                     <xhtml:p>Then, restart the audit daemon using the following command</xhtml:p>
                     <xhtml:code class="code_block">systemctl restart auditd
</xhtml:code>
                     <xhtml:p class="bold">Impact:</xhtml:p>
                     <xhtml:p>
                        <xhtml:p>Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.</xhtml:p>
                     </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808425" value-id="xccdf_org.cisecurity.benchmarks_value_4808425_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808425"/>
               </check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1.4_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_runcontainerd" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Ensure auditing is configured for Docker files and directories - /run/containerd</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>
Audit             <xhtml:span class="inline_block">/run/containerd</xhtml:span>
.          </xhtml:p>
            </xccdf:description>
            <xccdf:metadata>
               <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
                  <controls:framework urn="urn:cisecurity.org:controls:8.0">
                     <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                        <controls:implementation_groups ig2="true" ig3="true"/>
                        <controls:asset_type>Network</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
                  <controls:framework urn="urn:cisecurity.org:controls:7.0">
                     <controls:safeguard title="Enforce Detail Logging for Access or Changes to Sensitive Data" urn="urn:cisecurity.org:controls:7.0:14:9">
                        <controls:implementation_groups ig3="true"/>
                        <controls:asset_type>Data</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
               </controls:cis_controls>
            </xccdf:metadata>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>
As well as auditing the normal Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with             <xhtml:span class="inline_block">root</xhtml:span>
 privileges and its behaviour depends on some key files and directories.             <xhtml:span class="inline_block">/run/containerd</xhtml:span>
 is one such directory. As it holds all the information about containers it should be audited.          </xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/9" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
            <xccdf:ident system="URL">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/system_design_guide/auditing-the-system_system-design-guide</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>
You should add a rule for the                 <xhtml:span class="inline_block">/run/containerd</xhtml:span>
 directory.              </xhtml:p>
                     <xhtml:p>For example,</xhtml:p>
                     <xhtml:p>
Add the line as below to the                 <xhtml:span class="inline_block">/etc/audit/rules.d/audit.rules</xhtml:span>
 file:              </xhtml:p>
                     <xhtml:code class="code_block">-a exit,always -F path=/run/containerd -F perm=war -k docker
</xhtml:code>
                     <xhtml:p>Then, restart the audit daemon using the following command</xhtml:p>
                     <xhtml:code class="code_block">systemctl restart auditd
</xhtml:code>
                     <xhtml:p class="bold">Impact:</xhtml:p>
                     <xhtml:p>
                        <xhtml:p>Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.</xhtml:p>
                     </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1.5_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_varlibdocker" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Ensure auditing is configured for Docker files and directories - /var/lib/docker</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>
Audit             <xhtml:span class="inline_block">/var/lib/docker</xhtml:span>
.          </xhtml:p>
            </xccdf:description>
            <xccdf:metadata>
               <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
                  <controls:framework urn="urn:cisecurity.org:controls:8.0">
                     <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                        <controls:implementation_groups ig2="true" ig3="true"/>
                        <controls:asset_type>Network</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
                  <controls:framework urn="urn:cisecurity.org:controls:7.0">
                     <controls:safeguard title="Enforce Detail Logging for Access or Changes to Sensitive Data" urn="urn:cisecurity.org:controls:7.0:14:9">
                        <controls:implementation_groups ig3="true"/>
                        <controls:asset_type>Data</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
               </controls:cis_controls>
            </xccdf:metadata>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>
As well as auditing the normal Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with             <xhtml:span class="inline_block">root</xhtml:span>
 privileges and its behaviour depends on some key files and directories.             <xhtml:span class="inline_block">/var/lib/docker</xhtml:span>
 is one such directory. As it holds all the information about containers it should be audited.          </xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/9" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
            <xccdf:ident system="URL">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/system_design_guide/auditing-the-system_system-design-guide</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>
You should add a rule for the                 <xhtml:span class="inline_block">/var/lib/docker</xhtml:span>
 directory.
Adding exclusions for /var/lib/docker/overlay2 &amp; /var/lib/docker/volumes reduces the audit messages to a more manageable level.              </xhtml:p>
                     <xhtml:p>For example,</xhtml:p>
                     <xhtml:p>
Add the line as below to the                 <xhtml:span class="inline_block">/etc/audit/rules.d/audit.rules</xhtml:span>
 file:              </xhtml:p>
                     <xhtml:code class="code_block">
-a exit,always -F path=/var/lib/docker -F perm=war -k docker                <br/>
-a exit,never -F dir=/var/lib/docker/volumes                <br/>
-a exit,never -F dir=/var/lib/docker/overlay2
              </xhtml:code>
                     <xhtml:p>or for systems with namespace-remapping enabled</xhtml:p>
                     <xhtml:code class="code_block">
-a exit,always -F path=/var/lib/docker -F perm=war -k docker                <br/>
-a exit,never -F dir=/var/lib/docker/165536.165536/volumes                <br/>
-a exit,never -F dir=/var/lib/docker/165536.165536/overlay2
              </xhtml:code>
                     <xhtml:p>Then, restart the audit daemon using the following command</xhtml:p>
                     <xhtml:code class="code_block">systemctl restart auditd
</xhtml:code>
                     <xhtml:p class="bold">Impact:</xhtml:p>
                     <xhtml:p>
                        <xhtml:p>Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.</xhtml:p>
                     </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808426" value-id="xccdf_org.cisecurity.benchmarks_value_4808426_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808426"/>
               </check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1.6_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_etcdocker" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure auditing is configured for Docker files and directories - /etc/docker</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>
Audit             <xhtml:span class="inline_block">/etc/docker</xhtml:span>
.          </xhtml:p>
            </xccdf:description>
            <xccdf:metadata>
               <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
                  <controls:framework urn="urn:cisecurity.org:controls:8.0">
                     <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                        <controls:implementation_groups ig2="true" ig3="true"/>
                        <controls:asset_type>Network</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
                  <controls:framework urn="urn:cisecurity.org:controls:7.0">
                     <controls:safeguard title="Enforce Detail Logging for Access or Changes to Sensitive Data" urn="urn:cisecurity.org:controls:7.0:14:9">
                        <controls:implementation_groups ig3="true"/>
                        <controls:asset_type>Data</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
               </controls:cis_controls>
            </xccdf:metadata>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>
As well as auditing the normal Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with             <xhtml:span class="inline_block">root</xhtml:span>
 privilege and its behavior depends on some key files and directories, one of these being             <xhtml:span class="inline_block">/etc/docker</xhtml:span>
. This holds various certificates and keys used for TLS communication between Docker daemon and Docker client and as such it should be audited.          </xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/9" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
            <xccdf:ident system="URL">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/system_design_guide/auditing-the-system_system-design-guide</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>
You should add a rule for the                 <xhtml:span class="inline_block">/etc/docker</xhtml:span>
 directory.              </xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:p>
Add the line below to the                 <xhtml:span class="inline_block">/etc/audit/rules.d/audit.rules</xhtml:span>
 file:              </xhtml:p>
                     <xhtml:code class="code_block">-w /etc/docker -k docker 
</xhtml:code>
                     <xhtml:p>Then restart the audit daemon. For example:</xhtml:p>
                     <xhtml:code class="code_block">systemctl restart auditd
</xhtml:code>
                     <xhtml:p class="bold">Impact:</xhtml:p>
                     <xhtml:p>
                        <xhtml:p>Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.</xhtml:p>
                     </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808427" value-id="xccdf_org.cisecurity.benchmarks_value_4808427_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808427"/>
               </check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1.7_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_docker.service" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure auditing is configured for Docker files and directories - docker.service</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>
Audit the             <xhtml:span class="inline_block">docker.service</xhtml:span>
 if applicable.          </xhtml:p>
            </xccdf:description>
            <xccdf:metadata>
               <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
                  <controls:framework urn="urn:cisecurity.org:controls:8.0">
                     <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                        <controls:implementation_groups ig2="true" ig3="true"/>
                        <controls:asset_type>Network</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
                  <controls:framework urn="urn:cisecurity.org:controls:7.0">
                     <controls:safeguard title="Enforce Detail Logging for Access or Changes to Sensitive Data" urn="urn:cisecurity.org:controls:7.0:14:9">
                        <controls:implementation_groups ig3="true"/>
                        <controls:asset_type>Data</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
               </controls:cis_controls>
            </xccdf:metadata>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>
As well as auditing the normal Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with             <xhtml:span class="inline_block">root</xhtml:span>
 privileges and its behavior depends on some key files and directories with             <xhtml:span class="inline_block">docker.service</xhtml:span>
 being one such file. The             <xhtml:span class="inline_block">docker.service</xhtml:span>
 file might be present  if the daemon parameters have been changed by an administrator. If so, it holds various parameters for the Docker daemon and should be audited.          </xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/9" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
            <xccdf:ident system="URL">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/system_design_guide/auditing-the-system_system-design-guide</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>If the file exists, a rule for it should be added.</xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:p>
Add the line as below in                 <xhtml:span class="inline_block">/etc/audit/rules.d/audit.rules</xhtml:span>
 file:              </xhtml:p>
                     <xhtml:code class="code_block">-w /usr/lib/systemd/system/docker.service -k docker 
</xhtml:code>
                     <xhtml:p>Then restart the audit daemon.</xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:code class="code_block">systemctl restart auditd
</xhtml:code>
                     <xhtml:p class="bold">Impact:</xhtml:p>
                     <xhtml:p>
                        <xhtml:p>Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.</xhtml:p>
                     </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="OR">
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808428" value-id="xccdf_org.cisecurity.benchmarks_value_4808428_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808428"/>
               </check>
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808429" value-id="xccdf_org.cisecurity.benchmarks_value_4808429_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808429"/>
               </check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1.8_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_containerd.sock" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure auditing is configured for Docker files and directories - containerd.sock</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>
Audit             <xhtml:span class="inline_block">containerd.sock</xhtml:span>
, if applicable.          </xhtml:p>
            </xccdf:description>
            <xccdf:metadata>
               <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
                  <controls:framework urn="urn:cisecurity.org:controls:8.0">
                     <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                        <controls:implementation_groups ig2="true" ig3="true"/>
                        <controls:asset_type>Network</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
                  <controls:framework urn="urn:cisecurity.org:controls:7.0">
                     <controls:safeguard title="Enforce Detail Logging for Access or Changes to Sensitive Data" urn="urn:cisecurity.org:controls:7.0:14:9">
                        <controls:implementation_groups ig3="true"/>
                        <controls:asset_type>Data</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
               </controls:cis_controls>
            </xccdf:metadata>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>
As well as auditing the normal Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges, it is very important to audit its activities and usage. Its behavior depends on some key files and directories with             <xhtml:span class="inline_block">containerd.sock</xhtml:span>
 being one such file, and as this holds various parameters for the Docker daemon, it should be audited.          </xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/9" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
            <xccdf:ident system="URL">https://github.com/containerd/containerd/blob/master/docs/ops.md</xccdf:ident>
            <xccdf:ident system="URL">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/system_design_guide/auditing-the-system_system-design-guide</xccdf:ident>
            <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/dockerd/#docker-runtime-execution-options</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>If the file exists, you should add a rule for it.</xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:p>
Add the line below to the                 <xhtml:span class="inline_block">/etc/audit/rules.d/audit.rules</xhtml:span>
 file:              </xhtml:p>
                     <xhtml:code class="code_block">-w /run/containerd/containerd.sock -k docker 
</xhtml:code>
                     <xhtml:p>Then restart the audit daemon.</xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:code class="code_block">systemctl restart auditd
</xhtml:code>
                     <xhtml:p class="bold">Impact:</xhtml:p>
                     <xhtml:p>
                        <xhtml:p>Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.</xhtml:p>
                     </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="OR">
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808430" value-id="xccdf_org.cisecurity.benchmarks_value_4808430_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808430"/>
               </check>
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808431" value-id="xccdf_org.cisecurity.benchmarks_value_4808431_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808431"/>
               </check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1.9_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_docker.sock" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure auditing is configured for Docker files and directories - docker.sock</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>
Audit             <xhtml:span class="inline_block">docker.sock</xhtml:span>
, if applicable.          </xhtml:p>
            </xccdf:description>
            <xccdf:metadata>
               <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
                  <controls:framework urn="urn:cisecurity.org:controls:8.0">
                     <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                        <controls:implementation_groups ig2="true" ig3="true"/>
                        <controls:asset_type>Network</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
                  <controls:framework urn="urn:cisecurity.org:controls:7.0">
                     <controls:safeguard title="Enforce Detail Logging for Access or Changes to Sensitive Data" urn="urn:cisecurity.org:controls:7.0:14:9">
                        <controls:implementation_groups ig3="true"/>
                        <controls:asset_type>Data</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
               </controls:cis_controls>
            </xccdf:metadata>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>
As well as auditing the normal Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges, it is very important to audit its activities and usage. Its behavior depends on some key files and directories with             <xhtml:span class="inline_block">docker.socket</xhtml:span>
 being one such file, and as this holds various parameters for the Docker daemon, it should be audited.          </xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/9" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
            <xccdf:ident system="URL">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/system_design_guide/auditing-the-system_system-design-guide</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>If the file exists, you should add a rule for it.</xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:p>
Add the line below to the                 <xhtml:span class="inline_block">/etc/audit/rules.d/audit.rules</xhtml:span>
 file:              </xhtml:p>
                     <xhtml:code class="code_block">-w /var/run/docker.sock -k docker 
</xhtml:code>
                     <xhtml:p>Then restart the audit daemon.</xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:code class="code_block">systemctl restart auditd
</xhtml:code>
                     <xhtml:p class="bold">Impact:</xhtml:p>
                     <xhtml:p>
                        <xhtml:p>Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.</xhtml:p>
                     </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="OR">
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808432" value-id="xccdf_org.cisecurity.benchmarks_value_4808432_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808432"/>
               </check>
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808433" value-id="xccdf_org.cisecurity.benchmarks_value_4808433_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808433"/>
               </check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1.10_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_etcdefaultdocker" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure auditing is configured for Docker files and directories - /etc/default/docker</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>
Audit             <xhtml:span class="inline_block">/etc/default/docker</xhtml:span>
, if applicable.          </xhtml:p>
            </xccdf:description>
            <xccdf:metadata>
               <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
                  <controls:framework urn="urn:cisecurity.org:controls:8.0">
                     <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                        <controls:implementation_groups ig2="true" ig3="true"/>
                        <controls:asset_type>Network</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
                  <controls:framework urn="urn:cisecurity.org:controls:7.0">
                     <controls:safeguard title="Enforce Detail Logging for Access or Changes to Sensitive Data" urn="urn:cisecurity.org:controls:7.0:14:9">
                        <controls:implementation_groups ig3="true"/>
                        <controls:asset_type>Data</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
               </controls:cis_controls>
            </xccdf:metadata>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>
As well as auditing the normal Linux file system and system calls, you should audit all Docker related files and directories. The Docker daemon runs with             <xhtml:span class="inline_block">root</xhtml:span>
 privileges and its behavior depends on some key files and directories.             <xhtml:span class="inline_block">/etc/default/docker</xhtml:span>
 is one such file. It holds various parameters related to the Docker daemon and should therefore be audited.          </xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/9" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
            <xccdf:ident system="URL">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/system_design_guide/auditing-the-system_system-design-guide</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>
You should add a rule for the                 <xhtml:span class="inline_block">/etc/default/docker</xhtml:span>
 file.              </xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:p>
Add the line below to the                 <xhtml:span class="inline_block">/etc/audit/audit.rules</xhtml:span>
 file:              </xhtml:p>
                     <xhtml:code class="code_block">-w /etc/default/docker -k docker 
</xhtml:code>
                     <xhtml:p>Then restart the audit daemon.</xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:code class="code_block">systemctl restart auditd
</xhtml:code>
                     <xhtml:p class="bold">Impact:</xhtml:p>
                     <xhtml:p>
                        <xhtml:p>Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.</xhtml:p>
                     </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="OR">
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808434" value-id="xccdf_org.cisecurity.benchmarks_value_4808434_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808434"/>
               </check>
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808435" value-id="xccdf_org.cisecurity.benchmarks_value_4808435_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808435"/>
               </check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1.11_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_etcdockerdaemon.json" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>
Audit             <xhtml:span class="inline_block">/etc/docker/daemon.json</xhtml:span>
, if applicable.          </xhtml:p>
            </xccdf:description>
            <xccdf:metadata>
               <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
                  <controls:framework urn="urn:cisecurity.org:controls:8.0">
                     <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                        <controls:implementation_groups ig2="true" ig3="true"/>
                        <controls:asset_type>Network</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
                  <controls:framework urn="urn:cisecurity.org:controls:7.0">
                     <controls:safeguard title="Enforce Detail Logging for Access or Changes to Sensitive Data" urn="urn:cisecurity.org:controls:7.0:14:9">
                        <controls:implementation_groups ig3="true"/>
                        <controls:asset_type>Data</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
               </controls:cis_controls>
            </xccdf:metadata>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>
As well as auditing the normal Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with             <xhtml:span class="inline_block">root</xhtml:span>
 privileges and its behavior depends on some key files and directories.             <xhtml:span class="inline_block">/etc/docker/daemon.json</xhtml:span>
 is one such file. This holds various parameters for the Docker daemon, and as such it should be audited.          </xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/9" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
            <xccdf:ident system="URL">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/system_design_guide/auditing-the-system_system-design-guide</xccdf:ident>
            <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>
You should add a rule for the                 <xhtml:span class="inline_block">/etc/docker/daemon.json</xhtml:span>
 file.              </xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:p>
Add the line below to the                 <xhtml:span class="inline_block">/etc/audit/audit.rules</xhtml:span>
 file:              </xhtml:p>
                     <xhtml:code class="code_block">-w /etc/docker/daemon.json -k docker 
</xhtml:code>
                     <xhtml:p>Then restart the audit daemon.</xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:code class="code_block">systemctl restart auditd
</xhtml:code>
                     <xhtml:p class="bold">Impact:</xhtml:p>
                     <xhtml:p>
                        <xhtml:p>Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.</xhtml:p>
                     </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808436" value-id="xccdf_org.cisecurity.benchmarks_value_4808436_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808436"/>
               </check>
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808437" value-id="xccdf_org.cisecurity.benchmarks_value_4808437_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808437"/>
               </check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1.12_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_etccontainerdconfig.toml" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure auditing is configured for Docker files and directories - /etc/containerd/config.toml</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>
Audit             <xhtml:span class="inline_block">/etc/containerd/config.toml</xhtml:span>
 if applicable          </xhtml:p>
            </xccdf:description>
            <xccdf:metadata>
               <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
                  <controls:framework urn="urn:cisecurity.org:controls:8.0">
                     <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                        <controls:implementation_groups ig2="true" ig3="true"/>
                        <controls:asset_type>Network</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
                  <controls:framework urn="urn:cisecurity.org:controls:7.0">
                     <controls:safeguard title="Enforce Detail Logging for Access or Changes to Sensitive Data" urn="urn:cisecurity.org:controls:7.0:14:9">
                        <controls:implementation_groups ig3="true"/>
                        <controls:asset_type>Data</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
               </controls:cis_controls>
            </xccdf:metadata>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>
As well as auditing the normal Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges it is very important to audit its activities and usage. Its behavior depends on some key files and directories and             <xhtml:span class="inline_block">/etc/containerd/config.toml</xhtml:span>
 is one such file as it contains various parameters.  If present, it is important that it is audited.          </xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/9" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
            <xccdf:ident system="URL">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/system_design_guide/auditing-the-system_system-design-guide</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>
You should add a rule for                 <xhtml:span class="inline_block">/etc/containerd/config.toml</xhtml:span>
 file.              </xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:p>
Add the line below to the                 <xhtml:span class="inline_block">/etc/audit/audit.rules</xhtml:span>
 file:              </xhtml:p>
                     <xhtml:code class="code_block">-w /etc/containerd/config.toml -k docker 
</xhtml:code>
                     <xhtml:p>Then restart the audit daemon.</xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:code class="code_block">systemctl restart auditd
</xhtml:code>
                     <xhtml:p class="bold">Impact:</xhtml:p>
                     <xhtml:p>
                        <xhtml:p>Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.</xhtml:p>
                     </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="OR">
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808438" value-id="xccdf_org.cisecurity.benchmarks_value_4808438_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808438"/>
               </check>
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808439" value-id="xccdf_org.cisecurity.benchmarks_value_4808439_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808439"/>
               </check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1.13_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_etcsysconfigdocker" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure auditing is configured for Docker files and directories - /etc/sysconfig/docker</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>
Audit             <xhtml:span class="inline_block">/etc/sysconfig/docker</xhtml:span>
 if applicable          </xhtml:p>
            </xccdf:description>
            <xccdf:metadata>
               <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
                  <controls:framework urn="urn:cisecurity.org:controls:8.0">
                     <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                        <controls:implementation_groups ig2="true" ig3="true"/>
                        <controls:asset_type>Network</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
                  <controls:framework urn="urn:cisecurity.org:controls:7.0">
                     <controls:safeguard title="Enforce Detail Logging for Access or Changes to Sensitive Data" urn="urn:cisecurity.org:controls:7.0:14:9">
                        <controls:implementation_groups ig3="true"/>
                        <controls:asset_type>Data</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
               </controls:cis_controls>
            </xccdf:metadata>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>
As well as auditing the normal Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges it is very important to audit its activities and usage. Its behavior depends on some key files and directories and             <xhtml:span class="inline_block">/etc/sysconfig/docker</xhtml:span>
 is one such file as it contains various parameters related to the Docker daemon when run on CentOS and RHEL based distributions.  If present, it is important that it is audited.          </xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/9" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
            <xccdf:ident system="URL">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/system_design_guide/auditing-the-system_system-design-guide</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>
You should add a rule for                 <xhtml:span class="inline_block">/etc/sysconfig/docker</xhtml:span>
 file.              </xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:p>
Add the line below to the                 <xhtml:span class="inline_block">/etc/audit/audit.rules</xhtml:span>
 file:              </xhtml:p>
                     <xhtml:code class="code_block">-w /etc/sysconfig/docker -k docker 
</xhtml:code>
                     <xhtml:p>Then restart the audit daemon.</xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:code class="code_block">systemctl restart auditd
</xhtml:code>
                     <xhtml:p class="bold">Impact:</xhtml:p>
                     <xhtml:p>
                        <xhtml:p>Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.</xhtml:p>
                     </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="OR">
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808440" value-id="xccdf_org.cisecurity.benchmarks_value_4808440_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808440"/>
               </check>
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808441" value-id="xccdf_org.cisecurity.benchmarks_value_4808441_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808441"/>
               </check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1.14_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_usrbincontainerd" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure auditing is configured for Docker files and directories - /usr/bin/containerd</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>
Audit             <xhtml:span class="inline_block">/usr/bin/containerd</xhtml:span>
 if applicable.          </xhtml:p>
            </xccdf:description>
            <xccdf:metadata>
               <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
                  <controls:framework urn="urn:cisecurity.org:controls:8.0">
                     <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                        <controls:implementation_groups ig2="true" ig3="true"/>
                        <controls:asset_type>Network</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
                  <controls:framework urn="urn:cisecurity.org:controls:7.0">
                     <controls:safeguard title="Enforce Detail Logging for Access or Changes to Sensitive Data" urn="urn:cisecurity.org:controls:7.0:14:9">
                        <controls:implementation_groups ig3="true"/>
                        <controls:asset_type>Data</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
               </controls:cis_controls>
            </xccdf:metadata>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>
As well as auditing the normal Linux file system and system calls, you should audit all Docker related files and directories. The Docker daemon runs with             <xhtml:span class="inline_block">root</xhtml:span>
 privileges and its behavior depends on some key files and directories.             <xhtml:span class="inline_block">/usr/bin/containerd</xhtml:span>
 is one such file and as such should be audited.          </xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/9" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
            <xccdf:ident system="URL">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/system_design_guide/auditing-the-system_system-design-guide</xccdf:ident>
            <xccdf:ident system="URL">https://containerd.io/</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>
You should add a rule for the                 <xhtml:span class="inline_block">/usr/bin/containerd</xhtml:span>
 file.              </xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:p>
Add the line below to the                 <xhtml:span class="inline_block">/etc/audit/audit.rules</xhtml:span>
 file:              </xhtml:p>
                     <xhtml:code class="code_block">-w /usr/bin/containerd -k docker 
</xhtml:code>
                     <xhtml:p>Then restart the audit daemon.</xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:code class="code_block">systemctl restart auditd
</xhtml:code>
                     <xhtml:p class="bold">Impact:</xhtml:p>
                     <xhtml:p>
                        <xhtml:p>Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.</xhtml:p>
                     </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="OR">
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808442" value-id="xccdf_org.cisecurity.benchmarks_value_4808442_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808442"/>
               </check>
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808443" value-id="xccdf_org.cisecurity.benchmarks_value_4808443_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808443"/>
               </check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1.15_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_usrbincontainerd-shim" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure auditing is configured for Docker files and directories - /usr/bin/containerd-shim</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>
Audit             <xhtml:span class="inline_block">/usr/bin/containerd-shim</xhtml:span>
 if applicable.          </xhtml:p>
            </xccdf:description>
            <xccdf:metadata>
               <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
                  <controls:framework urn="urn:cisecurity.org:controls:8.0">
                     <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                        <controls:implementation_groups ig2="true" ig3="true"/>
                        <controls:asset_type>Network</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
                  <controls:framework urn="urn:cisecurity.org:controls:7.0">
                     <controls:safeguard title="Enforce Detail Logging for Access or Changes to Sensitive Data" urn="urn:cisecurity.org:controls:7.0:14:9">
                        <controls:implementation_groups ig3="true"/>
                        <controls:asset_type>Data</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
               </controls:cis_controls>
            </xccdf:metadata>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>
As well as auditing the normal Linux file system and system calls, you should audit all Docker related files and directories. The Docker daemon runs with             <xhtml:span class="inline_block">root</xhtml:span>
 privileges and its behavior depends on some key files and directories.             <xhtml:span class="inline_block">/usr/bin/containerd-shim</xhtml:span>
 is one such file and as such should be audited.          </xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/9" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
            <xccdf:ident system="URL">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/system_design_guide/auditing-the-system_system-design-guide</xccdf:ident>
            <xccdf:ident system="URL">https://containerd.io/</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>
You should add a rule for the                 <xhtml:span class="inline_block">/usr/bin/containerd-shim</xhtml:span>
 file.              </xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:p>
Add the line below to the                 <xhtml:span class="inline_block">/etc/audit/rules.d/audit.rules</xhtml:span>
 file:              </xhtml:p>
                     <xhtml:code class="code_block">-w /usr/bin/containerd-shim -k docker 
</xhtml:code>
                     <xhtml:p>Then restart the audit daemon.</xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:code class="code_block">systemctl restart auditd
</xhtml:code>
                     <xhtml:p class="bold">Impact:</xhtml:p>
                     <xhtml:p>
                        <xhtml:p>Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.</xhtml:p>
                     </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="OR">
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808444" value-id="xccdf_org.cisecurity.benchmarks_value_4808444_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808444"/>
               </check>
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808445" value-id="xccdf_org.cisecurity.benchmarks_value_4808445_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808445"/>
               </check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1.16_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_usrbincontainerd-shim-runc-v1" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Ensure auditing is configured for Docker files and directories - /usr/bin/containerd-shim-runc-v1</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>
Audit             <xhtml:span class="inline_block">/usr/bin/containerd-shim-runc-v1</xhtml:span>
 if applicable.          </xhtml:p>
            </xccdf:description>
            <xccdf:metadata>
               <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
                  <controls:framework urn="urn:cisecurity.org:controls:8.0">
                     <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                        <controls:implementation_groups ig2="true" ig3="true"/>
                        <controls:asset_type>Network</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
                  <controls:framework urn="urn:cisecurity.org:controls:7.0">
                     <controls:safeguard title="Enforce Detail Logging for Access or Changes to Sensitive Data" urn="urn:cisecurity.org:controls:7.0:14:9">
                        <controls:implementation_groups ig3="true"/>
                        <controls:asset_type>Data</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
               </controls:cis_controls>
            </xccdf:metadata>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>
As well as auditing the normal Linux file system and system calls, you should audit all Docker related files and directories. The Docker daemon runs with             <xhtml:span class="inline_block">root</xhtml:span>
 privileges and its behavior depends on some key files and directories.             <xhtml:span class="inline_block">/usr/bin/containerd-shim-runc-v1</xhtml:span>
 is one such file and as such should be audited.          </xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/9" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
            <xccdf:ident system="URL">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/system_design_guide/auditing-the-system_system-design-guide</xccdf:ident>
            <xccdf:ident system="URL">https://containerd.io/</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>
You should add a rule for the                 <xhtml:span class="inline_block">/usr/bin/containerd-shim-runc-v1</xhtml:span>
 file.              </xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:p>
Add the line below to the                 <xhtml:span class="inline_block">/etc/audit/audit.rules</xhtml:span>
 file:              </xhtml:p>
                     <xhtml:code class="code_block">-w /usr/bin/containerd-shim-runc-v1 -k docker 
</xhtml:code>
                     <xhtml:p>Then restart the audit daemon.</xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:code class="code_block">systemctl restart auditd
</xhtml:code>
                     <xhtml:p class="bold">Impact:</xhtml:p>
                     <xhtml:p>
                        <xhtml:p>Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.</xhtml:p>
                     </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808446" value-id="xccdf_org.cisecurity.benchmarks_value_4808446_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808446"/>
               </check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1.17_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_usrbincontainerd-shim-runc-v2" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure auditing is configured for Docker files and directories - /usr/bin/containerd-shim-runc-v2</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>
Audit             <xhtml:span class="inline_block">/usr/bin/containerd-shim-runc-v2</xhtml:span>
 if applicable.          </xhtml:p>
            </xccdf:description>
            <xccdf:metadata>
               <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
                  <controls:framework urn="urn:cisecurity.org:controls:8.0">
                     <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                        <controls:implementation_groups ig2="true" ig3="true"/>
                        <controls:asset_type>Network</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
                  <controls:framework urn="urn:cisecurity.org:controls:7.0">
                     <controls:safeguard title="Enforce Detail Logging for Access or Changes to Sensitive Data" urn="urn:cisecurity.org:controls:7.0:14:9">
                        <controls:implementation_groups ig3="true"/>
                        <controls:asset_type>Data</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
               </controls:cis_controls>
            </xccdf:metadata>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>
As well as auditing the normal Linux file system and system calls, you should audit all Docker related files and directories. The Docker daemon runs with             <xhtml:span class="inline_block">root</xhtml:span>
 privileges and its behavior depends on some key files and directories.             <xhtml:span class="inline_block">/usr/bin/containerd-shim-runc-v2</xhtml:span>
 is one such file and as such should be audited.          </xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/9" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
            <xccdf:ident system="URL">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/system_design_guide/auditing-the-system_system-design-guide</xccdf:ident>
            <xccdf:ident system="URL">https://containerd.io/</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>
You should add a rule for the                 <xhtml:span class="inline_block">/usr/bin/containerd-shim-runc-v2</xhtml:span>
 file.              </xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:p>
Add the line below to the                 <xhtml:span class="inline_block">/etc/audit/audit.rules</xhtml:span>
 file:              </xhtml:p>
                     <xhtml:code class="code_block">-w /usr/bin/containerd-shim-runc-v2 -k docker 
</xhtml:code>
                     <xhtml:p>Then restart the audit daemon.</xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:code class="code_block">systemctl restart auditd
</xhtml:code>
                     <xhtml:p class="bold">Impact:</xhtml:p>
                     <xhtml:p>
                        <xhtml:p>Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.</xhtml:p>
                     </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="OR">
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808448" value-id="xccdf_org.cisecurity.benchmarks_value_4808448_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808448"/>
               </check>
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808449" value-id="xccdf_org.cisecurity.benchmarks_value_4808449_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808449"/>
               </check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1.18_Ensure_auditing_is_configured_for_Docker_files_and_directories_-_usrbinrunc" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure auditing is configured for Docker files and directories - /usr/bin/runc</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>
Audit             <xhtml:span class="inline_block">/usr/bin/runc</xhtml:span>
 if applicable          </xhtml:p>
            </xccdf:description>
            <xccdf:metadata>
               <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
                  <controls:framework urn="urn:cisecurity.org:controls:8.0">
                     <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                        <controls:implementation_groups ig2="true" ig3="true"/>
                        <controls:asset_type>Network</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
                  <controls:framework urn="urn:cisecurity.org:controls:7.0">
                     <controls:safeguard title="Enforce Detail Logging for Access or Changes to Sensitive Data" urn="urn:cisecurity.org:controls:7.0:14:9">
                        <controls:implementation_groups ig3="true"/>
                        <controls:asset_type>Data</controls:asset_type>
                        <controls:security_function>Detect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
               </controls:cis_controls>
            </xccdf:metadata>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>
As well as auditing the normal Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with             <xhtml:span class="inline_block">root</xhtml:span>
 privileges and its behavior depends on some key files and directories.             <xhtml:span class="inline_block">/usr/bin/runc</xhtml:span>
 is one such file, and as such it should be audited.          </xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/9" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
            <xccdf:ident system="URL">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/system_design_guide/auditing-the-system_system-design-guide</xccdf:ident>
            <xccdf:ident system="URL">https://containerd.io</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>
You should add a rule for                 <xhtml:span class="inline_block">/usr/bin/runc</xhtml:span>
 file.              </xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:p>
Add the line below to the                 <xhtml:span class="inline_block">/etc/audit/audit.rules</xhtml:span>
 file:              </xhtml:p>
                     <xhtml:code class="code_block">-w /usr/bin/runc -k docker 
</xhtml:code>
                     <xhtml:p>Then restart the audit daemon.</xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:code class="code_block">systemctl restart auditd
</xhtml:code>
                     <xhtml:p class="bold">Impact:</xhtml:p>
                     <xhtml:p>
                        <xhtml:p>Auditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.</xhtml:p>
                     </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="OR">
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808450" value-id="xccdf_org.cisecurity.benchmarks_value_4808450_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808450"/>
               </check>
               <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                  <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808451" value-id="xccdf_org.cisecurity.benchmarks_value_4808451_var"/>
                  <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808451"/>
               </check>
            </xccdf:complex-check>
         </xccdf:Rule>
      </xccdf:Group>
      <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_1.2_General_Configuration">
         <xccdf:title xml:lang="en">General Configuration</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>This section contains general host recommendations for systems running Docker</xhtml:p>
         </xccdf:description>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.2.1_Ensure_the_container_host_has_been_Hardened" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Ensure the container host has been Hardened</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>A container host is able to run one or more containers. It is of utmost importance to harden the host to mitigate host security misconfiguration.</xhtml:p>
            </xccdf:description>
            <xccdf:metadata>
               <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
                  <controls:framework urn="urn:cisecurity.org:controls:8.0">
                     <controls:safeguard title="Use Standard Hardening Configuration Templates for Application Infrastructure" urn="urn:cisecurity.org:controls:8.0:16:7">
                        <controls:implementation_groups ig2="true" ig3="true"/>
                        <controls:asset_type>Applications</controls:asset_type>
                        <controls:security_function>Protect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
                  <controls:framework urn="urn:cisecurity.org:controls:7.0">
                     <controls:control title="Secure Configuration for Hardware and Software on Mobile Devices, Laptops, Workstations and Servers" urn="urn:cisecurity.org:controls:7.0:5"/>
                  </controls:framework>
               </controls:cis_controls>
            </xccdf:metadata>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>You should follow infrastructure security best practices and harden your host OS. Keeping the host system hardened will ensure that host vulnerabilities are mitigated. Not hardening the host system could lead to security exposures and breaches.</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16/subcontrol/7" system="http://cisecurity.org/20-cc/v8.0"/>
            <xccdf:ident system="URL">https://docs.docker.com/engine/security/</xccdf:ident>
            <xccdf:ident system="URL">https://www.cisecurity.org/cis-benchmarks/</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>You may consider various CIS Security Benchmarks for your container host. If you have other security guidelines or regulatory requirements to adhere to, please follow them as suitable in your environment.</xhtml:p>
                     <xhtml:p class="bold">Impact:</xhtml:p>
                     <xhtml:p>
                        <xhtml:p>None.</xhtml:p>
                     </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.2.2_Ensure_that_the_version_of_Docker_is_up_to_date" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Ensure that the version of Docker is up to date</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>Frequent releases for Docker are issued which address security vulnerabilities, resolve product bugs and bring in new functionality. You should keep a tab on these product updates and upgrade as frequently as possible in line with the general IT security policy of your organization.</xhtml:p>
            </xccdf:description>
            <xccdf:metadata>
               <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
                  <controls:framework urn="urn:cisecurity.org:controls:8.0">
                     <controls:safeguard title="Use Up-to-Date and Trusted Third-Party Software Components" urn="urn:cisecurity.org:controls:8.0:16:5">
                        <controls:implementation_groups ig2="true" ig3="true"/>
                        <controls:asset_type>Applications</controls:asset_type>
                        <controls:security_function>Protect</controls:security_function>
                     </controls:safeguard>
                  </controls:framework>
                  <controls:framework urn="urn:cisecurity.org:controls:7.0">
                     <controls:control title="Continuous Vulnerability Management" urn="urn:cisecurity.org:controls:7.0:3"/>
                  </controls:framework>
               </controls:cis_controls>
            </xccdf:metadata>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>By staying up to date on Docker updates, vulnerabilities in the software can be mitigated. An experienced attacker may be able to exploit known vulnerabilities resulting in them being able to attain inappropriate access or to elevate their privileges. If you do not ensure that Docker is running at the most current release consistent with the requirements of of your application, you may introduce unwanted behaviour and it is therefore important to ensure that you monitor software versions and upgrade in a timely fashion.</xhtml:p>
            </xccdf:rationale>
            <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/3" system="http://cisecurity.org/20-cc/v7.0"/>
            <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
            <xccdf:ident system="URL">https://docs.docker.com/engine/install/</xccdf:ident>
            <xccdf:ident system="URL">https://docs.docker.com/engine/release-notes/</xccdf:ident>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>You should monitor versions of Docker releases and make sure your software is updated as required.</xhtml:p>
                     <xhtml:p class="bold">Impact:</xhtml:p>
                     <xhtml:p>
                        <xhtml:p>You should perform a risk assessment regarding Docker version updates and review how they may impact your operations.  You should be aware that third-party products that use Docker may require older major versions of Docker to be supported, and this should be reviewed in line with the general IT security policy of your organization, particularly where security vulnerabilities in older versions have been publicly disclosed.</xhtml:p>
                     </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
         </xccdf:Rule>
      </xccdf:Group>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_2_Docker_daemon_configuration">
      <xccdf:title xml:lang="en">Docker daemon configuration</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>This section lists the recommendations that alter and secure the behavior of the Docker daemon. The settings that are under this section affect ALL container instances.</xhtml:p>
         <xhtml:p>
Note: Docker daemon options, when running in the default rootful mode, can also be controlled using files such as         <xhtml:span class="inline_block">/etc/sysconfig/docker</xhtml:span>
,         <xhtml:span class="inline_block">/etc/default/docker</xhtml:span>
, the         <xhtml:span class="inline_block">systemd</xhtml:span>
 unit file or         <xhtml:span class="inline_block">/etc/docker/daemon.json</xhtml:span>
. Also, note that Docker in daemon mode can be identified as         <xhtml:span class="inline_block">/usr/bin/dockerd</xhtml:span>
, or having         <xhtml:span class="inline_block">-d</xhtml:span>
 or         <xhtml:span class="inline_block">daemon</xhtml:span>
 as the argument to         <xhtml:span class="inline_block">docker</xhtml:span>
 service.      </xhtml:p>
         <xhtml:p>Note: When running in rootless mode does change all configuration file locations and has some known limitations regarding e.g privileged TCP/UDP ports and specific prerequisites depending on which distribution that is used.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.1_Run_the_Docker_daemon_as_a_non-root_user_if_possible" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Run the Docker daemon as a non-root user, if possible</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Rootless mode executes the Docker daemon and containers inside a user namespace, with both the daemon and the container are running without root privileges.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Establish and Maintain a Secure Configuration Process" urn="urn:cisecurity.org:controls:8.0:4:1">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Rootless mode allows running the Docker daemon and containers as a non-root user to mitigate potential vulnerabilities in the daemon and the container runtime.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4/subcontrol/1" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/security/rootless/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Follow the current Docker documentation on how to install the Docker daemon as a non-root user.</xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>There are multiple prerequisites depending on which distribution that is in use, and also known limitations regarding networking and resource limitation.</xhtml:p>
                     <xhtml:p>Running in rootless mode also changes the location of any configuration files in use, including all containers using the daemon.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.2_Ensure_network_traffic_is_restricted_between_containers_on_the_default_bridge" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure network traffic is restricted between containers on the default bridge</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>By default, all network traffic is allowed between containers on the same host on the default network bridge. If not desired, restrict all inter-container communication. Link specific containers together that require communication. Alternatively, you can create custom network and only join containers that need to communicate to that custom network.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Securely Manage Network Infrastructure" urn="urn:cisecurity.org:controls:8.0:12:3">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Limitation and Control of Network Ports, Protocols, and Services" urn="urn:cisecurity.org:controls:7.0:9"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>By default, unrestricted network traffic is enabled between all containers on the same host on the default network bridge. Thus, each container has the potential of reading all packets across the container network on the same host. This might lead to an unintended and unwanted disclosure of information to other containers. Hence, restrict inter-container communication on the default network bridge.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/9" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/12/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/network/</xccdf:ident>
         <xccdf:ident system="URL">https://github.com/docker/cli/blob/v20.10.1/man/dockerd.8.md</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Edit the Docker daemon configuration file to ensure that icc is disabled. It should include the following setting</xhtml:p>
                  <xhtml:code class="code_block">"icc": false
</xhtml:code>
                  <xhtml:p>
Alernatively, run the docker daemon directly and pass               <xhtml:span class="inline_block">--icc=false</xhtml:span>
 as an argument.            </xhtml:p>
                  <xhtml:p>For Example,</xhtml:p>
                  <xhtml:code class="code_block">dockerd --icc=false
</xhtml:code>
                  <xhtml:p>
Alternatively, you can follow the Docker documentation and create a custom network and only join containers that need to communicate to that custom network. The               <xhtml:span class="inline_block">--icc</xhtml:span>
 parameter only applies to the default docker bridge, if custom networks are used then the approach of segmenting networks should be adopted instead.            </xhtml:p>
                  <xhtml:p>
In order for this control to be fully effective, all containers connected to the               <xhtml:span class="inline_block">docker0</xhtml:span>
 bridge should drop the               <xhtml:span class="inline_block">NET_RAW</xhtml:span>
 capability, otherwise a compromised container could use raw ethernet packets to communicate with other containers despite this restriction.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>Inter-container communication would be disabled on the default network bridge. If any communication between containers on the same host is desired, then it needs to be explicitly defined using container linking or alternatively custom networks have to be defined.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.3_Ensure_the_logging_level_is_set_to_info" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure the logging level is set to 'info'</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
Set Docker daemon log level to           <xhtml:span class="inline_block">info</xhtml:span>
.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Collect Detailed Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:5">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Detect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Activate audit logging" urn="urn:cisecurity.org:controls:7.0:6:2">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Detect</controls:security_function>
                  </controls:safeguard>
                  <controls:safeguard title="Enable Detailed Logging" urn="urn:cisecurity.org:controls:7.0:6:3">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Detect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
Setting up an appropriate log level, configures the Docker daemon to log events that you would want to review later. A base log level of           <xhtml:span class="inline_block">info</xhtml:span>
 and above would capture all logs except debug logs. Until and unless required, you should not run Docker daemon at           <xhtml:span class="inline_block">debug</xhtml:span>
 log level.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/dockerd/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Ensure that the Docker daemon configuration file has the following configuration included</xhtml:p>
                  <xhtml:code class="code_block">"log-level": "info"
</xhtml:code>
                  <xhtml:p>Alternatively, run the Docker daemon as below:</xhtml:p>
                  <xhtml:code class="code_block">dockerd --log-level="info"
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.4_Ensure_Docker_is_allowed_to_make_changes_to_iptables" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure Docker is allowed to make changes to iptables</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
The iptables firewall is used to set up, maintain, and inspect the tables of IP packet filter rules within the Linux kernel.  The Docker daemon should be allowed to make changes to the           <xhtml:span class="inline_block">iptables</xhtml:span>
 ruleset.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Establish and Maintain a Secure Network Architecture" urn="urn:cisecurity.org:controls:8.0:12:2">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
Docker will never make changes to your system           <xhtml:span class="inline_block">iptables </xhtml:span>
 rules unless you allow it to do so. If you do allow this, Docker server will automatically make any required changes. We recommended letting Docker make changes to           <xhtml:span class="inline_block">iptables </xhtml:span>
automatically in order to avoid networking misconfigurations that could affect the communication between containers and with the outside world. Additionally, this reduces the administrative overhead of updating           <xhtml:span class="inline_block">iptables </xhtml:span>
every time you add containers or modify networking options.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/12/subcontrol/2" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/dockerd/</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/network/iptables/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
Do not run the Docker daemon with               <xhtml:span class="inline_block">--iptables=false</xhtml:span>
 parameter. For example, do not start the Docker daemon as below:            </xhtml:p>
                  <xhtml:code class="code_block">dockerd --iptables=false
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>The Docker daemon service requires iptables rules to be enabled before it starts.  Any restarts of iptables during Docker daemon operation may result in losing Docker created rules.  Adding iptables-persistent to your iptables install can assist with mitigation of this impact.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.5_Ensure_insecure_registries_are_not_used" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure insecure registries are not used</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Docker considers a private registry either secure or insecure. By default, registries are considered secure.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Allowlist Authorized Software" urn="urn:cisecurity.org:controls:8.0:2:5">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Encrypt All Sensitive Information in Transit" urn="urn:cisecurity.org:controls:7.0:14:4">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
A secure registry uses TLS. A copy of registry's CA certificate is placed on the Docker host at           <xhtml:span class="inline_block">/etc/docker/certs.d/&lt;registry-name&gt;/</xhtml:span>
 directory. An insecure registry is one which does not have a valid registry certificate, or one not using TLS. Insecure registries should not be used as they present a risk of traffic interception and modification.        </xhtml:p>
            <xhtml:p>
Additionally, once a registry has been marked as insecure commands such as           <xhtml:span class="inline_block">docker pull</xhtml:span>
,           <xhtml:span class="inline_block">docker push</xhtml:span>
, and           <xhtml:span class="inline_block">docker search</xhtml:span>
 will not result in an error message and users may indefinitely be working with this type of insecure registry without ever being notified of the risk of potential compromise.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/2/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/registry/insecure/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should ensure that no insecure registries are in use.</xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.6_Ensure_aufs_storage_driver_is_not_used" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure aufs storage driver is not used</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
Do not use           <xhtml:span class="inline_block">aufs</xhtml:span>
 as the storage driver for your Docker instance.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:control title="Application Software Security" urn="urn:cisecurity.org:controls:8.0:16"/>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Application Software Security" urn="urn:cisecurity.org:controls:7.0:18"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The           <xhtml:span class="inline_block">aufs</xhtml:span>
 storage driver is the oldest storage driver used on Linux systems. It is based on a Linux kernel patch-set that is unlikely in future to be merged into the main OS kernel. The           <xhtml:span class="inline_block">aufs</xhtml:span>
 driver is also known to cause some serious kernel crashes.           <xhtml:span class="inline_block">aufs</xhtml:span>
 only has legacy support within systems using Docker.        </xhtml:p>
            <xhtml:p>
Most importantly,           <xhtml:span class="inline_block">aufs</xhtml:span>
 is not a supported driver in many Linux distributions using latest Linux kernels and has also been deprecated with Docker Engine release 20.10.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/storage/storagedriver/select-storage-driver/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
Do not explicitly use               <xhtml:span class="inline_block">aufs</xhtml:span>
 as storage driver.            </xhtml:p>
                  <xhtml:p>For example, do not start Docker daemon as below:</xhtml:p>
                  <xhtml:code class="code_block">dockerd --storage-driver aufs
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>
                        <xhtml:span class="inline_block">aufs</xhtml:span>
 is the only storage driver that allows containers to share executable and shared library memory. It might be useful if you are running thousands of containers with the same program or libraries, however its use should be reviewed in line with your organization's security policy.              </xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.7_Ensure_TLS_authentication_for_Docker_daemon_is_configured" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure TLS authentication for Docker daemon is configured</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>It is possible to make the Docker daemon available remotely over a TCP port. If this is required, you should ensure that TLS authentication is configured in order to restrict access to the Docker daemon via IP address and port.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Manage Access Control for Remote Assets" urn="urn:cisecurity.org:controls:8.0:13:5">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Devices</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Ensure Only Approved Ports, Protocols and Services Are Running" urn="urn:cisecurity.org:controls:7.0:9:2">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Devices</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
By default, the Docker daemon binds to a non-networked Unix socket and runs with           <xhtml:span class="inline_block">root</xhtml:span>
 privileges. If you change the default Docker daemon binding to a TCP port or any other Unix socket, anyone with access to that port or socket could have full access to the Docker daemon and therefore in turn to the host system. For this reason, you should not bind the Docker daemon to another IP/port or a Unix socket.        </xhtml:p>
            <xhtml:p>If you must expose the Docker daemon via a network socket, you should configure TLS authentication for the daemon and for any Docker Swarm APIs (if they are in use). This type of configuration restricts the connections to your Docker daemon over the network to a limited number of clients who have access to the TLS client credentials.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/9/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/13/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/security/https/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Follow the steps mentioned in the Docker documentation or other references.</xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>You would need to manage and guard certificates and keys for the Docker daemon and Docker clients.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.8_Ensure_the_default_ulimit_is_configured_appropriately" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure the default ulimit is configured appropriately</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Set the default ulimit options as appropriate in your environment.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Use Standard Hardening Configuration Templates for Application Infrastructure" urn="urn:cisecurity.org:controls:8.0:16:7">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Application Software Security" urn="urn:cisecurity.org:controls:7.0:18"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
               <xhtml:span class="inline_block">ulimit</xhtml:span>
 provides control over the resources available to the shell and to processes which it starts. Setting system resource limits judiciously can save you from disasters such as a fork bomb. On occasion, even friendly users and legitimate processes can overuse system resources and can make the system unusable.        </xhtml:p>
            <xhtml:p>Setting the default ulimit for the Docker daemon enforces the ulimit for all container instances. In this case you would not need to setup ulimit for each container instance. However, the default ulimit can be overridden during container runtime, if needed. Therefore, in order to have proper control over system resources, define a default ulimit as is  needed in your environment.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16/subcontrol/7" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/dockerd/#default-ulimit-settings</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
Run Docker in daemon mode and pass               <xhtml:span class="inline_block">--default-ulimit</xhtml:span>
 as argument with respective ulimits as appropriate in your environment and in line with your security policy.            </xhtml:p>
                  <xhtml:p>For Example,</xhtml:p>
                  <xhtml:code class="code_block">dockerd --default-ulimit nproc=1024:2048 --default-ulimit nofile=100:200
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>If ulimits are set incorrectly this could cause issues with system resources, possibly causing a denial of service condition.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.9_Enable_user_namespace_support" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Enable user namespace support</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>You should enable user namespace support in Docker daemon to utilize container user to host user re-mapping. This recommendation is beneficial where the containers you are using do not have an explicit container user defined in the container image. If the container images that you are using have a pre-defined non-root user, this recommendation may be skipped as this feature is still in its infancy, and might result in unpredictable issues or difficulty in configuration.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:control title="Access Control Management" urn="urn:cisecurity.org:controls:8.0:6"/>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Application Software Security" urn="urn:cisecurity.org:controls:7.0:18"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The Linux kernel "user namespace" support within the Docker daemon provides additional security for the Docker host system. It allows a container to have a unique range of user and group IDs which are outside the traditional user and group range utilized by the host system.</xhtml:p>
            <xhtml:p>For example, the root user can have the expected administrative privileges inside the container but can effectively be mapped to an unprivileged UID on the host system.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/6" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://man7.org/linux/man-pages/man7/user_namespaces.7.html</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-user-namespace-options</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Please consult the Docker documentation for various ways in which this can be configured depending upon your requirements. Your steps might also vary based on platform - For example, on Red Hat, sub-UIDs and sub-GIDs mapping creation do not work automatically. You might have to create your own mapping.</xhtml:p>
                  <xhtml:p>The high-level steps are as below:</xhtml:p>
                  <xhtml:p>
                     <xhtml:strong>Step 1:</xhtml:strong>
 Ensure that the files               <xhtml:span class="inline_block">/etc/subuid</xhtml:span>
 and               <xhtml:span class="inline_block">/etc/subgid</xhtml:span>
 exist.            </xhtml:p>
                  <xhtml:code class="code_block">touch /etc/subuid /etc/subgid 
</xhtml:code>
                  <xhtml:p>
                     <xhtml:strong>Step 2:</xhtml:strong>
 Start the docker daemon with               <xhtml:span class="inline_block">--userns-remap</xhtml:span>
 flag            </xhtml:p>
                  <xhtml:code class="code_block">dockerd --userns-remap=default
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>User namespace remapping is incompatible with a number of Docker features and also currently breaks some of its functionalities. Reference the Docker documentation and included links for details.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.10_Ensure_the_default_cgroup_usage_has_been_confirmed" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure the default cgroup usage has been confirmed</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
The           <xhtml:span class="inline_block">--cgroup-parent</xhtml:span>
 option allows you to set the default cgroup parent to use for all containers. If there is no specific usage requirement for this, the setting should be left at its default.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:control title="Access Control Management" urn="urn:cisecurity.org:controls:8.0:6"/>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Application Software Security" urn="urn:cisecurity.org:controls:7.0:18"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
System administrators typically define cgroups under which containers are supposed to run. Even if cgroups are not explicitly defined by the system administrators, containers run under           <xhtml:span class="inline_block">docker</xhtml:span>
 cgroup by default.        </xhtml:p>
            <xhtml:p>It is possible to attach to a different cgroup other than the one which is the default, however this type of usage should be monitored and confirmed because attaching to a different cgroup other than the one that is a default, it could be possible to share resources unevenly causing resource utilization problems on the host.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/6" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/dockerd/#default-cgroup-parent</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
The default setting is in line with good security practice and can be left in situ. If you wish to specifically set a non-default cgroup, pass the               <xhtml:span class="inline_block">--cgroup-parent</xhtml:span>
 parameter to the Docker daemon when starting it.            </xhtml:p>
                  <xhtml:p>For example,</xhtml:p>
                  <xhtml:code class="code_block">dockerd --cgroup-parent=/foobar
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.11_Ensure_base_device_size_is_not_changed_until_needed" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure base device size is not changed until needed</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Under certain circumstances, you might need containers larger than 10G. Where this applies you should carefully choose the base device size.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Use Standard Hardening Configuration Templates for Application Infrastructure" urn="urn:cisecurity.org:controls:8.0:16:7">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Application Software Security" urn="urn:cisecurity.org:controls:7.0:18"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The base device size can be increased on daemon restart. Increasing the base device size allows all future images and containers to be of the new base device size. A user can use this option to expand the base device size, however shrinking is not permitted. This value affects the system wide “base” empty filesystem that may already be initialized and therefore inherited by pulled images.</xhtml:p>
            <xhtml:p>Although the file system does not allocate the increased size as long as it is empty, more space will be allocated for extra images. This may cause a denial of service condition if the allocated partition becomes full.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16/subcontrol/7" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/dockerd/#storage-driver-options</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
Do not set               <xhtml:span class="inline_block">--storage-opt dm.basesize</xhtml:span>
 until needed.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.12_Ensure_that_authorization_for_Docker_client_commands_is_enabled" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that authorization for Docker client commands is enabled</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>You should use native Docker authorization plugins or a third party authorization mechanism with the Docker daemon to manage access to Docker client commands.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:control title="Access Control Management" urn="urn:cisecurity.org:controls:8.0:6"/>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Account Monitoring and Control" urn="urn:cisecurity.org:controls:7.0:16"/>
               </controls:framework>
            </controls:cis_controls>
            <notes:notes xml:lang="en">
               <xhtml:p>It should be noted that the native Docker authentication plugin is only one method of enforcing this control so other methods which could potentially be in use should be reviewed before assessing this as a pass or fail in an audit.</xhtml:p>
            </notes:notes>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Docker’s out-of-the-box authorization model is currently "all or nothing".  This means that any user with permission to access the Docker daemon can run any Docker client command. The same is true for remote users accessing Docker’s API to contact the daemon. If you require greater access control, you can create authorization plugins and add them to your Docker daemon configuration. Using an authorization plugin, a Docker administrator can configure granular access policies for managing access to the Docker daemon.</xhtml:p>
            <xhtml:p>Third party integrations of Docker may implement their own authorization models to require authorization with the Docker daemon outside of docker's native authorization plugin (i.e. Kubernetes, Cloud Foundry, Openshift).</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/16" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/6" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/dockerd/#access-authorization</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/extend/plugins_authorization/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
                     <xhtml:strong>Step 1</xhtml:strong>
: Install/Create an authorization plugin.            </xhtml:p>
                  <xhtml:p>
                     <xhtml:strong>Step 2</xhtml:strong>
: Configure the authorization policy as desired.            </xhtml:p>
                  <xhtml:p>
                     <xhtml:strong>Step 3</xhtml:strong>
: Start the docker daemon as below:            </xhtml:p>
                  <xhtml:code class="code_block">dockerd --authorization-plugin=&lt;PLUGIN_ID&gt;
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>Each Docker command needs to pass through the authorization plugin mechanism. This may have a performance impact.</xhtml:p>
                     <xhtml:p>It may be possible to use alternative mechanisms that do not have this performance hit.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.13_Ensure_centralized_and_remote_logging_is_configured" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure centralized and remote logging is configured</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Docker supports various logging mechanisms. A preferable method for storing logs is one that supports centralized and remote management.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Establish and Maintain an Audit Log Management Process" urn="urn:cisecurity.org:controls:8.0:8:1">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
                  <controls:safeguard title="Centralize Audit Logs" urn="urn:cisecurity.org:controls:8.0:8:9">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Detect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Deploy SIEM or Log Analytic tool" urn="urn:cisecurity.org:controls:7.0:6:6">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Detect</controls:security_function>
                  </controls:safeguard>
                  <controls:safeguard title="Regularly Tune SIEM" urn="urn:cisecurity.org:controls:7.0:6:8">
                     <controls:implementation_groups ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Detect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Centralized and remote logging ensures that all important log records are safe even in the event of a major data availability issue . Docker supports various logging methods and you should use the one that best corresponds to your IT security policy.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/6/subcontrol/8" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/9" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/8/subcontrol/1" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/config/containers/logging/configure/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
                     <xhtml:strong>Step 1</xhtml:strong>
: Set up the desired log driver following its documentation.            </xhtml:p>
                  <xhtml:p>
                     <xhtml:strong>Step 2</xhtml:strong>
: Start the docker daemon using that logging driver.            </xhtml:p>
                  <xhtml:p>For example:</xhtml:p>
                  <xhtml:code class="code_block">dockerd --log-driver=syslog --log-opt syslog-address=tcp://192.xxx.xxx.xxx
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.14_Ensure_containers_are_restricted_from_acquiring_new_privileges" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure containers are restricted from acquiring new privileges</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>By default you should restrict containers from acquiring additional privileges via suid or sgid.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Establish an Access Granting Process" urn="urn:cisecurity.org:controls:8.0:6:1">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
A process can set the           <xhtml:span class="inline_block">no_new_priv</xhtml:span>
 bit in the kernel and this persists across forks, clones and execve. The           <xhtml:span class="inline_block">no_new_priv</xhtml:span>
 bit ensures that the process and its child processes do not gain any additional privileges via suid or sgid bits. This reduces the security risks associated with many dangerous operations because there is a much reduced ability to subvert privileged binaries.        </xhtml:p>
            <xhtml:p>Setting this at the daemon level ensures that by default all new containers are restricted from acquiring new privileges.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/6/subcontrol/1" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/dockerd/</xccdf:ident>
         <xccdf:ident system="URL">https://github.com/moby/moby/pull/20727</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should run the Docker daemon as below:</xhtml:p>
                  <xhtml:code class="code_block">dockerd --no-new-privileges
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>
                        <xhtml:span class="inline_block">no_new_priv</xhtml:span>
 prevents LSMs such as SELinux from escalating the privileges of individual containers.              </xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.15_Ensure_live_restore_is_enabled" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure live restore is enabled</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
The           <xhtml:span class="inline_block">--live-restore</xhtml:span>
 option enables full support of daemon-less containers within Docker. It ensures that Docker does not stop containers on shutdown or restore and that it properly reconnects to the container when restarted.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Apply Secure Design Principles in Application Architectures" urn="urn:cisecurity.org:controls:8.0:16:10">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Application Software Security" urn="urn:cisecurity.org:controls:7.0:18"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
One of the important security triads is availability. Setting the           <xhtml:span class="inline_block">--live-restore</xhtml:span>
 flag within the Docker daemon ensures that container execution is not interrupted when it is not available. This also makes it easier to update and patch the Docker daemon without application downtime.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16/subcontrol/10" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/config/containers/live-restore/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
Run Docker in daemon mode and pass               <xhtml:span class="inline_block">--live-restore</xhtml:span>
 to it as an argument.            </xhtml:p>
                  <xhtml:p>For Example,</xhtml:p>
                  <xhtml:code class="code_block">dockerd --live-restore
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.16_Ensure_Userland_Proxy_is_Disabled" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure Userland Proxy is Disabled</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The Docker daemon starts a userland proxy service for port forwarding whenever a port is exposed. Where hairpin NAT is available, this service is generally superfluous to requirements and can be disabled.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Uninstall or Disable Unnecessary Services on Enterprise Assets and Software" urn="urn:cisecurity.org:controls:8.0:4:8">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Devices</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Ensure Only Approved Ports, Protocols and Services Are Running" urn="urn:cisecurity.org:controls:7.0:9:2">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Devices</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The Docker engine provides two mechanisms for forwarding ports from the host to containers, hairpin NAT, and the use of a userland proxy. In most circumstances, the hairpin NAT mode is preferred as it improves performance and makes use of native Linux iptables functionality instead of using an additional component.</xhtml:p>
            <xhtml:p>Where hairpin NAT is available, the userland proxy should be disabled on startup to reduce the attack surface of the installation.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/9/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4/subcontrol/8" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">http://windsock.io/the-docker-proxy/</xccdf:ident>
         <xccdf:ident system="URL">https://github.com/docker/docker/issues/14856</xccdf:ident>
         <xccdf:ident system="URL">https://github.com/docker/docker/issues/22741</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/config/containers/container-networking/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should run the Docker daemon as below:</xhtml:p>
                  <xhtml:code class="code_block">dockerd --userland-proxy=false
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>Some systems with older Linux kernels may not be able to support hairpin NAT and therefore require the userland proxy service. Also, some networking setups can be impacted by the removal of the userland proxy.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.17_Ensure_that_a_daemon-wide_custom_seccomp_profile_is_applied_if_appropriate" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that a daemon-wide custom seccomp profile is applied if appropriate</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>You can choose to apply a custom seccomp profile at a daemon-wide level if needed with this overriding Docker's default seccomp profile.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:control title="Application Software Security" urn="urn:cisecurity.org:controls:8.0:16"/>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Application Software Security" urn="urn:cisecurity.org:controls:7.0:18"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>A large number of system calls are exposed to every userland process with many of them not utilized during the entire lifetime of the process. Many applications do not need all these system calls and therefore benefit by having each system call currently in use reviewed in line with organizational security policy. A reduced set of system calls reduces the total kernel surface exposed to the application and therefore improves application security.</xhtml:p>
            <xhtml:p>A custom seccomp profile can be applied instead of Docker's default seccomp profile. Alternatively, if Docker's default profile is adequate for your environment, you can choose to ignore this recommendation.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/security/seccomp/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
By default, Docker's default seccomp profile is applied. If this is adequate for your environment, no action is necessary. Alternatively, if you choose to apply your own seccomp profile, use the               <xhtml:span class="inline_block">--seccomp-profile</xhtml:span>
 flag at daemon start or put it in the daemon runtime parameters file.            </xhtml:p>
                  <xhtml:code class="code_block">dockerd --seccomp-profile &lt;/path/to/seccomp/profile&gt;
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>A misconfigured seccomp profile could possibly interrupt your container environment. Docker-default blocked calls have been carefully scrutinized and address some critical vulnerabilities/issues within container environments (for example, kernel key ring calls). You should therefore exercise extreme care if you choose to override the default settings.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.18_Ensure_that_experimental_features_are_not_implemented_in_production" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that experimental features are not implemented in production</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Experimental features should not be enabled in production.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Uninstall or Disable Unnecessary Services on Enterprise Assets and Software" urn="urn:cisecurity.org:controls:8.0:4:8">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Devices</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Application Software Security" urn="urn:cisecurity.org:controls:7.0:18"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
"Experimental" is currently a runtime Docker daemon flag rather than being a feature of a separate build. Passing           <xhtml:span class="inline_block">--experimental</xhtml:span>
 as a runtime flag to the docker daemon activates experimental features. Whilst "Experimental" is considered a stable release, it has a number of features which may not have been fully tested and do not guarantee API stability.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4/subcontrol/8" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/dockerd/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
You should not pass               <xhtml:span class="inline_block">--experimental</xhtml:span>
 as a runtime parameter to the Docker daemon on production systems.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_3_Docker_daemon_configuration_files">
      <xccdf:title xml:lang="en">Docker daemon configuration files</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>This section covers Docker related files and directory permissions and ownership. Keeping the files and directories, that may contain sensitive parameters, secure is important for correct and secure functioning of Docker daemon.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1_Ensure_that_the_docker.service_file_ownership_is_set_to_rootroot" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure that the docker.service file ownership is set to root:root</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that the           <xhtml:span class="inline_block">docker.service</xhtml:span>
 file ownership and group ownership are correctly set to           <xhtml:span class="inline_block">root</xhtml:span>
.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Restrict Administrator Privileges to Dedicated Administrator Accounts" urn="urn:cisecurity.org:controls:8.0:5:4">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The           <xhtml:span class="inline_block">docker.service</xhtml:span>
 file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be individually and group owned by the           <xhtml:span class="inline_block">root</xhtml:span>
 user in order to ensure that it is not modified or corrupted by a less privileged user.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/config/daemon/systemd/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
                     <xhtml:strong>Step 1</xhtml:strong>
: Find out the file location:            </xhtml:p>
                  <xhtml:code class="code_block">systemctl show -p FragmentPath docker.service
</xhtml:code>
                  <xhtml:p>
                     <xhtml:strong>Step 2</xhtml:strong>
: If the file does not exist, this recommendation is not applicable. If the file does exist, you should execute the command below, including the correct file path, in order to set the ownership and group ownership for the file to               <xhtml:span class="inline_block">root</xhtml:span>
.            </xhtml:p>
                  <xhtml:p>For example,</xhtml:p>
                  <xhtml:code class="code_block">chown root:root /usr/lib/systemd/system/docker.service
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808452"/>
            </check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.2_Ensure_that_docker.service_file_permissions_are_appropriately_set" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure that docker.service file permissions are appropriately set</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that the           <xhtml:span class="inline_block">docker.service</xhtml:span>
 file permissions are either set to           <xhtml:span class="inline_block">644</xhtml:span>
 or to a more restrictive value.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Configure Data Access Control Lists" urn="urn:cisecurity.org:controls:8.0:3:3">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Protect Information through  Access Control Lists" urn="urn:cisecurity.org:controls:7.0:14:6">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The           <xhtml:span class="inline_block">docker.service</xhtml:span>
 file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore not be writable by any other user other than           <xhtml:span class="inline_block">root</xhtml:span>
 in order to ensure that it can not be modified by less privileged users.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/articles/systemd/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
                     <xhtml:strong>Step 1</xhtml:strong>
: Find out the file location:            </xhtml:p>
                  <xhtml:code class="code_block">systemctl show -p FragmentPath docker.service
</xhtml:code>
                  <xhtml:p>
                     <xhtml:strong>Step 2</xhtml:strong>
: If the file does not exist, this recommendation is not applicable. If the file exists, execute the command below including the correct file path to set the file permissions to               <xhtml:span class="inline_block">644</xhtml:span>
.            </xhtml:p>
                  <xhtml:p>For example,</xhtml:p>
                  <xhtml:code class="code_block">chmod 644 /usr/lib/systemd/system/docker.service
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808453"/>
            </check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.3_Ensure_that_docker.socket_file_ownership_is_set_to_rootroot" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure that docker.socket file ownership is set to root:root</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that the           <xhtml:span class="inline_block">docker.socket</xhtml:span>
 file ownership and group ownership are correctly set to           <xhtml:span class="inline_block">root</xhtml:span>
.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Restrict Administrator Privileges to Dedicated Administrator Accounts" urn="urn:cisecurity.org:controls:8.0:5:4">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The           <xhtml:span class="inline_block">docker.socket</xhtml:span>
 file contains sensitive parameters that may alter the behavior of the Docker remote API. For this reason, it should be owned and group owned by           <xhtml:span class="inline_block">root</xhtml:span>
 in order to ensure that it is not modified by less privileged users.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
                     <xhtml:strong>Step 1</xhtml:strong>
: Find out the file location:            </xhtml:p>
                  <xhtml:code class="code_block">systemctl show -p FragmentPath docker.socket
</xhtml:code>
                  <xhtml:p>
                     <xhtml:strong>Step 2</xhtml:strong>
: If the file does not exist, this recommendation is not applicable. If the file exists, execute the command below, including the correct file path to set the ownership and group ownership for the file to               <xhtml:span class="inline_block">root</xhtml:span>
.            </xhtml:p>
                  <xhtml:p>For example,</xhtml:p>
                  <xhtml:code class="code_block">chown root:root /usr/lib/systemd/system/docker.socket
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808454"/>
            </check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.4_Ensure_that_docker.socket_file_permissions_are_set_to_644_or_more_restrictive" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure that docker.socket file permissions are set to 644 or more restrictive</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that the file permissions on the           <xhtml:span class="inline_block">docker.socket</xhtml:span>
 file are correctly set to           <xhtml:span class="inline_block">644</xhtml:span>
 or more restrictively.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Configure Data Access Control Lists" urn="urn:cisecurity.org:controls:8.0:3:3">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Protect Information through  Access Control Lists" urn="urn:cisecurity.org:controls:7.0:14:6">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The           <xhtml:span class="inline_block">docker.socket</xhtml:span>
 file contains sensitive parameters that may alter the behavior of the Docker remote API. It should therefore be writeable only by           <xhtml:span class="inline_block">root</xhtml:span>
 in order to ensure that it is not modified by less privileged users.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/dockerd/#bind-docker-to-another-hostport-or-a-unix-socket</xccdf:ident>
         <xccdf:ident system="URL">https://github.com/YungSang/fedora-atomic-packer/blob/master/oem/docker.socket</xccdf:ident>
         <xccdf:ident system="URL">http://daviddaeschler.com/2014/12/14/centos-7rhel-7-and-docker-containers-on-boot/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
                     <xhtml:strong>Step 1</xhtml:strong>
: Find out the file location:            </xhtml:p>
                  <xhtml:code class="code_block">systemctl show -p FragmentPath docker.socket
</xhtml:code>
                  <xhtml:p>
                     <xhtml:strong>Step 2</xhtml:strong>
: If the file does not exist, this recommendation is not applicable. If the file does exist, you should execute the command below, including the correct file path to set the file permissions to               <xhtml:span class="inline_block">644</xhtml:span>
.            </xhtml:p>
                  <xhtml:p>For example,</xhtml:p>
                  <xhtml:code class="code_block">chmod 644 /usr/lib/systemd/system/docker.socket
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808455"/>
            </check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.5_Ensure_that_the_etcdocker_directory_ownership_is_set_to_rootroot" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure that the /etc/docker directory ownership is set to root:root</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that the           <xhtml:span class="inline_block">/etc/docker</xhtml:span>
 directory ownership and group ownership is correctly set to           <xhtml:span class="inline_block">root</xhtml:span>
.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Restrict Administrator Privileges to Dedicated Administrator Accounts" urn="urn:cisecurity.org:controls:8.0:5:4">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The           <xhtml:span class="inline_block">/etc/docker</xhtml:span>
 directory contains certificates and keys in addition to various other sensitive files. It should therefore be individual owned and group owned by           <xhtml:span class="inline_block">root</xhtml:span>
 in order to ensure that it can not be modified by less privileged users.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/security/https/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To resolve this issue you should run the following command:</xhtml:p>
                  <xhtml:code class="code_block">chown root:root /etc/docker
</xhtml:code>
                  <xhtml:p>
This sets the ownership and group ownership for the directory to               <xhtml:span class="inline_block">root</xhtml:span>
.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="OR">
            <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808456"/>
            </check>
            <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808457" value-id="xccdf_org.cisecurity.benchmarks_value_4808457_var"/>
               <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808457"/>
            </check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.6_Ensure_that_etcdocker_directory_permissions_are_set_to_755_or_more_restrictively" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure that /etc/docker directory permissions are set to 755 or more restrictively</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that the           <xhtml:span class="inline_block">/etc/docker</xhtml:span>
 directory permissions are correctly set to           <xhtml:span class="inline_block">755</xhtml:span>
 or more restrictively.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Configure Data Access Control Lists" urn="urn:cisecurity.org:controls:8.0:3:3">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Protect Information through  Access Control Lists" urn="urn:cisecurity.org:controls:7.0:14:6">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The           <xhtml:span class="inline_block">/etc/docker</xhtml:span>
 directory contains certificates and keys in addition to various sensitive files. It should therefore only be writeable by           <xhtml:span class="inline_block">root</xhtml:span>
 to ensure that it can not be modified by a less privileged user.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/security/https/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should run the following command:</xhtml:p>
                  <xhtml:code class="code_block">chmod 755 /etc/docker
</xhtml:code>
                  <xhtml:p>
This sets the permissions for the directory to               <xhtml:span class="inline_block">755</xhtml:span>
.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="OR">
            <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808458"/>
            </check>
            <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808459" value-id="xccdf_org.cisecurity.benchmarks_value_4808459_var"/>
               <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808459"/>
            </check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.7_Ensure_that_registry_certificate_file_ownership_is_set_to_rootroot" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that registry certificate file ownership is set to root:root</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that all the registry certificate files (usually found under           <xhtml:span class="inline_block">/etc/docker/certs.d/&lt;registry-name&gt;</xhtml:span>
 directory) are individually owned and group owned by           <xhtml:span class="inline_block">root</xhtml:span>
.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Restrict Administrator Privileges to Dedicated Administrator Accounts" urn="urn:cisecurity.org:controls:8.0:5:4">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The           <xhtml:span class="inline_block">/etc/docker/certs.d/&lt;registry-name&gt;</xhtml:span>
 directory contains Docker registry certificates. These certificate files must be individually owned and group owned by           <xhtml:span class="inline_block">root</xhtml:span>
 to ensure that less privileged users are unable to modify the contents of the directory.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/registry/insecure/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>The following command could be executed:</xhtml:p>
                  <xhtml:code class="code_block">chown root:root /etc/docker/certs.d/&lt;registry-name&gt;/* 
</xhtml:code>
                  <xhtml:p>
This would set the individual ownership and group ownership for the registry certificate files to               <xhtml:span class="inline_block">root</xhtml:span>
.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.8_Ensure_that_registry_certificate_file_permissions_are_set_to_444_or_more_restrictively" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that registry certificate file permissions are set to 444 or more restrictively</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that all the registry certificate files (usually found under           <xhtml:span class="inline_block">/etc/docker/certs.d/&lt;registry-name&gt;</xhtml:span>
 directory) have permissions of           <xhtml:span class="inline_block">444</xhtml:span>
 or are set more restrictively.        </xhtml:p>
            <xhtml:p>Note that, by default, this directory might not exist if no registry certificate files are in place.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Configure Data Access Control Lists" urn="urn:cisecurity.org:controls:8.0:3:3">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Protect Information through  Access Control Lists" urn="urn:cisecurity.org:controls:7.0:14:6">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The           <xhtml:span class="inline_block">/etc/docker/certs.d/&lt;registry-name&gt;</xhtml:span>
 directory contains Docker registry certificates. These certificate files must have permissions of           <xhtml:span class="inline_block">444</xhtml:span>
or more restrictive permissions in order to ensure that unprivileged users do not have full access to them..        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/registry/insecure/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should execute the following command:</xhtml:p>
                  <xhtml:code class="code_block">find /etc/docker/certs.d/ -type f -exec chmod 0444 {} \; 
</xhtml:code>
                  <xhtml:p>
This would set the permissions for the registry certificate files to               <xhtml:span class="inline_block">444</xhtml:span>
.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.9_Ensure_that_TLS_CA_certificate_file_ownership_is_set_to_rootroot" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that TLS CA certificate file ownership is set to root:root</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that the TLS CA certificate file (the file that is passed along with the           <xhtml:span class="inline_block">--tlscacert</xhtml:span>
 parameter) is individually owned and group owned by           <xhtml:span class="inline_block">root</xhtml:span>
.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Restrict Administrator Privileges to Dedicated Administrator Accounts" urn="urn:cisecurity.org:controls:8.0:5:4">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The TLS CA certificate file should be protected from any tampering. It is used to authenticate the Docker server based on a given CA certificate. It must be therefore be individually owned and group owned by           <xhtml:span class="inline_block">root</xhtml:span>
 to ensure that it cannot be modified by less privileged users.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/registry/insecure/</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/security/https/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should execute the following command:</xhtml:p>
                  <xhtml:code class="code_block">chown root:root &lt;path to TLS CA certificate file&gt;
</xhtml:code>
                  <xhtml:p>
This sets the individual ownership and group ownership for the TLS CA certificate file to               <xhtml:span class="inline_block">root</xhtml:span>
.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.10_Ensure_that_TLS_CA_certificate_file_permissions_are_set_to_444_or_more_restrictively" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that TLS CA certificate file permissions are set to 444 or more restrictively</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that the TLS CA certificate file (the file that is passed along with the           <xhtml:span class="inline_block">--tlscacert</xhtml:span>
 parameter) has permissions of           <xhtml:span class="inline_block">444</xhtml:span>
 or is set more restrictively.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Configure Data Access Control Lists" urn="urn:cisecurity.org:controls:8.0:3:3">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Protect Information through  Access Control Lists" urn="urn:cisecurity.org:controls:7.0:14:6">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The TLS CA certificate file should be protected from any tampering. It is used to authenticate the Docker server based on a given CA certificate. It must therefore have permissions of           <xhtml:span class="inline_block">444</xhtml:span>
, or more restrictive permissions to ensure that the file cannot be modified by a less privileged user.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/registry/insecure/</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/security/https/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should execute the following command:</xhtml:p>
                  <xhtml:code class="code_block">chmod 444 &lt;path to TLS CA certificate file&gt;
</xhtml:code>
                  <xhtml:p>
This sets the file permissions on the TLS CA file to               <xhtml:span class="inline_block">444</xhtml:span>
.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.11_Ensure_that_Docker_server_certificate_file_ownership_is_set_to_rootroot" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that Docker server certificate file ownership is set to root:root</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that the Docker server certificate file (the file that is passed along with the           <xhtml:span class="inline_block">--tlscert</xhtml:span>
 parameter) is individual owned and group owned by           <xhtml:span class="inline_block">root</xhtml:span>
.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Restrict Administrator Privileges to Dedicated Administrator Accounts" urn="urn:cisecurity.org:controls:8.0:5:4">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The Docker server certificate file should be protected from any tampering. It is used to authenticate the Docker server based on the given server certificate. It must therefore be individually owned and group owned by           <xhtml:span class="inline_block">root</xhtml:span>
 to prevent modification by less privileged users.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/registry/insecure/</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/security/https/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should run the following command:</xhtml:p>
                  <xhtml:code class="code_block">chown root:root &lt;path to Docker server certificate file&gt;
</xhtml:code>
                  <xhtml:p>
This sets the individual ownership and the group ownership for the Docker server certificate file to               <xhtml:span class="inline_block">root</xhtml:span>
.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.12_Ensure_that_the_Docker_server_certificate_file_permissions_are_set_to_444_or_more_restrictively" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that the Docker server certificate file permissions are set to 444 or more restrictively</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that the Docker server certificate file (the file that is passed along with the           <xhtml:span class="inline_block">--tlscert</xhtml:span>
 parameter) has permissions of           <xhtml:span class="inline_block">444</xhtml:span>
 or more restrictive permissions.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Configure Data Access Control Lists" urn="urn:cisecurity.org:controls:8.0:3:3">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Protect Information through  Access Control Lists" urn="urn:cisecurity.org:controls:7.0:14:6">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The Docker server certificate file should be protected from any tampering. It is used to authenticate the Docker server based on the given server certificate. It should therefore have permissions of           <xhtml:span class="inline_block">444</xhtml:span>
 to prevent its modification.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/registry/insecure/</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/security/https/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should execute the command below:</xhtml:p>
                  <xhtml:code class="code_block">chmod 444 &lt;path to Docker server certificate file&gt;
</xhtml:code>
                  <xhtml:p>
This sets the file permissions of the Docker server certificate file to               <xhtml:span class="inline_block">444</xhtml:span>
.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.13_Ensure_that_the_Docker_server_certificate_key_file_ownership_is_set_to_rootroot" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that the Docker server certificate key file ownership is set to root:root</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that the Docker server certificate key file (the file that is passed along with the           <xhtml:span class="inline_block">--tlskey</xhtml:span>
 parameter) is individually owned and group owned by           <xhtml:span class="inline_block">root</xhtml:span>
.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Restrict Administrator Privileges to Dedicated Administrator Accounts" urn="urn:cisecurity.org:controls:8.0:5:4">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The Docker server certificate key file should be protected from any tampering or unneeded reads/writes. As it holds the private key for the Docker server certificate, it must be individually owned and group owned by           <xhtml:span class="inline_block">root</xhtml:span>
 to ensure that it cannot be accessed by less privileged users.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/registry/insecure/</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/security/https/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should execute the following command:</xhtml:p>
                  <xhtml:code class="code_block">chown root:root &lt;path to Docker server certificate key file&gt;
</xhtml:code>
                  <xhtml:p>
This sets the individual ownership and group ownership for the Docker server certificate key file to               <xhtml:span class="inline_block">root</xhtml:span>
.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.14_Ensure_that_the_Docker_server_certificate_key_file_permissions_are_set_to_400" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that the Docker server certificate key file permissions are set to 400</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that the Docker server certificate key file (the file that is passed along with the           <xhtml:span class="inline_block">--tlskey</xhtml:span>
 parameter) has permissions of           <xhtml:span class="inline_block">400</xhtml:span>
.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Configure Data Access Control Lists" urn="urn:cisecurity.org:controls:8.0:3:3">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Protect Information through  Access Control Lists" urn="urn:cisecurity.org:controls:7.0:14:6">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The Docker server certificate key file should be protected from any tampering or unneeded reads. It holds the private key for the Docker server certificate. It must therefore have permissions of           <xhtml:span class="inline_block">400</xhtml:span>
 to ensure that the certificate key file is not modified.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/registry/insecure/</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/security/https/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should execute the following command:</xhtml:p>
                  <xhtml:code class="code_block">chmod 400 &lt;path to Docker server certificate key file&gt;
</xhtml:code>
                  <xhtml:p>
This sets the Docker server certificate key file permissions to               <xhtml:span class="inline_block">400</xhtml:span>
.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.15_Ensure_that_the_Docker_socket_file_ownership_is_set_to_rootdocker" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure that the Docker socket file ownership is set to root:docker</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that the Docker socket file is owned by           <xhtml:span class="inline_block">root</xhtml:span>
 and group owned by           <xhtml:span class="inline_block">docker</xhtml:span>
.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Configure Data Access Control Lists" urn="urn:cisecurity.org:controls:8.0:3:3">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The Docker daemon runs as           <xhtml:span class="inline_block">root</xhtml:span>
. The default Unix socket therefore must be owned by           <xhtml:span class="inline_block">root</xhtml:span>
. If any other user or process owns this socket, it might be possible for that non-privileged user or process to interact with the Docker daemon. Additionally, in this case a non-privileged user or process might be able to  interact with containers which is neither a secure nor desired behavior.        </xhtml:p>
            <xhtml:p>
Additionally, the Docker installer creates a Unix group called           <xhtml:span class="inline_block">docker</xhtml:span>
. You can add users to this group, and in this case, those users would be able to read and write to the default Docker Unix socket. The membership of the           <xhtml:span class="inline_block">docker</xhtml:span>
 group is tightly controlled by the system administrator. However, ff any other group owns this socket, then it might be possible for members of that group to interact with the Docker daemon. Such a group might not be as tightly controlled as the           <xhtml:span class="inline_block">docker</xhtml:span>
 group. Again, this is not in line with good security practice.        </xhtml:p>
            <xhtml:p>
For these reason, the default Docker Unix socket file should be owned by           <xhtml:span class="inline_block">root</xhtml:span>
 and group owned by           <xhtml:span class="inline_block">docker</xhtml:span>
 to maintain the integrity of the socket file.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/dockerd/#bind-docker-to-another-hostport-or-a-unix-socket</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should execute the following command:</xhtml:p>
                  <xhtml:code class="code_block">chown root:docker /var/run/docker.sock
</xhtml:code>
                  <xhtml:p>
This sets the ownership to               <xhtml:span class="inline_block">root</xhtml:span>
 and group ownership to               <xhtml:span class="inline_block">docker</xhtml:span>
 for the default Docker socket file.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <check-export export-name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:var:4808460" value-id="xccdf_org.cisecurity.benchmarks_value_4808460_var"/>
               <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808460"/>
            </check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.16_Ensure_that_the_Docker_socket_file_permissions_are_set_to_660_or_more_restrictively" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure that the Docker socket file permissions are set to 660 or more restrictively</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that the Docker socket file has permissions of           <xhtml:span class="inline_block">660</xhtml:span>
 or are configured more restrictively.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Configure Data Access Control Lists" urn="urn:cisecurity.org:controls:8.0:3:3">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Protect Information through  Access Control Lists" urn="urn:cisecurity.org:controls:7.0:14:6">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
Only           <xhtml:span class="inline_block">root</xhtml:span>
 and the members of the           <xhtml:span class="inline_block">docker</xhtml:span>
 group should be allowed to read and write to the default Docker Unix socket. The Docker socket file should therefore have permissions of           <xhtml:span class="inline_block">660</xhtml:span>
 or more restrictive permissions.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/dockerd/#bind-docker-to-another-hostport-or-a-unix-socket</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should execute the command below.</xhtml:p>
                  <xhtml:code class="code_block">chmod 660 /var/run/docker.sock
</xhtml:code>
                  <xhtml:p>
This sets the file permissions of the Docker socket file to               <xhtml:span class="inline_block">660</xhtml:span>
.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808461"/>
            </check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.17_Ensure_that_the_daemon.json_file_ownership_is_set_to_rootroot" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that the daemon.json file ownership is set to root:root</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that the           <xhtml:span class="inline_block">daemon.json</xhtml:span>
 file individual ownership and group ownership is correctly set to           <xhtml:span class="inline_block">root</xhtml:span>
, if it is in use.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Restrict Administrator Privileges to Dedicated Administrator Accounts" urn="urn:cisecurity.org:controls:8.0:5:4">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The           <xhtml:span class="inline_block">daemon.json</xhtml:span>
 file contains sensitive parameters that could alter the behavior of the docker daemon. It should therefore be owned and group owned by           <xhtml:span class="inline_block">root</xhtml:span>
 to ensure it can not be modified by less privileged users.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>If the daemon.json file is present, you should execute the command below:</xhtml:p>
                  <xhtml:code class="code_block">chown root:root /etc/docker/daemon.json
</xhtml:code>
                  <xhtml:p>
This sets the ownership and group ownership for the file to               <xhtml:span class="inline_block">root</xhtml:span>
.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.18_Ensure_that_daemon.json_file_permissions_are_set_to_644_or_more_restrictive" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that daemon.json file permissions are set to 644 or more restrictive</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that if the           <xhtml:span class="inline_block">daemon.json</xhtml:span>
 is present its file permissions are correctly set to           <xhtml:span class="inline_block">644</xhtml:span>
 or more restrictively.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Configure Data Access Control Lists" urn="urn:cisecurity.org:controls:8.0:3:3">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Protect Information through  Access Control Lists" urn="urn:cisecurity.org:controls:7.0:14:6">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The           <xhtml:span class="inline_block">daemon.json</xhtml:span>
 file contains sensitive parameters that may alter the behavior of the docker daemon. Therefore it should be writeable only by           <xhtml:span class="inline_block">root</xhtml:span>
 to ensure it is not modified by less privileged users.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>If the file is present, you should execute the command below:</xhtml:p>
                  <xhtml:code class="code_block">chmod 644 /etc/docker/daemon.json
</xhtml:code>
                  <xhtml:p>
This sets the file permissions for this file to               <xhtml:span class="inline_block">644</xhtml:span>
.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.19_Ensure_that_the_etcdefaultdocker_file_ownership_is_set_to_rootroot" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that the /etc/default/docker file ownership is set to root:root</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that the           <xhtml:span class="inline_block">/etc/default/docker</xhtml:span>
 file ownership and group-ownership is correctly set to           <xhtml:span class="inline_block">root</xhtml:span>
.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Restrict Administrator Privileges to Dedicated Administrator Accounts" urn="urn:cisecurity.org:controls:8.0:5:4">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The           <xhtml:span class="inline_block">/etc/default/docker</xhtml:span>
 file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be individually owned and group owned by           <xhtml:span class="inline_block">root</xhtml:span>
 to ensure that it cannot be modified by less privileged users.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/admin/configuring/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should execute the following command</xhtml:p>
                  <xhtml:code class="code_block">chown root:root /etc/default/docker
</xhtml:code>
                  <xhtml:p>
This sets the ownership and group ownership of the file to               <xhtml:span class="inline_block">root</xhtml:span>
.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.20_Ensure_that_the_etcdefaultdocker_file_permissions_are_set_to_644_or_more_restrictively" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that the /etc/default/docker file permissions are set to 644 or more restrictively</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that the           <xhtml:span class="inline_block">/etc/default/docker</xhtml:span>
 file permissions are correctly set to           <xhtml:span class="inline_block">644</xhtml:span>
 or more restrictively.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Configure Data Access Control Lists" urn="urn:cisecurity.org:controls:8.0:3:3">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Protect Information through  Access Control Lists" urn="urn:cisecurity.org:controls:7.0:14:6">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The           <xhtml:span class="inline_block">/etc/default/docker</xhtml:span>
 file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be writeable only by           <xhtml:span class="inline_block">root</xhtml:span>
 in order to ensure that it is not modified by less privileged users.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/admin/configuring/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should execute the following command:</xhtml:p>
                  <xhtml:code class="code_block">chmod 644 /etc/default/docker
</xhtml:code>
                  <xhtml:p>
This sets the file permissions for this file to               <xhtml:span class="inline_block">644</xhtml:span>
.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.21_Ensure_that_the_etcsysconfigdocker_file_permissions_are_set_to_644_or_more_restrictively" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that the /etc/sysconfig/docker file permissions are set to 644 or more restrictively</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that the           <xhtml:span class="inline_block">/etc/sysconfig/docker</xhtml:span>
 file permissions are correctly set to           <xhtml:span class="inline_block">644</xhtml:span>
 or more restrictively.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Configure Data Access Control Lists" urn="urn:cisecurity.org:controls:8.0:3:3">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Protect Information through  Access Control Lists" urn="urn:cisecurity.org:controls:7.0:14:6">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The           <xhtml:span class="inline_block">/etc/sysconfig/docker</xhtml:span>
 file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be writeable only by           <xhtml:span class="inline_block">root</xhtml:span>
 in order to ensure that it is not modified by less privileged users.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/admin/configuring/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should execute the following command:</xhtml:p>
                  <xhtml:code class="code_block">chmod 644 /etc/sysconfig/docker
</xhtml:code>
                  <xhtml:p>
This sets the file permissions for this file to               <xhtml:span class="inline_block">644</xhtml:span>
.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.22_Ensure_that_the_etcsysconfigdocker_file_ownership_is_set_to_rootroot" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that the /etc/sysconfig/docker file ownership is set to root:root</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that the           <xhtml:span class="inline_block">/etc/sysconfig/docker</xhtml:span>
 file individual ownership and group ownership is correctly set to           <xhtml:span class="inline_block">root</xhtml:span>
.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Restrict Administrator Privileges to Dedicated Administrator Accounts" urn="urn:cisecurity.org:controls:8.0:5:4">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The           <xhtml:span class="inline_block">/etc/sysconfig/docker</xhtml:span>
 file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be individually owned and group owned by           <xhtml:span class="inline_block">root</xhtml:span>
 to ensure that it is not modified by less privileged users.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/admin/configuring/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should execute the following command:</xhtml:p>
                  <xhtml:code class="code_block">chown root:root /etc/sysconfig/docker
</xhtml:code>
                  <xhtml:p>
This sets the ownership and group ownership for the file to               <xhtml:span class="inline_block">root</xhtml:span>
.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.23_Ensure_that_the_Containerd_socket_file_ownership_is_set_to_rootroot" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure that the Containerd socket file ownership is set to root:root</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that the Containerd socket file is owned by           <xhtml:span class="inline_block">root</xhtml:span>
 and group owned by           <xhtml:span class="inline_block">root</xhtml:span>
.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Restrict Administrator Privileges to Dedicated Administrator Accounts" urn="urn:cisecurity.org:controls:8.0:5:4">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Containerd is an underlying component used by Docker to create and manage containers. It provides a socket file similar to the Docker socket, which must be protected from unauthorized access. If any other user or process owns this socket, it might be possible for that non-privileged user or process to interact with the Containerd daemon. Additionally, in this case a non-privileged user or process might be able to  interact with containers which is neither a secure nor desired behavior.</xhtml:p>
            <xhtml:p>Unlike the Docker socket, there is usually no requirement for non-privileged users to connect to the socket, so the ownership should be root:root.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should execute the following command:</xhtml:p>
                  <xhtml:code class="code_block">chown root:root /run/containerd/containerd.sock
</xhtml:code>
                  <xhtml:p>
This sets the ownership to               <xhtml:span class="inline_block">root</xhtml:span>
 and group ownership to               <xhtml:span class="inline_block">root</xhtml:span>
 for the default Containerd socket file.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808462"/>
            </check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.24_Ensure_that_the_Containerd_socket_file_permissions_are_set_to_660_or_more_restrictively" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure that the Containerd socket file permissions are set to 660 or more restrictively</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should verify that the Containerd socket file has permissions of           <xhtml:span class="inline_block">660</xhtml:span>
 or are configured more restrictively.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Configure Data Access Control Lists" urn="urn:cisecurity.org:controls:8.0:3:3">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Protect Information through  Access Control Lists" urn="urn:cisecurity.org:controls:7.0:14:6">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
Only           <xhtml:span class="inline_block">root</xhtml:span>
 and the members of the           <xhtml:span class="inline_block">root</xhtml:span>
 group should be allowed to read and write to the default Containerd Unix socket. The Containerd socket file should therefore have permissions of           <xhtml:span class="inline_block">660</xhtml:span>
 or more restrictive permissions.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should execute the command below.</xhtml:p>
                  <xhtml:code class="code_block">chmod 660 /run/containerd/containerd.sock
</xhtml:code>
                  <xhtml:p>
This sets the file permissions of the Containerd socket file to               <xhtml:span class="inline_block">660</xhtml:span>
.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
               <check-content-ref href="CIS_Docker_Benchmark_v1.7.0-oval.xml" name="oval:org.cisecurity.benchmarks.kubernetes_kubernetes_1:def:4808463"/>
            </check>
         </xccdf:complex-check>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_4_Container_Images_and_Build_File_Configuration">
      <xccdf:title xml:lang="en">Container Images and Build File Configuration</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>Container base images and build files govern the fundamentals of how a container instance from a particular image would behave. Ensuring that you are using proper base images and appropriate build files can be very important for building your containerized infrastructure. Below are some of the recommendations that you should follow for container base images and build files to ensure that your containerized infrastructure is secure.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.1_Ensure_that_a_user_for_the_container_has_been_created" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that a user for the container has been created</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Containers should run as a non-root user.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:control title="Account Management" urn="urn:cisecurity.org:controls:8.0:5"/>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
It is good practice to run the container as a non-root user, where possible.  This can be done either via the           <xhtml:span class="inline_block">USER</xhtml:span>
 directive in the           <xhtml:span class="inline_block">Dockerfile</xhtml:span>
 or through           <xhtml:span class="inline_block">gosu</xhtml:span>
 or similar where used as part of the           <xhtml:span class="inline_block">CMD</xhtml:span>
 or           <xhtml:span class="inline_block">ENTRYPOINT</xhtml:span>
 directives.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/builder/#user</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/run/#user</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should ensure that the Dockerfile for each container image contains the information below:</xhtml:p>
                  <xhtml:code class="code_block">USER &lt;username or ID&gt;
</xhtml:code>
                  <xhtml:p>
In this case, the user name or ID refers to the user that was found in the container base image. If there is no specific user created in the container base image, then make use of the               <xhtml:span class="inline_block">useradd</xhtml:span>
 command to add a specific user before the               <xhtml:span class="inline_block">USER</xhtml:span>
 instruction in the Dockerfile.            </xhtml:p>
                  <xhtml:p>For example, add the below lines in the Dockerfile to create a user in the container:</xhtml:p>
                  <xhtml:code class="code_block">
RUN useradd -d /home/username -m -s /bin/bash username              <br/>
USER username 
            </xhtml:code>
                  <xhtml:p>Note: If there are users in the image that are not needed,  you should consider deleting them. After deleting those users, commit the image and then generate new instances of the containers.</xhtml:p>
                  <xhtml:p>
Alternatively, if it is not possible to set the               <xhtml:span class="inline_block">USER</xhtml:span>
 directive in the Dockerfile, a script running as part of the               <xhtml:span class="inline_block">CMD</xhtml:span>
 or               <xhtml:span class="inline_block">ENTRYPOINT</xhtml:span>
 sections of the Dockerfile should be used to ensure that the container process switches to a non-root user.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>Running as a non-root user can present challenges where you wish to bind mount volumes from the underlying host. In this case, care should be taken to ensure that the user running the contained process can read and write to the bound directory, according to their requirements.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.2_Ensure_that_containers_use_only_trusted_base_images" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that containers use only trusted base images</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>You should ensure that container images you use are either written from scratch or are based on another established and trusted base image downloaded over a secure channel.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Use Standard Hardening Configuration Templates for Application Infrastructure" urn="urn:cisecurity.org:controls:8.0:16:7">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Maintain Secure Images" urn="urn:cisecurity.org:controls:7.0:5:2">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Official repositories contain Docker images curated and optimized by the Docker community or by their vendor. There is no guarantee that these images are safe and do not contain security vulnerabilities or malicious code. Caution should therefore be exercised when obtaining container images from Docker and third parties and running these images should be reviewed in line with organizational security policy.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16/subcontrol/7" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/pull/</xccdf:ident>
         <xccdf:ident system="URL">https://registry.hub.docker.com/</xccdf:ident>
         <xccdf:ident system="URL">https://access.redhat.com/blogs/766093/posts/1976473</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>The following procedures are useful for establishing trust for a specific image.</xhtml:p>
                  <xhtml:ul>
                     <xhtml:li>Configure and use Docker Content trust.</xhtml:li>
                     <xhtml:li>View the history of each Docker image to evaluate its risk, dependent on the sensitivity of the application   you wish to deploy using it.</xhtml:li>
                     <xhtml:li>Scan Docker images for vulnerabilities at regular intervals.</xhtml:li>
                  </xhtml:ul>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.3_Ensure_that_unnecessary_packages_are_not_installed_in_the_container" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that unnecessary packages are not installed in the container</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Containers should have as small a footprint as possible, and should not contain unnecessary software packages which could increase their attack surface.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Uninstall or Disable Unnecessary Services on Enterprise Assets and Software" urn="urn:cisecurity.org:controls:8.0:4:8">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Devices</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Maintain Secure Images" urn="urn:cisecurity.org:controls:7.0:5:2">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Unnecessary software should not be installed into containers, as doing so increases their attack surface.  Only packages strictly necessary for the correct operation of the application being deployed should be installed.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4/subcontrol/8" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/develop/develop-images/baseimages/</xccdf:ident>
         <xccdf:ident system="URL">https://jpetazzo.github.io/2020/02/01/quest-minimal-docker-images-part-1/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should not install anything within the container that is not required.</xhtml:p>
                  <xhtml:p>You should consider using a minimal base image rather than the standard Centos, Debian, or Red Hat images if you can. Some of the options available include BusyBox and Alpine.</xhtml:p>
                  <xhtml:p>Not only can this trim your image size considerably, but there would also be fewer pieces of software which could contain vectors for attack.</xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.4_Ensure_images_are_scanned_and_rebuilt_to_include_security_patches" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure images are scanned and rebuilt to include security patches</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Images should be scanned frequently for any vulnerabilities. You should rebuild all images to include these patches and then instantiate new containers from them.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Perform Automated Vulnerability Scans of Internal Enterprise Assets" urn="urn:cisecurity.org:controls:8.0:7:5">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Identify</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Verify That Acquired Software is Still Supported" urn="urn:cisecurity.org:controls:7.0:18:3">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type/>
                     <controls:security_function/>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Vulnerabilities are loopholes or bugs that can be exploited by hackers or malicious users, and security patches are updates to resolve these vulnerabilities. Image vulnerability scanning tools can be use to find vulnerabilities in images and then check for available patches to mitigate these. Patches update the system to a more recent code base which does not contain these problems, and being on a supported version of the code base is very important, as vendors do not tend to supply patches for older versions which have gone out of support. Security patches should be evaluated before applying and patching should be implemented in line with the organization's IT Security Policy.</xhtml:p>
            <xhtml:p>Care should be taken with the results returned by vulnerability assessment tools, as some will simply return results based on software banners, and these may not be entirely accurate.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/7/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/builder/#onbuild</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Images should be re-built ensuring that the latest version of the base images are used, to keep the operating system patch level at an appropriate level. Once the images have been re-built, containers should be re-started making use of the updated images.</xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.5_Ensure_Content_trust_for_Docker_is_Enabled" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure Content trust for Docker is Enabled</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Content trust is disabled by default and should be enabled in line with organizational security policy.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:control title="Data Protection" urn="urn:cisecurity.org:controls:8.0:3"/>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Data Protection" urn="urn:cisecurity.org:controls:7.0:13"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Content trust provides the ability to use digital signatures for data sent to and received from remote Docker registries. These signatures allow client-side verification of the identity and the publisher of specific image tags and ensures the provenance of container images.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/13" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/security/trust/</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/notary/service_architecture/</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/cli/#environment-variables</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enable content trust in a bash shell, you should enter the following command:</xhtml:p>
                  <xhtml:code class="code_block">export DOCKER_CONTENT_TRUST=1
</xhtml:code>
                  <xhtml:p>Alternatively, you could set this environment variable in your profile file so that content trust in enabled on every login.</xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>
In an environment where                 <xhtml:span class="inline_block">DOCKER_CONTENT_TRUST</xhtml:span>
 is set, you are required to follow trust procedures whilst working with the image related commands -                 <xhtml:span class="inline_block">build</xhtml:span>
,                 <xhtml:span class="inline_block">create</xhtml:span>
,                 <xhtml:span class="inline_block">pull</xhtml:span>
,                 <xhtml:span class="inline_block">push </xhtml:span>
and                 <xhtml:span class="inline_block">run</xhtml:span>
. You can use the                 <xhtml:span class="inline_block">--disable-content-trust</xhtml:span>
 flag to run individual operations on tagged images without content trust on an as needed basis, but this defeats the purpose of enabling content trust and therefore should be avoided wherever possible.              </xhtml:p>
                     <xhtml:p>Note: Content trust is currently only available for users of the public Docker Hub. It is currently not available for the Docker Trusted Registry or for private registries.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.6_Ensure_that_HEALTHCHECK_instructions_have_been_added_to_container_images" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that HEALTHCHECK instructions have been added to container images</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should add the           <xhtml:span class="inline_block">HEALTHCHECK</xhtml:span>
 instruction to your Docker container images in order to ensure that health checks are executed against running containers.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Implement Code-Level Security Checks" urn="urn:cisecurity.org:controls:8.0:16:12">
                     <controls:implementation_groups ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Maintain Secure Images" urn="urn:cisecurity.org:controls:7.0:5:2">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
An important security control is that of availability. Adding the           <xhtml:span class="inline_block">HEALTHCHECK</xhtml:span>
 instruction to your container image ensures that the Docker engine periodically checks the running container instances against that instruction to ensure that containers are still operational.        </xhtml:p>
            <xhtml:p>Based on the results of the health check, the Docker engine could terminate containers which are not responding correctly, and instantiate new ones.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16/subcontrol/12" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/builder/#healthcheck</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
You should follow the Docker documentation and rebuild your container images to include the               <xhtml:span class="inline_block">HEALTHCHECK</xhtml:span>
 instruction.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.7_Ensure_update_instructions_are_not_used_alone_in_Dockerfiles" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure update instructions are not used alone in Dockerfiles</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should not use OS package manager update instructions such as           <xhtml:span class="inline_block">apt-get update</xhtml:span>
 or           <xhtml:span class="inline_block">yum update</xhtml:span>
 either alone or in a single line in any Dockerfiles used to generate images under review.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Use Standard Hardening Configuration Templates for Application Infrastructure" urn="urn:cisecurity.org:controls:8.0:16:7">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Maintain Secure Images" urn="urn:cisecurity.org:controls:7.0:5:2">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Adding update instructions in a single line on the Dockerfile will cause the update layer to be cached. When you then build any image later using the same instruction, this will cause the previously cached update layer to be used, potentially preventing any fresh updates from being applied to later builds.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16/subcontrol/7" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/develop/develop-images/dockerfile_best-practices/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should use update instructions together with install instructions and version pinning for packages while installing them. This will prevent caching and force the extraction of the required versions.</xhtml:p>
                  <xhtml:p>
Alternatively, you could use the               <xhtml:span class="inline_block">--no-cache</xhtml:span>
 flag during the               <xhtml:span class="inline_block">docker build</xhtml:span>
 process to avoid using cached layers.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.8_Ensure_setuid_and_setgid_permissions_are_removed" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure setuid and setgid permissions are removed</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Removing setuid and setgid permissions in the images can prevent privilege escalation attacks within containers.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Restrict Administrator Privileges to Dedicated Administrator Accounts" urn="urn:cisecurity.org:controls:8.0:5:4">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>setuid and setgid permissions can be used for privilege escalation. Whilst these permissions can on occasion be legitimately needed, you should consider removing them from packages which do not need them.  This should be reviewed for each image.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities</xccdf:ident>
         <xccdf:ident system="URL">http://man7.org/linux/man-pages/man2/setuid.2.html</xccdf:ident>
         <xccdf:ident system="URL">http://man7.org/linux/man-pages/man2/setgid.2.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should allow setuid and setgid permissions only on executables which require them. You could remove these permissions at build time by adding the following command in your Dockerfile, preferably towards the end of the Dockerfile:</xhtml:p>
                  <xhtml:code class="code_block">RUN find / -perm /6000 -type f -exec chmod a-s {} \; || true 
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>The above command would break all executables that depend on setuid or setgid permissions including legitimate ones. You should therefore be careful to modify the command to suit your requirements so that it does not reduce the permissions of legitimate programs excessively. Because of this, you should exercise a degree of caution and examine all processes carefully before making this type of modification in order to avoid outages.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.9_Ensure_that_COPY_is_used_instead_of_ADD_in_Dockerfiles" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that COPY is used instead of ADD in Dockerfiles</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should use the           <xhtml:span class="inline_block">COPY</xhtml:span>
 instruction instead of the           <xhtml:span class="inline_block">ADD</xhtml:span>
 instruction in the Dockerfile.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Use Standard Hardening Configuration Templates for Application Infrastructure" urn="urn:cisecurity.org:controls:8.0:16:7">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Maintain Secure Images" urn="urn:cisecurity.org:controls:7.0:5:2">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The           <xhtml:span class="inline_block">COPY</xhtml:span>
 instruction simply copies files from the local host machine to the container file system. The           <xhtml:span class="inline_block">ADD</xhtml:span>
 instruction could potentially retrieve files from remote URLs and perform operations such as unpacking them. The           <xhtml:span class="inline_block">ADD</xhtml:span>
 instruction therefore introduces security risks.  For example, malicious files may be directly accessed from URLs without scanning, or there may be vulnerabilities associated with decompressing them.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16/subcontrol/7" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#add-or-copy</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
You should use               <xhtml:span class="inline_block">COPY</xhtml:span>
 rather than               <xhtml:span class="inline_block">ADD</xhtml:span>
 instructions in Dockerfiles.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>
Care needs to be taken in implementing this control if the application requires functionality that is part of the                 <xhtml:span class="inline_block">ADD</xhtml:span>
 instruction, for example, if you need to retrieve files from remote URLs.              </xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.10_Ensure_secrets_are_not_stored_in_Dockerfiles" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure secrets are not stored in Dockerfiles</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Do not store any secrets in Dockerfiles.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:control title="Data Protection" urn="urn:cisecurity.org:controls:8.0:3"/>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Data Protection" urn="urn:cisecurity.org:controls:7.0:13"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Docker images are not opaque and contain information about the commands used to build them.  As such secrets should not be included in Dockerfiles used to build images as they will be visible to any users of the image.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/13" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Do not store any kind of secrets within Dockerfiles. Where secrets are required during the build process, make use of a secrets management tool, such as the buildkit builder included with Docker.</xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>A proper secrets management process will be required for Docker image building.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.11_Ensure_only_verified_packages_are_installed" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure only verified packages are installed</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>You should verify the authenticity of packages before installing them into images.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Ensure Authorized Software is Currently Supported " urn="urn:cisecurity.org:controls:8.0:2:2">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Identify</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Verify That Acquired Software is Still Supported" urn="urn:cisecurity.org:controls:7.0:18:3">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type/>
                     <controls:security_function/>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Verifying authenticity of software packages is essential for building a secure container image. Packages with no known provenance could potentially be malicious or have vulnerabilities that could be exploited.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/2/subcontrol/2" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://www.redhat.com/sysadmin/rpm-gpg-verify-packages</xccdf:ident>
         <xccdf:ident system="URL">https://help.ubuntu.com/community/SecureApt</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should use a secure package distribution mechanism of your choice to ensure the authenticity of software packages.</xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.12_Ensure_all_signed_artifacts_are_validated" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure all signed artifacts are validated</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Validate artifacts signatures before uploading to the package registry.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Allowlist Authorized Scripts" urn="urn:cisecurity.org:controls:8.0:2:7">
                     <controls:implementation_groups ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Utilize Application Whitelisting" urn="urn:cisecurity.org:controls:7.0:2:7">
                     <controls:implementation_groups ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Cryptographic signature is a tool to verify artifact authenticity. Every artifact is supposed to be signed by its creator in order to verify that it wasn't compromised until it got to the client. Validating artifact signature before delivering it is another level of protection, which checks that the signature hasn't been changed, which means that no one tried or succeeded in tampering with the artifact. That sets trust between the supplier and the client.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/2/subcontrol/7" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/2/subcontrol/7" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Validate every artifact with its signature. It is recommended to do so automatically.</xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_5_Container_Runtime_Configuration">
      <xccdf:title xml:lang="en">Container Runtime Configuration</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>There are many security implications associated with the ways that containers are started. Some runtime parameters can be supplied that have security consequences that could compromise the host and the containers running on it. It is therefore very important to verify the way in which containers are started, and which parameters are associated with them.  Container runtime configuration should be reviewed in line with organizational security policy.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.1_Ensure_swarm_mode_is_not_Enabled_if_not_needed" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure swarm mode is not Enabled, if not needed</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Do not enable swarm mode on a Docker engine instance unless this is needed.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Uninstall or Disable Unnecessary Services on Enterprise Assets and Software" urn="urn:cisecurity.org:controls:8.0:4:8">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Devices</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Ensure Only Approved Ports, Protocols and Services Are Running" urn="urn:cisecurity.org:controls:7.0:9:2">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Devices</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>By default, a Docker engine instance will not listen on any network ports, with all communications with the client coming over the Unix socket. When Docker swarm mode is enabled on a Docker engine instance, multiple network ports are opened on the system and made available to other systems on the network for the purposes of cluster management and node communications.</xhtml:p>
            <xhtml:p>Opening network ports on a system increases its attack surface and this should be avoided unless required.</xhtml:p>
            <xhtml:p>It should be noted that swarm mode is required for the operation of Docker Enterprise components.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/9/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4/subcontrol/8" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/swarm_leave/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>If swarm mode has been enabled on a system in error, you should run the command below:</xhtml:p>
                  <xhtml:code class="code_block">docker swarm leave
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>Disabling swarm mode will impact the operation of Docker Enterprise components if these are in use.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.2_Ensure_that_if_applicable_an_AppArmor_Profile_is_enabled" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that, if applicable, an AppArmor Profile is enabled</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>AppArmor is an effective and easy-to-use Linux application security system. It is available on some Linux distributions by default, for example, on Debian and Ubuntu.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Enable Anti-Exploitation Features" urn="urn:cisecurity.org:controls:8.0:10:5">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Devices</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Maintain Secure Images" urn="urn:cisecurity.org:controls:7.0:5:2">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>AppArmor protects the Linux OS and applications from various threats by enforcing a security policy which is also known as an AppArmor profile. You can create your own AppArmor profile for containers or use Docker's default profile. Enabling this feature enforces security policies on containers as defined in the profile.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/10/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/security/apparmor/</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/run/#security-configuration</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/security/#other-kernel-security-features</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>If AppArmor is applicable for your Linux OS, you should enable it.</xhtml:p>
                  <xhtml:ol>
                     <xhtml:li>Verify AppArmor is installed.</xhtml:li>
                     <xhtml:li>Create or import a AppArmor profile for Docker containers.</xhtml:li>
                     <xhtml:li>Enable enforcement of the policy.</xhtml:li>
                     <xhtml:li>Start your Docker container using the customized AppArmor profile. For example:</xhtml:li>
                  </xhtml:ol>
                  <xhtml:code class="code_block">docker run --interactive --tty --security-opt="apparmor:PROFILENAME" ubuntu /bin/bash
</xhtml:code>
                  <xhtml:p>Alternatively, Docker's default AppArmor policy can be used.</xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>The container will have the security controls defined in the AppArmor profile. It should be noted that if the AppArmor profile is misconfigured, this may cause issues with the operation of the container.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.3_Ensure_that_if_applicable_SELinux_security_options_are_set" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that, if applicable, SELinux security options are set</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>SELinux is an effective and easy-to-use Linux application security system. It is available by default on some distributions such as Red Hat and Fedora.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Enable Anti-Exploitation Features" urn="urn:cisecurity.org:controls:8.0:10:5">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Devices</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Maintain Secure Images" urn="urn:cisecurity.org:controls:7.0:5:2">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>SELinux provides a Mandatory Access Control (MAC) system that greatly augments the default Discretionary Access Control (DAC) model. You can therefore add an extra layer of safety to your containers by enabling SELinux on your Linux host.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/10/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/security/#other-kernel-security-features</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/run/#security-configuration</xccdf:ident>
         <xccdf:ident system="URL">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux_atomic_host/7/html/container_security_guide/docker_selinux_security_policy</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>If SELinux is applicable for your Linux OS, you should use it.</xhtml:p>
                  <xhtml:ol>
                     <xhtml:li>Set the SELinux State.</xhtml:li>
                     <xhtml:li>Set the SELinux Policy.</xhtml:li>
                     <xhtml:li>Create or import a SELinux policy template for Docker containers.</xhtml:li>
                     <xhtml:li>Start Docker in daemon mode with SELinux enabled. For example:</xhtml:li>
                  </xhtml:ol>
                  <xhtml:code class="code_block">docker daemon --selinux-enabled
</xhtml:code>
                  <xhtml:p>
or by adding the following to the               <xhtml:span class="inline_block">daemon.json</xhtml:span>
 configuration file:            </xhtml:p>
                  <xhtml:code class="code_block">
{              <br/>
  "selinux-enabled": true              <br/>
}
            </xhtml:code>
                  <xhtml:ol start="5">
                     <xhtml:li>Start your Docker container using the security options. For example,</xhtml:li>
                  </xhtml:ol>
                  <xhtml:code class="code_block">docker run --interactive --tty --security-opt label=level:TopSecret centos /bin/bash
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>Any restrictions defined in the SELinux policy will be applied to your containers. It should be noted that if your SELinux policy is misconfigured, this may have an impact on the correct operation of the affected containers.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.4_Ensure_that_Linux_kernel_capabilities_are_restricted_within_containers" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that Linux kernel capabilities are restricted within containers</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>By default, Docker starts containers with a restricted set of Linux kernel capabilities. This means that any process can be granted the required capabilities instead of giving it root access. Using Linux kernel capabilities, processes in general do not need to run as the root user.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Use Standard Hardening Configuration Templates for Application Infrastructure" urn="urn:cisecurity.org:controls:8.0:16:7">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Maintain Secure Images" urn="urn:cisecurity.org:controls:7.0:5:2">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Docker supports the addition and removal of capabilities.  You should remove all capabilities not required for the correct function of the container.</xhtml:p>
            <xhtml:p>
Specifically, in the default capability set provided by Docker, the           <xhtml:span class="inline_block">NET_RAW</xhtml:span>
 capability should be removed if not explicitly required, as it can give an attacker with access to a container the ability to create spoofed network traffic.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16/subcontrol/7" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/security/#linux-kernel-capabilities</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/compose/compose-file/compose-file-v3/#cap_add-cap_drop</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/service_create/#options</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/run/#configure-namespaced-kernel-parameters-sysctls-at-runtime</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should execute the command below to add required capabilities:</xhtml:p>
                  <xhtml:code class="code_block">docker run --cap-add={"Capability 1","Capability 2"} &lt;Run arguments&gt; &lt;Container Image Name or ID&gt; &lt;Command&gt;
</xhtml:code>
                  <xhtml:p>You should execute the command below to remove unneeded capabilities:</xhtml:p>
                  <xhtml:code class="code_block">docker run --cap-drop={"Capability 1","Capability 2"} &lt;Run arguments&gt; &lt;Container Image Name or ID&gt; &lt;Command&gt;
</xhtml:code>
                  <xhtml:p>Alternatively, you could remove all the currently configured capabilities and then restore only the ones you specifically use:</xhtml:p>
                  <xhtml:code class="code_block">docker run --cap-drop=all --cap-add={"Capability 1","Capability 2"} &lt;Run arguments&gt; &lt;Container Image Name or ID&gt; &lt;Command&gt;
</xhtml:code>
                  <xhtml:p>
Note that some settings also can be configured using the               <xhtml:span class="inline_block">--sysctl</xhtml:span>
 option, reducing the need for container capabilities even further. This includes unprivileged ICMP echo sockets without               <xhtml:span class="inline_block">NET_RAW</xhtml:span>
 and allow opening any port less than 1024 without               <xhtml:span class="inline_block">NET_BIND_SERVICE</xhtml:span>
.            </xhtml:p>
                  <xhtml:p>
Adding and removing capabilities are also possible when the               <xhtml:span class="inline_block">docker service</xhtml:span>
 command is used:            </xhtml:p>
                  <xhtml:code class="code_block">docker service create --cap-drop=all --cap-add={"Capability 1","Capability 2"} &lt;Run arguments&gt; &lt;Container Image Name or ID&gt; &lt;Command&gt;
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>Restrictions on processes within a container are based on which Linux capabilities are in force.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.5_Ensure_that_privileged_containers_are_not_used" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that privileged containers are not used</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
Using the           <xhtml:span class="inline_block">--privileged</xhtml:span>
 flag provides all Linux kernel capabilities to the container to which it is applied and therefore overwrites the           <xhtml:span class="inline_block">--cap-add</xhtml:span>
 and           <xhtml:span class="inline_block">--cap-drop</xhtml:span>
 flags. For this reason you should ensure that it is not used.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Restrict Administrator Privileges to Dedicated Administrator Accounts" urn="urn:cisecurity.org:controls:8.0:5:4">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The           <xhtml:span class="inline_block">--privileged</xhtml:span>
 flag provides all capabilities to the container to which it is applied, and also lifts all the limitations enforced by the device cgroup controller. As a consequence this the container has most of the rights of the underlying host. This flag only exists to allow for specific use cases (for example running Docker within Docker) and should not generally be used.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
You should not run containers with the               <xhtml:span class="inline_block">--privileged</xhtml:span>
 flag.            </xhtml:p>
                  <xhtml:p>For example, do not start a container using the command below:</xhtml:p>
                  <xhtml:code class="code_block">docker run --interactive --tty --privileged centos /bin/bash
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>
If you start a container without the                 <xhtml:span class="inline_block">--privileged</xhtml:span>
 flag, it will not have excessive default capabilities.              </xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.6_Ensure_sensitive_host_system_directories_are_not_mounted_on_containers" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure sensitive host system directories are not mounted on containers</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>You should not allow sensitive host system directories such as those listed below to be mounted as container volumes, especially in read-write mode.</xhtml:p>
            <xhtml:code class="code_block">
/          <br/>
/boot          <br/>
/dev          <br/>
/etc          <br/>
/lib          <br/>
/lib64          <br/>
/proc          <br/>
/sys          <br/>
/usr
        </xhtml:code>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:control title="Data Protection" urn="urn:cisecurity.org:controls:8.0:3"/>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Data Protection" urn="urn:cisecurity.org:controls:7.0:13"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>If sensitive directories are mounted in read-write mode, it could be possible to make changes to files within them. This has obvious security implications and should be avoided.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/13" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/storage/volumes/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should not mount directories which are security sensitive on the host within containers, especially in read-write mode.</xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.7_Ensure_sshd_is_not_run_within_containers" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure sshd is not run within containers</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
The SSH daemon should not be running within the container. You should SSH into the Docker host, and use           <xhtml:span class="inline_block">docker exec</xhtml:span>
 to enter a container.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Uninstall or Disable Unnecessary Services on Enterprise Assets and Software" urn="urn:cisecurity.org:controls:8.0:4:8">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Devices</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Ensure Only Approved Ports, Protocols and Services Are Running" urn="urn:cisecurity.org:controls:7.0:9:2">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Devices</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Running SSH within the container increases the complexity of security management by making it</xhtml:p>
            <xhtml:ul>
               <xhtml:li>Difficult to manage access policies and security compliance for SSH server</xhtml:li>
               <xhtml:li>Difficult to manage keys and passwords across various containers</xhtml:li>
               <xhtml:li>Difficult to manage security upgrades for SSH server</xhtml:li>
            </xhtml:ul>
            <xhtml:p>It is possible to have shell access to a container without using SSH, the needlessly increasing the complexity of security management should be avoided.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/9/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4/subcontrol/8" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://jpetazzo.github.io/2014/06/23/docker-ssh-considered-evil/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
Uninstall the SSH daemon from the container and use and use               <xhtml:span class="inline_block">docker exec</xhtml:span>
 to enter a container on the remote host.            </xhtml:p>
                  <xhtml:code class="code_block">docker exec --interactive --tty &lt;CONTAINER ID&gt; sh
</xhtml:code>
                  <xhtml:p>OR</xhtml:p>
                  <xhtml:code class="code_block">docker attach &lt;CONTAINER ID&gt;
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.8_Ensure_privileged_ports_are_not_mapped_within_containers" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure privileged ports are not mapped within containers</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
The TCP/IP port numbers below           <xhtml:span class="inline_block">1024 </xhtml:span>
are considered privileged ports. Normal users and processes are not allowed to use them for various security reasons. Docker does, however allow a container port to be mapped to a privileged port.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Deploy Port-Level Access Control" urn="urn:cisecurity.org:controls:8.0:13:9">
                     <controls:implementation_groups ig3="true"/>
                     <controls:asset_type>Devices</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Ensure Only Approved Ports, Protocols and Services Are Running" urn="urn:cisecurity.org:controls:7.0:9:2">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Devices</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
By default, if the user does not specifically declare a container port to host port mapping, Docker automatically and correctly maps the container port to one available in the           <xhtml:span class="inline_block">49153-65535</xhtml:span>
 range on the host. Docker does, however, allow a container port to be mapped to a privileged port on the host if the user explicitly declares it. This is because containers are executed with           <xhtml:span class="inline_block">NET_BIND_SERVICE</xhtml:span>
 Linux kernel capability which does not restrict privileged port mapping. The privileged ports receive and transmit various pieces of data which are security sensitive and allowing containers to use them is not in line with good security practice.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/9/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/13/subcontrol/9" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/network/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should not map container ports to privileged host ports when starting a container. You should also, ensure that there is no such container to host privileged port mapping declarations in the Dockerfile.</xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.9_Ensure_that_only_needed_ports_are_open_on_the_container" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that only needed ports are open on the container</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The dockerfile for a container image defines the ports which are opened by default on a container instance. The list of ports are relevant to the application you are running within the container and should only be open if they are needed.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Deploy Port-Level Access Control" urn="urn:cisecurity.org:controls:8.0:13:9">
                     <controls:implementation_groups ig3="true"/>
                     <controls:asset_type>Devices</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Ensure Only Approved Ports, Protocols and Services Are Running" urn="urn:cisecurity.org:controls:7.0:9:2">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Devices</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>A container can be run with only the ports defined in the Dockerfile for its image or can alternatively be arbitrarily passed run time parameters to open a list of ports. Additionally, in the course of time, the Dockerfile may undergo various changes and the list of exposed ports may or may not still be relevant to the application you are running within the container. Opening unneeded ports increases the attack surface of the container and the associated containerized application. Good security practice is to only open ports that are needed for the correct operation of the application.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/9/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/13/subcontrol/9" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/userguide/networking/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
You should ensure that the Dockerfile for each container image only exposes needed ports. You can also completely ignore the list of ports defined in the Dockerfile by               <xhtml:strong>NOT</xhtml:strong>
 using               <xhtml:span class="inline_block">-P</xhtml:span>
 (UPPERCASE) or the               <xhtml:span class="inline_block">--publish-all</xhtml:span>
 flag when starting the container. Instead, use the               <xhtml:span class="inline_block">-p</xhtml:span>
 (lowercase) or               <xhtml:span class="inline_block">--publish</xhtml:span>
 flag to explicitly define the ports that you need for a particular container instance.            </xhtml:p>
                  <xhtml:p>For example:</xhtml:p>
                  <xhtml:code class="code_block">docker run --interactive --tty --publish 5000 --publish 5001 --publish 5002 centos /bin/bash
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.10_Ensure_that_the_hosts_network_namespace_is_not_shared" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that the host's network namespace is not shared</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
When the networking mode on a container is set to           <xhtml:span class="inline_block">--net=host</xhtml:span>
, the container is not placed inside a separate network stack. Effectively, applying this option instructs Docker to not containerize the container's networking. The consequence of this is that the container lives "outside" in the main Docker host and has full access to its network interfaces.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Establish and Maintain a Secure Network Architecture" urn="urn:cisecurity.org:controls:8.0:12:2">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Boundary Defense" urn="urn:cisecurity.org:controls:7.0:12"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
Selecting this option is potentially dangerous. It allows the container process to open reserved low numbered ports in the way that any other           <xhtml:span class="inline_block">root</xhtml:span>
 process can. It also allows the container to access network services such as D-bus on the Docker host.  A container process could potentially carry out undesired actions, such as shutting down the Docker host. This option should not be used unless there is a very specific reason for enabling it.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/12" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/12/subcontrol/2" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/network/</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/run/#network-settings</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
You should not pass the               <xhtml:span class="inline_block">--net=host</xhtml:span>
 option when starting any container.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.11_Ensure_that_the_memory_usage_for_containers_is_limited" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that the memory usage for containers is limited</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>By default, all containers on a Docker host share resources equally. By using the resource management capabilities of the Docker host, you can control the amount of memory that a container is able to use.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Segment Data Processing and Storage Based on Sensitivity" urn="urn:cisecurity.org:controls:8.0:3:12">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Application Software Security" urn="urn:cisecurity.org:controls:7.0:18"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>By default a container can use all of the memory on the host. You can use memory limit mechanisms to prevent a denial of service occurring where one container consumes all of the host’s resources and other containers on the same host are therefore not able to function. Having no limit on memory usage can lead to issues where one container can easily make the whole system unstable and as a result unusable.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/12" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/config/containers/resource_constraints/#limit-a-containers-access-to-memory</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/config/containers/runmetrics/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
You should run the container with only as much memory as it requires by using the               <xhtml:span class="inline_block">--memory</xhtml:span>
 argument.            </xhtml:p>
                  <xhtml:p>For example, you could run a container using the command below:</xhtml:p>
                  <xhtml:code class="code_block">docker run -d --memory 256m centos sleep 1000
</xhtml:code>
                  <xhtml:p>In the example above, the container is started with a memory limit of 256 MB.</xhtml:p>
                  <xhtml:p>Verify the memory settings by using the command below:</xhtml:p>
                  <xhtml:code class="code_block">docker inspect --format='{{ .Id }}: Memory={{.HostConfig.Memory}} KernelMemory={{.HostConfig.KernelMemory}} Swap={{.HostConfig.MemorySwap}}' &lt;CONTAINER ID&gt;
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>If correct memory limits are not set on each container, one process can expand its usage and cause other containers to run out of resources.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.12_Ensure_that_CPU_priority_is_set_appropriately_on_containers" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that CPU priority is set appropriately on containers</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>By default, all containers on a Docker host share resources equally. By using the resource management capabilities of the Docker host you can control the host CPU resources that a container may consume.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Segment Data Processing and Storage Based on Sensitivity" urn="urn:cisecurity.org:controls:8.0:3:12">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Application Software Security" urn="urn:cisecurity.org:controls:7.0:18"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>By default, CPU time is divided between containers equally. If you wish to control available CPU resources amongst container instances, you can use the CPU sharing feature. CPU sharing allows you to prioritize one container over others and prevents lower priority containers from absorbing CPU resources which may be required by other processes. This ensures that high priority containers are able to claim the CPU runtime they require.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/18" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/12" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/config/containers/resource_constraints/#cpu</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/run/#options</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/admin/runmetrics/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
You should manage the CPU runtime between your containers dependent on their priority within your organization. To do so start the container using the               <xhtml:span class="inline_block">--cpu-shares</xhtml:span>
 argument.            </xhtml:p>
                  <xhtml:p>For example, you could run a container as below:</xhtml:p>
                  <xhtml:code class="code_block">docker run -d --cpu-shares 512 centos sleep 1000
</xhtml:code>
                  <xhtml:p>In the example above, the container is started with CPU shares of 50% of what other containers use. So if the other container has CPU shares of 80%, this container will have CPU shares of 40%.</xhtml:p>
                  <xhtml:p>
Every new container will have               <xhtml:span class="inline_block">1024</xhtml:span>
 shares of CPU by default. However, this value is shown as               <xhtml:span class="inline_block">0</xhtml:span>
 if you run the command mentioned in the audit section.            </xhtml:p>
                  <xhtml:p>
If you set one container’s CPU shares to               <xhtml:span class="inline_block">512</xhtml:span>
 it will receive half of the CPU time compared to the other containers. So if you take               <xhtml:span class="inline_block">1024</xhtml:span>
 as 100% you can then derive the number that you should set for respective CPU shares. For example, use               <xhtml:span class="inline_block">512</xhtml:span>
 if you want to set it to 50% and               <xhtml:span class="inline_block">256</xhtml:span>
 if you want to set it 25%.            </xhtml:p>
                  <xhtml:p>
You can also view the current CPU shares in the file               <xhtml:span class="inline_block">/sys/fs/cgroup/cpu/docker/&lt;CONTAINER ID&gt;/cpu.shares</xhtml:span>
.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>If you do not correctly assign CPU thresholds, the container process may run out of resources and become unresponsive. If CPU resources on the host are not constrainted, CPU shares do not place any restrictions on individual resources.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.13_Ensure_that_the_containers_root_filesystem_is_mounted_as_read_only" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that the container's root filesystem is mounted as read only</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
The container's root filesystem should be treated as a 'golden image' by using Docker run's           <xhtml:span class="inline_block">--read-only</xhtml:span>
 option. This prevents any writes to the container's root filesystem at container runtime and enforces the principle of immutable infrastructure.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Define and Maintain Role-Based Access Control" urn="urn:cisecurity.org:controls:8.0:6:8">
                     <controls:implementation_groups ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Protect Information through  Access Control Lists" urn="urn:cisecurity.org:controls:7.0:14:6">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Enabling this option forces containers at runtime to explicitly define their data writing strategy to persist or not persist their data.</xhtml:p>
            <xhtml:p>This also reduces security attack vectors since the container instance's filesystem cannot be tampered with or written to unless it has explicit read-write permissions on its filesystem folder and directories.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/6/subcontrol/8" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/storage/volumes/</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/storage/volumes/#use-a-read-only-volume</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/run/#mount-tmpfs---tmpfs</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
You should add a               <xhtml:span class="inline_block">--read-only</xhtml:span>
 flag at a container's runtime to enforce the container's root filesystem being mounted as read only.            </xhtml:p>
                  <xhtml:code class="code_block">docker run &lt;Run arguments&gt; --read-only &lt;Container Image Name or ID&gt; &lt;Command&gt;
</xhtml:code>
                  <xhtml:p>
Enabling the               <xhtml:span class="inline_block">--read-only</xhtml:span>
 option at a container's runtime should be used by administrators to force a container's executable processes to only write container data to explicit storage locations during its lifetime.            </xhtml:p>
                  <xhtml:p>Examples of explicit storage locations during a container's runtime include, but are not limited to:</xhtml:p>
                  <xhtml:ol>
                     <xhtml:li>
Using the                 <xhtml:span class="inline_block">--tmpfs</xhtml:span>
 option to mount a temporary file system for non-persistent data writes.              </xhtml:li>
                  </xhtml:ol>
                  <xhtml:code class="code_block">docker run --interactive --tty --read-only --tmpfs "/run" --tmpfs "/tmp" centos /bin/bash
</xhtml:code>
                  <xhtml:ol start="2">
                     <xhtml:li>
Enabling Docker                 <xhtml:span class="inline_block">rw</xhtml:span>
 mounts at a container's runtime to persist container data directly on the Docker host filesystem.              </xhtml:li>
                  </xhtml:ol>
                  <xhtml:code class="code_block">docker run --interactive --tty --read-only -v /opt/app/data:/run/app/data:rw centos /bin/bash
</xhtml:code>
                  <xhtml:ol start="3">
                     <xhtml:li>Utilizing the Docker shared-storage volume plugin for Docker data volume to persist container data.</xhtml:li>
                  </xhtml:ol>
                  <xhtml:code class="code_block">docker volume create -d convoy --opt o=size=20GB my-named-volume
</xhtml:code>
                  <xhtml:code class="code_block">docker run --interactive --tty --read-only -v my-named-volume:/run/app/data centos /bin/bash
</xhtml:code>
                  <xhtml:ol start="3">
                     <xhtml:li>Transmitting container data outside of the Docker controlled area during the container's runtime for container data in order to ensure that it is persistent.  Examples include hosted databases, network file shares and APIs.</xhtml:li>
                  </xhtml:ol>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>
Enabling                 <xhtml:span class="inline_block">--read-only</xhtml:span>
 at container runtime may break some container OS packages if a data writing strategy is not defined.              </xhtml:p>
                     <xhtml:p>You should define what the container's data should and should not persist at runtime in order to decide which strategy to use.</xhtml:p>
                     <xhtml:p>Example:</xhtml:p>
                     <xhtml:ul>
                        <xhtml:li>
Enable use                   <xhtml:span class="inline_block">--tmpfs</xhtml:span>
 for temporary file writes to                   <xhtml:span class="inline_block">/tmp</xhtml:span>
                        </xhtml:li>
                        <xhtml:li>Use Docker shared data volumes for persistent data writes</xhtml:li>
                     </xhtml:ul>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.14_Ensure_that_incoming_container_traffic_is_bound_to_a_specific_host_interface" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that incoming container traffic is bound to a specific host interface</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>By default, Docker containers can make connections to the outside world, but the outside world cannot connect to containers and each outgoing connection will appear to originate from one of the host machine's own IP addresses. You should only allow container services to be contacted through a specific external interface on the host machine.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Implement and Manage a Firewall on Servers" urn="urn:cisecurity.org:controls:8.0:4:4">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Devices</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Secure Configuration for Network Devices, such as Firewalls, Routers and Switches" urn="urn:cisecurity.org:controls:7.0:11"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>If you have multiple network interfaces on your host machine, the container can accept connections on exposed ports on any network interface. This might not be desirable and may not be secured. In many cases a specific, desired interface is exposed externally and services such as intrusion detection, intrusion prevention, firewall, load balancing, etc. are all run by intention there to screen incoming public traffic. You should therefore not accept incoming connections on any random interface, but only the one designated for this type of traffic.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/11" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/network/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should bind the container port to a specific host interface on the desired host port.</xhtml:p>
                  <xhtml:p>For example,</xhtml:p>
                  <xhtml:code class="code_block">docker run --detach --publish 10.2.3.4:49153:80 nginx
</xhtml:code>
                  <xhtml:p>
In the example above, the container port               <xhtml:span class="inline_block">80</xhtml:span>
 is bound to the host port on               <xhtml:span class="inline_block">49153</xhtml:span>
 and would accept incoming connection only from the               <xhtml:span class="inline_block">10.2.3.4</xhtml:span>
 external interface.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.15_Ensure_that_the_on-failure_container_restart_policy_is_set_to_5" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that the 'on-failure' container restart policy is set to '5'</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
By using the           <xhtml:span class="inline_block">--restart</xhtml:span>
 flag in the           <xhtml:span class="inline_block">docker run</xhtml:span>
 command you can specify a restart policy for how a container should or should not be restarted on exit. You should choose the           <xhtml:span class="inline_block">on-failure</xhtml:span>
 restart policy and limit the restart attempts to           <xhtml:span class="inline_block">5</xhtml:span>
.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:control title="Secure Configuration of Enterprise Assets and Software" urn="urn:cisecurity.org:controls:8.0:4"/>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Maintain Secure Images" urn="urn:cisecurity.org:controls:7.0:5:2">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
If you indefinitely keep trying to start the container, it could possibly lead to a denial of service on the host. It could be an easy way to do a distributed denial of service attack especially if you have many containers on the same host. Additionally, ignoring the exit status of the container and always attempting to restart the container, leads to non-investigation of the root cause behind containers getting terminated. If a container gets terminated, you should investigate on the reason behind it instead of just attempting to restart it indefinitely.  You should use the           <xhtml:span class="inline_block">on-failure</xhtml:span>
 restart policy to limit the number of container restarts to a maximum of           <xhtml:span class="inline_block">5</xhtml:span>
 attempts.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/run/#restart-policies---restart</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>If you wish a container to be automatically restarted, a sample command is as below:</xhtml:p>
                  <xhtml:code class="code_block">docker run --detach --restart=on-failure:5 nginx
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>If this option is set, a container will only attempt to restart itself 5 times.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.16_Ensure_that_the_hosts_process_namespace_is_not_shared" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that the host's process namespace is not shared</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The Process ID (PID) namespace isolates the process ID space, meaning that processes in different PID namespaces can have the same PID. This creates process level isolation between the containers and the host.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Segment Data Processing and Storage Based on Sensitivity" urn="urn:cisecurity.org:controls:8.0:3:12">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Segment the Network Based on Sensitivity" urn="urn:cisecurity.org:controls:7.0:14:1">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
PID namespace provides separation between processes. It prevents system processes from being visible, and allows process ids to be reused including PID           <xhtml:span class="inline_block">1</xhtml:span>
. If the host's PID namespace is shared with containers, it would basically allow these to see all of the processes on the host system. This reduces the benefit of process level isolation between the host and the containers. Under these circumstances a malicious user who has access to a container could get access to processes on the host itself, manipulate them, and even be able to kill them.  This could allow for the host itself being shut down, which could be extremely serious, particularly in a multi-tenanted environment. You should not share the host's process namespace with the containers running on it.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/1" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/12" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/run/#pid-settings---pid</xccdf:ident>
         <xccdf:ident system="URL">https://man7.org/linux/man-pages/man7/pid_namespaces.7.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
You should not start a container with the               <xhtml:span class="inline_block">--pid=host</xhtml:span>
 argument.            </xhtml:p>
                  <xhtml:p>For example, do not start a container with the command below:</xhtml:p>
                  <xhtml:code class="code_block">docker run --interactive --tty --pid=host centos /bin/bash
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>
Container processes cannot see processes on the host system. In certain circumstances, you may want your container to share the host's process namespace. For example, you could build a container containing debugging tools such as                 <xhtml:span class="inline_block">strace</xhtml:span>
 or                 <xhtml:span class="inline_block">gdb</xhtml:span>
, and want to use these tools when debugging processes on the host. If this is desired, then share specific host processes using the                 <xhtml:span class="inline_block">-p</xhtml:span>
 switch.              </xhtml:p>
                     <xhtml:p>For example:</xhtml:p>
                     <xhtml:code class="code_block">docker run --pid=host rhel7 strace -p 1234
</xhtml:code>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.17_Ensure_that_the_hosts_IPC_namespace_is_not_shared" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that the host's IPC namespace is not shared</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>IPC (POSIX/SysV IPC) namespace provides separation of named shared memory segments, semaphores and message queues. The IPC namespace on the host should therefore not be shared with containers and should remain isolated.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Segment Data Processing and Storage Based on Sensitivity" urn="urn:cisecurity.org:controls:8.0:3:12">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Segment the Network Based on Sensitivity" urn="urn:cisecurity.org:controls:7.0:14:1">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The IPC namespace provides separation of IPC between the host and containers. If the host's IPC namespace is shared with the container, it would allow processes within the container to see all of IPC communications on the host system. This would remove the benefit of IPC level isolation between host and containers. An attacker with access to a container could get access to the host at this level with major consequences. The IPC namespace should therefore not be shared between the host and its containers.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/1" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/12" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/run/#ipc-settings---ipc</xccdf:ident>
         <xccdf:ident system="URL">https://www.man7.org/linux/man-pages/man7/ipc_namespaces.7.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
You should not start a container with the               <xhtml:span class="inline_block">--ipc=host</xhtml:span>
 argument. For example, do not start a container as below:            </xhtml:p>
                  <xhtml:code class="code_block">docker run --interactive --tty --ipc=host centos /bin/bash
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>Shared memory segments are used in order to accelerate interprocess communications, commonly in high-performance applications. If this type of application is containerized into multiple containers, you might need to share the IPC namespace of the containers in order to achieve high performance. Under these circumstances, you should still only share container specific IPC namespaces and not the host IPC namespace.</xhtml:p>
                     <xhtml:p>A container's IPC namespace can be shared with another container as shown below:</xhtml:p>
                     <xhtml:code class="code_block">docker run --interactive --tty --ipc=container:e3a7a1a97c58 centos /bin/bash
</xhtml:code>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.18_Ensure_that_host_devices_are_not_directly_exposed_to_containers" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that host devices are not directly exposed to containers</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Host devices can be directly exposed to containers at runtime. Do not directly expose host devices to containers, especially to containers that are not trusted.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Restrict Administrator Privileges to Dedicated Administrator Accounts" urn="urn:cisecurity.org:controls:8.0:5:4">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Access Based on the Need to Know" urn="urn:cisecurity.org:controls:7.0:14"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
The           <xhtml:span class="inline_block">--device</xhtml:span>
 option exposes host devices to containers and as a result of this, containers can directly access these devices. The the container would not need to run in           <xhtml:span class="inline_block">privileged</xhtml:span>
 mode to access and manipulate them, as by default, the container is granted this type of access. Additionally, it would possible for containers to remove block devices from the host. You therefore should not expose host devices to containers directly.        </xhtml:p>
            <xhtml:p>If for some reason you wish to expose the host device to a container you should consider which sharing permissions you wish to use on a case by case base as appropriate to your organization:</xhtml:p>
            <xhtml:ul>
               <xhtml:li>r - read only</xhtml:li>
               <xhtml:li>w - writable</xhtml:li>
               <xhtml:li>m - mknod allowed</xhtml:li>
            </xhtml:ul>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/run/#add-host-device-to-container---device</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should not directly expose host devices to containers. If you do need to expose host devices to containers, you should use granular permissions as appropriate to your organization:</xhtml:p>
                  <xhtml:p>For example, do not start a container using the command below:</xhtml:p>
                  <xhtml:code class="code_block">docker run --interactive --tty --device=/dev/tty0:/dev/tty0:rwm --device=/dev/temp_sda:/dev/temp_sda:rwm centos bash
</xhtml:code>
                  <xhtml:p>You should only share the host device using appropriate permissions:</xhtml:p>
                  <xhtml:code class="code_block">docker run --interactive --tty --device=/dev/tty0:/dev/tty0:rw --device=/dev/temp_sda:/dev/temp_sda:r centos bash
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>You would not be able to use host devices directly within containers.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.19_Ensure_that_the_default_ulimit_is_overwritten_at_runtime_if_needed" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that the default ulimit is overwritten at runtime if needed</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The default ulimit is set at the Docker daemon level. However, if you need to, you may override the default ulimit setting during container runtime.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Segment Data Processing and Storage Based on Sensitivity" urn="urn:cisecurity.org:controls:8.0:3:12">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Maintain Secure Images" urn="urn:cisecurity.org:controls:7.0:5:2">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
               <xhtml:span class="inline_block">ulimit</xhtml:span>
 provides control over the resources available to the shell and to processes started by it. Setting system resource limits in a prudent fashion, protects against denial of service conditions. On occasion, legitimate users and processes can accidentally overuse system resources and cause systems be degraded or even unresponsive.        </xhtml:p>
            <xhtml:p>The default ulimit set at the Docker daemon level should be honored. If the default ulimit settings are not appropriate for a particular container instance, you may override them as an exception, but this should not be done routinely.  If many of your container instances are exceeding your ulimit settings, you should consider changing the default settings to something that is more appropriate for your needs.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/12" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/run/#set-ulimits-in-container---ulimit</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should only override the default ulimit settings if needed in a specific case.</xhtml:p>
                  <xhtml:p>For example, to override default ulimit settings start a container as below:</xhtml:p>
                  <xhtml:code class="code_block">docker run -ti -d --ulimit nofile=1024:1024 centos sleep 1000
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>If ulimits are not set correctly, overutilization by individual containers could make the host system unusable.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.20_Ensure_mount_propagation_mode_is_not_set_to_shared" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure mount propagation mode is not set to shared</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Mount propagation mode allows mounting volumes in shared, slave or private mode on a container. Do not use shared mount propagation mode unless explicitly needed.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:control title="Data Protection" urn="urn:cisecurity.org:controls:8.0:3"/>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Data Protection" urn="urn:cisecurity.org:controls:7.0:13"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>A shared mount is replicated at all mounts and changes made at any mount point are propagated to all other mount points.</xhtml:p>
            <xhtml:p>Mounting a volume in shared mode does not restrict any other container from mounting and making changes to that volume.</xhtml:p>
            <xhtml:p>As this is likely not a desirable option from a security standpoint, this feature should not be used unless explicitly required.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/13" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/storage/bind-mounts/#configure-bind-propagation</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/run/#volume-shared-filesystems</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Do not mount volumes in shared mode propagation.</xhtml:p>
                  <xhtml:p>For example, do not start a container as below:</xhtml:p>
                  <xhtml:code class="code_block">docker run &lt;Run arguments&gt; --volume=/hostPath:/containerPath:shared &lt;Container Image Name or ID&gt; &lt;Command&gt; 
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.21_Ensure_that_the_hosts_UTS_namespace_is_not_shared" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that the host's UTS namespace is not shared</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>UTS namespaces provide isolation between two system identifiers: the hostname and the NIS domain name. It is used to set the hostname and the domain which are visible to running processes in that namespace. Processes running within containers do not typically require to know either the hostname or the domain name. The UTS namespace should therefore not be shared with the host.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Perform Traffic Filtering Between Network Segments" urn="urn:cisecurity.org:controls:8.0:13:4">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Segment the Network Based on Sensitivity" urn="urn:cisecurity.org:controls:7.0:14:1">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Sharing the UTS namespace with the host provides full permission for each container to change the hostname of the host. This is not in line with good security practice and should not be permitted.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/1" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/13/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/run/#uts-settings---uts</xccdf:ident>
         <xccdf:ident system="URL">https://www.man7.org/linux/man-pages/man7/uts_namespaces.7.html</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
You should not start a container with the               <xhtml:span class="inline_block">--uts=host</xhtml:span>
 argument.            </xhtml:p>
                  <xhtml:p>For example, do not start a container using the command below:</xhtml:p>
                  <xhtml:code class="code_block">docker run --rm --interactive --tty --uts=host rhel7.2
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.22_Ensure_the_default_seccomp_profile_is_not_Disabled" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure the default seccomp profile is not Disabled</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Seccomp filtering provides a means for a process to specify a filter for incoming system calls. The default Docker seccomp profile works on a whitelist basis and allows for a large number of common system calls, whilst blocking all others.  This filtering should not be disabled unless it causes a problem with your container application usage.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Implement and Manage a Firewall on Servers" urn="urn:cisecurity.org:controls:8.0:4:4">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Devices</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Implement Application Firewalls" urn="urn:cisecurity.org:controls:7.0:9:5">
                     <controls:implementation_groups ig3="true"/>
                     <controls:asset_type>Devices</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>A large number of system calls are exposed to every userland process with many of them going unused for the entire lifetime of the process. Most of applications do not need all these system calls and would therefore benefit from having a reduced set of available system calls. Having a reduced set of system calls reduces the total kernel surface exposed to the application and thus improvises application security.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/9/subcontrol/5" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/run/#security-configuration</xccdf:ident>
         <xccdf:ident system="URL">https://github.com/moby/moby/blob/master/profiles/seccomp/default.json</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/security/seccomp/</xccdf:ident>
         <xccdf:ident system="URL">https://www.kernel.org/doc/Documentation/prctl/seccomp_filter.txt</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>By default, seccomp profiles are enabled. You do not need to do anything unless you want to modify and use a modified seccomp profile.</xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>
With Docker 1.10 and greater, the default seccomp profile blocks syscalls, regardless of                 <xhtml:span class="inline_block">--cap-add</xhtml:span>
 passed to the container. You should create your own custom seccomp profile in such cases. You may also disable the default seccomp profile by passing                 <xhtml:span class="inline_block">--security-opt=seccomp:unconfined</xhtml:span>
 on                 <xhtml:span class="inline_block">docker run</xhtml:span>
.              </xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.23_Ensure_that__docker_exec_commands_are_not_used_with_the_privileged_option" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that  docker exec commands are not used with the privileged option</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should not use           <xhtml:span class="inline_block">docker exec</xhtml:span>
 with the           <xhtml:span class="inline_block">--privileged</xhtml:span>
 option.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Restrict Administrator Privileges to Dedicated Administrator Accounts" urn="urn:cisecurity.org:controls:8.0:5:4">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
Using the           <xhtml:span class="inline_block">--privileged</xhtml:span>
 option in           <xhtml:span class="inline_block">docker exec</xhtml:span>
 commands gives extended Linux capabilities to the command. This could potentially be an insecure practice, particularly when you are running containers with reduced capabilities or with enhanced restrictions.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/exec/</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
You should not use the               <xhtml:span class="inline_block">--privileged</xhtml:span>
 option in               <xhtml:span class="inline_block">docker exec</xhtml:span>
 commands.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>If you need enhanced capabilities within a container, then run it with all the permissions it requires.  These  should be specified individually.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.24_Ensure_that_docker_exec_commands_are_not_used_with_the_userroot_option" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that docker exec commands are not used with the user=root option</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should not use           <xhtml:span class="inline_block">docker exec</xhtml:span>
 with the           <xhtml:span class="inline_block">--user=root</xhtml:span>
 option.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Restrict Administrator Privileges to Dedicated Administrator Accounts" urn="urn:cisecurity.org:controls:8.0:5:4">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
Using the           <xhtml:span class="inline_block">--user=root</xhtml:span>
 option in a           <xhtml:span class="inline_block">docker exec</xhtml:span>
 command, executes it within the container as the root user. This could potentially be insecure, particularly when you are running containers with reduced capabilities or enhanced restrictions.        </xhtml:p>
            <xhtml:p>
For example, if your container is running as a tomcat user (or any other non-root user), it would be possible to run a command through           <xhtml:span class="inline_block">docker exec</xhtml:span>
 as           <xhtml:span class="inline_block">root </xhtml:span>
with the           <xhtml:span class="inline_block">--user=root</xhtml:span>
 option. This could potentially be dangerous.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/exec/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
You should not use the               <xhtml:span class="inline_block">--user=root</xhtml:span>
 option in               <xhtml:span class="inline_block">docker exec</xhtml:span>
 commands.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.25_Ensure_that_cgroup_usage_is_confirmed" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that cgroup usage is confirmed</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>It is possible to attach to a particular cgroup when a container is instantiated. Confirming cgroup usage would ensure that containers are running in defined cgroups.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Configure Data Access Control Lists" urn="urn:cisecurity.org:controls:8.0:3:3">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Protect Information through  Access Control Lists" urn="urn:cisecurity.org:controls:7.0:14:6">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
System administrators typically define cgroups in which containers are supposed to run. If cgroups are not explicitly defined by the system administrator, containers run in the           <xhtml:span class="inline_block">docker</xhtml:span>
 cgroup by default.        </xhtml:p>
            <xhtml:p>At run time, it is possible to attach a container to a different cgroup other than the one originally defined. This usage should be monitored and confirmed, as by attaching to a different cgroup, excess permissions and resources might be granted to the container and this can therefore prove to be a security risk.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/6" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/3" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/run/#specify-custom-cgroups</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
You should not use the               <xhtml:span class="inline_block">--cgroup-parent</xhtml:span>
 option within the               <xhtml:span class="inline_block">docker run</xhtml:span>
 command unless strictly required.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.26_Ensure_that__the_container_is_restricted_from_acquiring_additional_privileges" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that  the container is restricted from acquiring additional privileges</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>You should restrict the container from acquiring additional privileges via suid or sgid bits.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Restrict Administrator Privileges to Dedicated Administrator Accounts" urn="urn:cisecurity.org:controls:8.0:5:4">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
A process can set the           <xhtml:span class="inline_block">no_new_priv</xhtml:span>
 bit in the kernel and this persists across forks, clones and execve. The           <xhtml:span class="inline_block">no_new_priv</xhtml:span>
 bit ensures that the process and its child processes do not gain any additional privileges via suid or sgid bits. This reduces the danger associated with many operations because the possibility of subverting privileged binaries is lessened.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/run/#security-configuration</xccdf:ident>
         <xccdf:ident system="URL">https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should start your container with the options below:</xhtml:p>
                  <xhtml:code class="code_block">docker run --rm -it --security-opt=no-new-privileges ubuntu bash
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>
The                 <xhtml:span class="inline_block">no_new_priv</xhtml:span>
 option prevents LSMs like SELinux from allowing processes to acquire new privileges              </xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.27_Ensure_that_container_health_is_checked_at_runtime" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that container health is checked at runtime</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
If the container image does not have an           <xhtml:span class="inline_block">HEALTHCHECK</xhtml:span>
 instruction defined, you should use the           <xhtml:span class="inline_block">--health-cmd</xhtml:span>
 parameter at container runtime to check container health.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Enable Anti-Exploitation Features" urn="urn:cisecurity.org:controls:8.0:10:5">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Devices</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Run Automated Vulnerability Scanning Tools" urn="urn:cisecurity.org:controls:7.0:3:1">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Detect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
If the container image you are using does not have a pre-defined           <xhtml:span class="inline_block">HEALTHCHECK</xhtml:span>
 instruction, use the           <xhtml:span class="inline_block">--health-cmd</xhtml:span>
 parameter to check container health at runtime.        </xhtml:p>
            <xhtml:p>Based on the reported health status, remedial actions can be taken if necessary.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/10/subcontrol/5" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/3/subcontrol/1" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/run/#healthcheck</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
You should run the container using the               <xhtml:span class="inline_block">--health-cmd</xhtml:span>
 parameter.            </xhtml:p>
                  <xhtml:p>For example:</xhtml:p>
                  <xhtml:code class="code_block">docker run -d --health-cmd='stat /etc/passwd || exit 1' nginx
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.28_Ensure_that_Docker_commands_always_make_use_of_the_latest_version_of_their_image" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that Docker commands always make use of the latest version of their image</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>You should always ensure that you are using the latest version of the images within your repository and not cached older versions.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:control title="Application Software Security" urn="urn:cisecurity.org:controls:8.0:16"/>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Maintain Secure Images" urn="urn:cisecurity.org:controls:7.0:5:2">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
Multiple Docker commands such as           <xhtml:span class="inline_block">docker pull</xhtml:span>
,           <xhtml:span class="inline_block">docker run</xhtml:span>
 etc. are known to have an issue where by default, they extract the local copy of the image, if present, even though there is an updated version of the image with the same tag in the upstream repository. This could lead to using older images containing known vulnerabilites.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/pull/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should use proper version pinning mechanisms (the "latest" tag which is assigned by default is still vulnerable to caching attacks) to avoid extracting cached older versions. Version pinning mechanisms should be used for base images, packages, and entire images. You can customize version pinning rules according to your requirements.</xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.29_Ensure_that_the_PIDs_cgroup_limit_is_used" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that the PIDs cgroup limit is used</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should use the           <xhtml:span class="inline_block">--pids-limit</xhtml:span>
 flag at container runtime.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:control title="Secure Configuration of Enterprise Assets and Software" urn="urn:cisecurity.org:controls:8.0:4"/>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Maintain Secure Images" urn="urn:cisecurity.org:controls:7.0:5:2">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
Attackers could launch a fork bomb with a single command inside the container. This fork bomb could crash the entire system and would require a restart of the host to make the system functional again. Using the PIDs cgroup parameter           <xhtml:span class="inline_block">--pids-limit</xhtml:span>
 would prevent this kind of attack by restricting the number of forks that can happen inside a container within a specified time frame.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/2" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/run/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
Use               <xhtml:span class="inline_block">--pids-limit</xhtml:span>
 flag with an appropriate value when launching the container.            </xhtml:p>
                  <xhtml:p>For example:</xhtml:p>
                  <xhtml:code class="code_block">docker run -it --pids-limit 100 &lt;Image ID&gt;
</xhtml:code>
                  <xhtml:p>In the above example, the number of processes allowed to run at any given time is set to 100. After a limit of 100 concurrently running processes is reached, Docker would restrict any new process creation.</xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>Set the PIDs limit value as appropriate. Incorrect values might leave containers unusable.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.30_Ensure_that_Dockers_default_bridge_docker0_is_not_used" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that Docker's default bridge "docker0" is not used</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
You should not use Docker's default bridge           <xhtml:span class="inline_block">docker0</xhtml:span>
. Instead you should use Docker's user-defined networks for container networking.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Uninstall or Disable Unnecessary Services on Enterprise Assets and Software" urn="urn:cisecurity.org:controls:8.0:4:8">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Devices</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:6.0">
                  <controls:control title="Limitation and Control of Network Ports, Protocols, and Services" urn="urn:cisecurity.org:controls:6.0:9"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
Docker connects virtual interfaces created in bridge mode to a common bridge called           <xhtml:span class="inline_block">docker0</xhtml:span>
. This default networking model is vulnerable to ARP spoofing and MAC flooding attacks as there is no filtering applied to it.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc6:controlURI="http://cisecurity.org/20-cc/v6.0/control/9" system="http://cisecurity.org/20-cc/v6.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4/subcontrol/8" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/network/bridge/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should follow the Docker documentation and set up a user-defined network. All the containers should be run in this network.</xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>User-defined networks need to be configured and managed in line with organizational security policy.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.31_Ensure_that_the_hosts_user_namespaces_are_not_shared" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that the host's user namespaces are not shared</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>You should not share the host's user namespaces with containers running on it.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Segment Data Processing and Storage Based on Sensitivity" urn="urn:cisecurity.org:controls:8.0:3:12">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Boundary Defense" urn="urn:cisecurity.org:controls:7.0:12"/>
                  <controls:safeguard title="Segment the Network Based on Sensitivity" urn="urn:cisecurity.org:controls:7.0:14:1">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>User namespaces ensure that a root process inside the container will be mapped to a non-root process outside the container. Sharing the user namespaces of the host with the container does not therefore isolate users on the host from users in the containers.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/12" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/1" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/12" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/security/userns-remap/</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/run/#options</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should not share user namespaces between host and containers.</xhtml:p>
                  <xhtml:p>For example, you should not run the command below:</xhtml:p>
                  <xhtml:code class="code_block">docker run --rm -it --userns=host ubuntu bash
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.32_Ensure_that_the_Docker_socket_is_not_mounted_inside_any_containers" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that the Docker socket is not mounted inside any containers</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
The Docker socket           <xhtml:span class="inline_block">docker.sock</xhtml:span>
 should not be mounted inside a container.        </xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Restrict Administrator Privileges to Dedicated Administrator Accounts" urn="urn:cisecurity.org:controls:8.0:5:4">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Controlled Use of Administrative Privileges" urn="urn:cisecurity.org:controls:7.0:4"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>If the Docker socket is mounted inside a container it could allow processes running within the container to execute Docker commands which would effectively allow for full control of the host.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
You should ensure that no containers mount               <xhtml:span class="inline_block">docker.sock</xhtml:span>
 as a volume.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_6_Docker_Security_Operations">
      <xccdf:title xml:lang="en">Docker Security Operations</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>This section covers some of the operational security issues associated with Docker deployments. These are best practices that should be followed where possible. Most of the recommendations in this section simply act as reminders that organizations should extend their current security best practices and policies to include containers.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.1_Ensure_that_image_sprawl_is_avoided" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that image sprawl is avoided</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>You should not keep a large number of container images on the same host. Use only tagged images as appropriate.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Apply Secure Design Principles in Application Architectures" urn="urn:cisecurity.org:controls:8.0:16:10">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Securely Store Master Images" urn="urn:cisecurity.org:controls:7.0:5:3">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Tagged images are useful if you need to fall back from the "latest" version to a specific version of an image in production. Images with unused or old tags may contain vulnerabilities that might be exploited if instantiated.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/16/subcontrol/10" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/3" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/config/pruning/</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/rmi/</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/pull/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should keep only the images that you actually need and establish a workflow to remove old or stale images from the host. Additionally, you should use features such as pull-by-digest to get specific images from the registry.</xhtml:p>
                  <xhtml:p>You can follow the steps below to find unused images on the system so they can be deleted.</xhtml:p>
                  <xhtml:p>
                     <xhtml:strong>Step 1</xhtml:strong>
 Make a list of all image IDs that are currently instantiated by executing the command below:            </xhtml:p>
                  <xhtml:code class="code_block">docker images --quiet | xargs docker inspect --format '{{ .Id }}: Image={{ .Config.Image }}'
</xhtml:code>
                  <xhtml:p>
                     <xhtml:strong>Step 2</xhtml:strong>
: List all the images present on the system by executing the command below:            </xhtml:p>
                  <xhtml:code class="code_block">docker images
</xhtml:code>
                  <xhtml:p>
                     <xhtml:strong>Step 3</xhtml:strong>
: Compare the list of image IDs created from Step 1 and Step 2 to find out images which are currently not being instantiated.            </xhtml:p>
                  <xhtml:p>
                     <xhtml:strong>Step 4</xhtml:strong>
: Decide if you want to keep the images that are not currently in use. If they are not needed, delete them by executing the following command:            </xhtml:p>
                  <xhtml:code class="code_block">docker rmi &lt;IMAGE ID&gt;
</xhtml:code>
                  <xhtml:p>
Alternatively, the               <xhtml:span class="inline_block">docker system prune</xhtml:span>
 command can be used to remove dangling images which are not tagged or, if necessary, all images that are not currently used by a running container when used with the               <xhtml:span class="inline_block">-a</xhtml:span>
 option.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>
                        <xhtml:span class="inline_block">docker system prune -a</xhtml:span>
 removes all exited containers as well as all images and volumes that are not referenced by running containers.
If any images are removed, this would result in needing to reload the images to the host.              </xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.2_Ensure_that_container_sprawl_is_avoided" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that container sprawl is avoided</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>You should not keep a large number of containers on the same host.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Segment Data Processing and Storage Based on Sensitivity" urn="urn:cisecurity.org:controls:8.0:3:12">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
                  <controls:control title="Secure Configuration of Enterprise Assets and Software" urn="urn:cisecurity.org:controls:8.0:4"/>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Establish Secure Configurations" urn="urn:cisecurity.org:controls:7.0:5:1">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The flexibility of containers makes it easy to run multiple instances of applications and therefore indirectly leads to Docker images that can exist at varying security patch levels. It also means that you are consuming host resources that otherwise could have been used for running 'useful' containers. Having more than just an essential number of containers on a particular host makes the system vulnerable to mishandling, misconfiguration and fragmentation. You should therefore keep the number of containers on a given host to the minimum number commensurate with serving production applications.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/12" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/1" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/config/pruning/#prune-containers</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should periodically check your container inventory on each host and clean up containers which are not in active use with the command below:</xhtml:p>
                  <xhtml:code class="code_block">docker container prune
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>You should retain containers that are actively in use, and delete ones which are no longer needed.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_7_Docker_Swarm_Configuration">
      <xccdf:title xml:lang="en">Docker Swarm Configuration</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>This section lists the recommendations that alter and secure the behavior of the Docker Swarm. If you are not using Docker Swarm then the recommendations in this section do not apply.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.1_Ensure_that_the_minimum_number_of_manager_nodes_have_been_created_in_a_swarm" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that the minimum number of manager nodes have been created in a swarm</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>You should ensure that the minimum number of required manager nodes is created in a swarm.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:control title="Secure Configuration of Enterprise Assets and Software" urn="urn:cisecurity.org:controls:8.0:4"/>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Establish Secure Configurations" urn="urn:cisecurity.org:controls:7.0:5:1">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Manager nodes within a swarm have control over the swarm and can change its configuration, including modifying security parameters. Having excessive manager nodes could render the swarm more susceptible to compromise.</xhtml:p>
            <xhtml:p>If fault tolerance is not required in the manager nodes, a single node should be elected as a manger. If fault tolerance is required then the smallest odd number to achieve the appropriate level of tolerance should be configured.  This should always be an odd number in order to ensure that a quorum is reached.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/1" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/swarm/manage-nodes/</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/swarm/admin_guide/#add-manager-nodes-for-fault-tolerance</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>If an excessive number of managers is configured, the excess nodes can be demoted to workers using the following command:</xhtml:p>
                  <xhtml:code class="code_block">docker node demote &lt;ID&gt; 
</xhtml:code>
                  <xhtml:p>Where &lt;ID&gt; is the node ID value of the manager to be demoted.</xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.2_Ensure_that_swarm_services_are_bound_to_a_specific_host_interface" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that swarm services are bound to a specific host interface</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>By default, Docker swarm services will listen on all interfaces on the host.  This may not be necessary for the operation of the swarm where the host has multiple network interfaces.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Implement and Manage a Firewall on Servers" urn="urn:cisecurity.org:controls:8.0:4:4">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Devices</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:control title="Limitation and Control of Network Ports, Protocols, and Services" urn="urn:cisecurity.org:controls:7.0:9"/>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
When a swarm is initialized the default value for the           <xhtml:span class="inline_block">--listen-addr</xhtml:span>
 flag is           <xhtml:span class="inline_block">0.0.0.0:2377</xhtml:span>
 which means that swarm services will listen on all interfaces on the host. If a host has multiple network interfaces this may be undesirable as it could expose swarm services to networks which are not involved with the operation of the swarm.        </xhtml:p>
            <xhtml:p>
By passing a specific IP address to the           <xhtml:span class="inline_block">--listen-addr</xhtml:span>
, a specific network interface can be specified, limiting this exposure.        </xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/9" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/swarm_init/#--listen-addr</xccdf:ident>
         <xccdf:ident system="URL">https://docs.docker.com/engine/swarm/admin_guide/#recover-from-disaster</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
Resolving this issues requires re-initialization of the swarm, specifying a specific interface for the               <xhtml:span class="inline_block">--listen-addr</xhtml:span>
 parameter.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.3_Ensure_that_all_Docker_swarm_overlay_networks_are_encrypted" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that all Docker swarm overlay networks are encrypted</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Ensure that all Docker swarm overlay networks are encrypted.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Encrypt Sensitive Data in Transit" urn="urn:cisecurity.org:controls:8.0:3:10">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Encrypt All Sensitive Information in Transit" urn="urn:cisecurity.org:controls:7.0:14:4">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>By default, data exchanged between containers on nodes on the overlay network is not encrypted. This could potentially expose traffic between containers.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/10" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/network/overlay/#encrypt-traffic-on-an-overlay-network</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
You should create overlay networks the with               <xhtml:span class="inline_block">--opt encrypted</xhtml:span>
 flag.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.4_Ensure_that_Dockers_secret_management_commands_are_used_for_managing_secrets_in_a_swarm_cluster" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that Docker's secret management commands are used for managing secrets in a swarm cluster</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>You should use Docker's in-built secret management command for control of secrets.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:control title="Secure Configuration of Enterprise Assets and Software" urn="urn:cisecurity.org:controls:8.0:4"/>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Establish Secure Configurations" urn="urn:cisecurity.org:controls:7.0:5:1">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Applications</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Docker has various commands for managing secrets in a swarm cluster.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/5/subcontrol/1" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/secret/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>
You should follow the               <xhtml:span class="inline_block">docker secret</xhtml:span>
 documentation and use it to manage secrets effectively.            </xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.5_Ensure_that_swarm_manager_is_run_in_auto-lock_mode" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that swarm manager is run in auto-lock mode</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>You should review whether you wish to run Docker swarm manager in auto-lock mode.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Encrypt Sensitive Data at Rest" urn="urn:cisecurity.org:controls:8.0:3:11">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Encrypt Sensitive Information at Rest" urn="urn:cisecurity.org:controls:7.0:14:8">
                     <controls:implementation_groups ig3="true"/>
                     <controls:asset_type>Data</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
When Docker restarts, both the TLS key used to encrypt communication among swarm nodes, and the key used to encrypt and decrypt Raft logs on disk, are loaded into each manager node's memory. You could protect the mutual TLS encryption key and the key used to encrypt and decrypt Raft logs at rest. This protection could be enabled by initializing the swarm with the           <xhtml:span class="inline_block">--autolock</xhtml:span>
 flag.        </xhtml:p>
            <xhtml:p>
With           <xhtml:span class="inline_block">--autolock </xhtml:span>
enabled, when Docker restarts, you must unlock the swarm first, using a key encryption key generated by Docker when the swarm was initialized.        </xhtml:p>
            <xhtml:p>This has benefits in a high security environment, however these should be balanced against the support issues caused by the swarm not starting automatically if, for example the host were to experience an outage.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/8" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/3/subcontrol/11" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/swarm/swarm_manager_locking/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>If you are initializing a swarm, use the command below.</xhtml:p>
                  <xhtml:code class="code_block">docker swarm init --autolock
</xhtml:code>
                  <xhtml:p>
If you want to set               <xhtml:span class="inline_block">--autolock</xhtml:span>
 on an existing swarm manager node, use the following command.            </xhtml:p>
                  <xhtml:code class="code_block">docker swarm update --autolock
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>A swarm in auto-lock mode will not recover from a restart without manual intervention from an administrator to enter the unlock key.  This may not always be desirable, and should be reviewed at a policy level.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.6_Ensure_that_the_swarm_manager_auto-lock_key_is_rotated_periodically" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that the swarm manager auto-lock key is rotated periodically</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>You should rotate the swarm manager auto-lock key periodically.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Use Unique Passwords" urn="urn:cisecurity.org:controls:8.0:5:2">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Use Unique Passwords" urn="urn:cisecurity.org:controls:7.0:4:4">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The swarm manager auto-lock key is not automatically rotated. Good security practice is to rotate keys.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/2" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/swarm_unlock-key/</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should run the command below to rotate the keys.</xhtml:p>
                  <xhtml:code class="code_block">docker swarm unlock-key --rotate
</xhtml:code>
                  <xhtml:p>Additionally, to facilitate auditing of this recommendation, you should maintain key rotation records and ensure that you establish a pre-defined frequency for key rotation.</xhtml:p>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.7_Ensure_that_node_certificates_are_rotated_as_appropriate" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that node certificates are rotated as appropriate</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>You should rotate swarm node certificates in line with your organizational security policy.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Use Unique Passwords" urn="urn:cisecurity.org:controls:8.0:5:2">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Use Unique Passwords" urn="urn:cisecurity.org:controls:7.0:4:4">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Docker Swarm uses TLS for clustering operations between its nodes. Certificate rotation ensures that in an event such as a compromised node or key, it is difficult to impersonate a node. By default, node certificates are rotated every 90 days, but you should rotate them more often or as appropriate in your environment.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/2" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/swarm_update/#examples</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should run the command to set the desired expiry time on the node certificate.</xhtml:p>
                  <xhtml:p>For example:</xhtml:p>
                  <xhtml:code class="code_block">docker swarm update --cert-expiry 48h
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.8_Ensure_that_CA_certificates_are_rotated_as_appropriate" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that CA certificates are rotated as appropriate</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>You should rotate root CA certificates as appropriate.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Use Unique Passwords" urn="urn:cisecurity.org:controls:8.0:5:2">
                     <controls:implementation_groups ig1="true" ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Use Unique Passwords" urn="urn:cisecurity.org:controls:7.0:4:4">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Users</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Docker Swarm uses TLS for clustering operations between its nodes. Certificate rotation ensures that in an event such as a compromised node or key, it is difficult to impersonate a node. Node certificates depend upon root CA certificates. For operational security, it is important to rotate these frequently. Currently, root CA certificates are not rotated automatically and you should therefore establish a process for rotating them in line with your organizational security policy.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/4/subcontrol/4" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/5/subcontrol/2" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/swarm/how-swarm-mode-works/pki/#rotating-the-ca-certificate</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should run the command below to rotate a certificate.</xhtml:p>
                  <xhtml:code class="code_block">docker swarm ca --rotate
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>None</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.9_Ensure_that_management_plane_traffic_is_separated_from_data_plane_traffic" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Ensure that management plane traffic is separated from data plane traffic</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>You should separate management plane traffic from data plane traffic.</xhtml:p>
         </xccdf:description>
         <xccdf:metadata>
            <controls:cis_controls xmlns:controls="http://cisecurity.org/controls">
               <controls:framework urn="urn:cisecurity.org:controls:8.0">
                  <controls:safeguard title="Perform Traffic Filtering Between Network Segments" urn="urn:cisecurity.org:controls:8.0:13:4">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
               <controls:framework urn="urn:cisecurity.org:controls:7.0">
                  <controls:safeguard title="Segment the Network Based on Sensitivity" urn="urn:cisecurity.org:controls:7.0:14:1">
                     <controls:implementation_groups ig2="true" ig3="true"/>
                     <controls:asset_type>Network</controls:asset_type>
                     <controls:security_function>Protect</controls:security_function>
                  </controls:safeguard>
               </controls:framework>
            </controls:cis_controls>
         </xccdf:metadata>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Separating management plane traffic from data plane traffic ensures that these types of traffic are segregated from each other. These traffic flows can then be individually monitored and tied to different traffic control policies and monitoring. This also ensures that the management plane is always reachable even if there is a great deal of traffic on the data plane.</xhtml:p>
         </xccdf:rationale>
         <xccdf:ident cc7:controlURI="http://cisecurity.org/20-cc/v7.0/control/14/subcontrol/1" system="http://cisecurity.org/20-cc/v7.0"/>
         <xccdf:ident cc8:controlURI="http://cisecurity.org/20-cc/v8.0/control/13/subcontrol/4" system="http://cisecurity.org/20-cc/v8.0"/>
         <xccdf:ident system="URL">https://docs.docker.com/engine/reference/commandline/swarm_init/#--data-path-addr</xccdf:ident>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>You should initialize the swarm with dedicated interfaces for management and data planes respectively.</xhtml:p>
                  <xhtml:p>For example,</xhtml:p>
                  <xhtml:code class="code_block">docker swarm init --advertise-addr=192.168.0.1 --data-path-addr=17.1.0.3
</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>This requires two network interfaces per node.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
   </xccdf:Group>
<xccdf:signature><ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
<ds:SignedInfo>
<ds:CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>
<ds:SignatureMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"/>
<ds:Reference URI="">
<ds:Transforms>
<ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>
<ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/>
</ds:Transforms>
<ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
<ds:DigestValue>DgH18DPTZavXX7nkc8GGEvqUL7O4R6NBYtzwZI14FBQ=</ds:DigestValue>
</ds:Reference>
</ds:SignedInfo>
<ds:SignatureValue>
OVkz96w7ccrqzvYeAo8Oq4qVgIvW7Z+UDVREwGHvMG3Po0tBwxN/4vQPOwc3rbxxpcKHzaK3N6+v
UWecYDbqMca6mNU6soVGsD834VRu7Y8cyA3g2JoRPgDnHKNGcqjWwSuUc+Kv6N5DdSrXn59+beR5
Fo7+ubwKYE2Xqr64EA6vel6+yU77JynU8epomWqCJSdDTu3Gg0MV1s4WAyt7gKuBzYnLO8oonedv
Ka+hmWoFvIlC5MGnz86liuS5TjcfR8hGUKegq0UTd20KhqRQUenoA7zaZIINs8pWB6KBQzwjEh6Y
oCuRLosLx1ZeDe41cP1rXAfNsYlo7CpYKjrREFQWSe//kzlln5WKa6arb0Nqv6NyME0+VEj++UVw
Shlr3ln4bGUyRHTxEbCFXw9ocUyFZBWKaPlcxrWI2DyBcAu8ynFXQNZXaxfoPwhRfdscAxjsbqXJ
7ICd2fjYO90RXI0C7eQjyPUJqwc/slYbxA/uuwGSX4w9WCDnRHTi+acU
</ds:SignatureValue>
<ds:KeyInfo>
<ds:X509Data>
<ds:X509Certificate>
MIIHbDCCBVSgAwIBAgIQCdceADCnzKkglkQGavVKYzANBgkqhkiG9w0BAQsFADBpMQswCQYDVQQG
EwJVUzEXMBUGA1UEChMORGlnaUNlcnQsIEluYy4xQTA/BgNVBAMTOERpZ2lDZXJ0IFRydXN0ZWQg
RzQgQ29kZSBTaWduaW5nIFJTQTQwOTYgU0hBMzg0IDIwMjEgQ0ExMB4XDTIzMTAxODAwMDAwMFoX
DTI2MTAxODIzNTk1OVowgfQxEzARBgsrBgEEAYI3PAIBAxMCVVMxGTAXBgsrBgEEAYI3PAIBAhMI
TWFyeWxhbmQxHTAbBgNVBA8MFFByaXZhdGUgT3JnYW5pemF0aW9uMRIwEAYDVQQFEwlEMDYwNTg4
MTIxCzAJBgNVBAYTAlVTMREwDwYDVQQIEwhOZXcgWW9yazEXMBUGA1UEBxMORWFzdCBHcmVlbmJ1
c2gxKjAoBgNVBAoTIUNlbnRlciBmb3IgSW50ZXJuZXQgU2VjdXJpdHksIEluYzEqMCgGA1UEAxMh
Q2VudGVyIGZvciBJbnRlcm5ldCBTZWN1cml0eSwgSW5jMIIBojANBgkqhkiG9w0BAQEFAAOCAY8A
MIIBigKCAYEAyZwTJr4Kb7QEDnVY3BEkPoS3fn+XoxhCTfFvlMk8zXDcR4pFMgPkXTrZ1KbENUIV
skIhy1vmnh61vwSL0lcdzesCekKSxLqrEA4xunZk1MB5mLbHXchSSpI1co1vaSzJjkTYP1UsUVQz
NoOzV0LNCoZdahjGTHSduWvbrHTEeD6/jvUj3AVWrTx6krzgYA3ozAxtUnapK7IrZERuGOSwTrgR
Lr1aieQdFy8haW1YL+ks5HmLRvcoGp+J68GX/zfMTduvWxhcpXm4txKc4iJqGCRmyBU2XjGjpDBX
ndxHgT4edRLz5PwWSeZUh8/tWOGFwnVw7njoOa0sFixy96H2BqEn+yPeRALyf59rjtPL66tsXuaA
ilB63yqbH42mnkxHTX5zcEm337GzTOGRccsYzN/ApVuXDeMfsO+sSUosrimnxm9QTOyKcex5h1As
rxBVfTw+Zf7jP1YRlmMlGPG1zffK2KjJhD6ivFi2sIDThEQLxIAC8XOjp2ZXvhx87yNTAgMBAAGj
ggICMIIB/jAfBgNVHSMEGDAWgBRoN+Drtjv4XxGG+/5hewiIZfROQjAdBgNVHQ4EFgQUX2/J9FT5
5BNF7JqfAl9SJkv3pf0wPQYDVR0gBDYwNDAyBgVngQwBAzApMCcGCCsGAQUFBwIBFhtodHRwOi8v
d3d3LmRpZ2ljZXJ0LmNvbS9DUFMwDgYDVR0PAQH/BAQDAgeAMBMGA1UdJQQMMAoGCCsGAQUFBwMD
MIG1BgNVHR8Ega0wgaowU6BRoE+GTWh0dHA6Ly9jcmwzLmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydFRy
dXN0ZWRHNENvZGVTaWduaW5nUlNBNDA5NlNIQTM4NDIwMjFDQTEuY3JsMFOgUaBPhk1odHRwOi8v
Y3JsNC5kaWdpY2VydC5jb20vRGlnaUNlcnRUcnVzdGVkRzRDb2RlU2lnbmluZ1JTQTQwOTZTSEEz
ODQyMDIxQ0ExLmNybDCBlAYIKwYBBQUHAQEEgYcwgYQwJAYIKwYBBQUHMAGGGGh0dHA6Ly9vY3Nw
LmRpZ2ljZXJ0LmNvbTBcBggrBgEFBQcwAoZQaHR0cDovL2NhY2VydHMuZGlnaWNlcnQuY29tL0Rp
Z2lDZXJ0VHJ1c3RlZEc0Q29kZVNpZ25pbmdSU0E0MDk2U0hBMzg0MjAyMUNBMS5jcnQwCQYDVR0T
BAIwADANBgkqhkiG9w0BAQsFAAOCAgEASLOHf1FQ7TrGqEoVXYoeNSkRWdVCUGd1JCDs7Hb9sLd3
eQuipZ4EorQS/9qMiVMhmlJfF75sNVQhr1K5UtjrDRFMTzYmh78hAyovowzgyVKdGFqiVVr5m+mb
vVyglLlA4V076LMBaKRknm1Dt8r0/5GSRCrkP2origpYMMaocN+iBX9+MImnh3J1Ehn0nRUhW86Q
mt3/YCVIaQZisv+KmOxyAq1m6fiIYIvXY+cH2dDIheoVteb/NjYnKVqE6xTpOsxF16pykXiM9yk3
Q9nlJS36KEGRP4wrySU4eIBnTcv4mimZjkWj6bIvk8otNJ14FbyltaPwIc3dE3oPGfSmCrkxs73j
iqBs2TXLvblEmOhY8ko3xVdTm0zMP50MQVO948fz9yF+xdnPdMPT1/lCmGp6iWYRzxnvEkA1+HFl
yy9YztrM8WNAhXirpUZg3HWQE2ONLKMtqQrkIHD2nikda77flk6oirqDuCf8Q7g8s86/KabTdxrw
pRmsRjDkAfKVae58ctaKbmF32oU9BGk+9MPG8HF5Yfoh12DE1fLZcPzZrROrDFJGGxwhv5FlnxGg
6G7jKi68erZnpaOPayK0bXyZNunqkI9IbIuPqMw5qaCZZgN6AEHIbGTKdrWEf11DmR7MdTjv3/vu
JWtIXgk3kQFX27w9JhqV6QogVmzIfEQ=
</ds:X509Certificate>
</ds:X509Data>
<ds:KeyValue>
<ds:RSAKeyValue>
<ds:Modulus>yZwTJr4Kb7QEDnVY3BEkPoS3fn+XoxhCTfFvlMk8zXDcR4pFMgPkXTrZ1KbENUIVskIhy1vmnh61
vwSL0lcdzesCekKSxLqrEA4xunZk1MB5mLbHXchSSpI1co1vaSzJjkTYP1UsUVQzNoOzV0LNCoZd
ahjGTHSduWvbrHTEeD6/jvUj3AVWrTx6krzgYA3ozAxtUnapK7IrZERuGOSwTrgRLr1aieQdFy8h
aW1YL+ks5HmLRvcoGp+J68GX/zfMTduvWxhcpXm4txKc4iJqGCRmyBU2XjGjpDBXndxHgT4edRLz
5PwWSeZUh8/tWOGFwnVw7njoOa0sFixy96H2BqEn+yPeRALyf59rjtPL66tsXuaAilB63yqbH42m
nkxHTX5zcEm337GzTOGRccsYzN/ApVuXDeMfsO+sSUosrimnxm9QTOyKcex5h1AsrxBVfTw+Zf7j
P1YRlmMlGPG1zffK2KjJhD6ivFi2sIDThEQLxIAC8XOjp2ZXvhx87yNT</ds:Modulus>
<ds:Exponent>AQAB</ds:Exponent>
</ds:RSAKeyValue>
</ds:KeyValue>
</ds:KeyInfo>
</ds:Signature></xccdf:signature></xccdf:Benchmark>
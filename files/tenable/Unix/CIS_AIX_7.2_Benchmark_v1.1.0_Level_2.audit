#TRUSTED 3973a0468123a0ccf7bd61dcf8124b571802fd07fff7776d14d01985d3f0982b4b6366e91ecb0c392901f45f3823dd6d05bcb0e47b6f4a23af3f4cdafb52e533c9c367e6426cf3270b8f07ba94c09c110c2124afa12fe8db3234e3203b526f5453c52399a6a9908855bcf2ce6063ed6ade3fbf250e029a7d6f14299b35c9aa9f896c1474d0903b10e924977462c0b19be6b3d59761752fd3de0862875f23a953744d811e545348a5d8d1fa0b5ba0ebec51af88cd754868394bac38cafa9826544058431514f6e4cf0b61970a3e8d3c9057694998551f8bf6f10dbf94e746c8aca46b883576d32ab237e695fe3a8e1297606d2b3f67d569eb8a7474430c44f921bfebf1b37254275e51c4a1f1226cec20698f7aea346570435b5b17d2179071d621ddbb477798f9a88c410f16e010599889b546f32a5f6a513481737dcf32608c0f0c939fba0e983bc14238e98ded330f216ed56b8a2947ab832f14d8aa8e649142da43d64d4518e3aeaf5098fe217f1ef16c447de351941224ff508aaffa1dca6776c4326b7d082304d3983d00452a7b506bd8ecf9241344a32e31b0b7a6ead670a477ad1e3f2408d0781653f9b5bd135567ef146f83620a9a1622be55782607a0d5e95d02bb3f1261a50fee29c4924da76fbb9b4602c0455c326a69c43fd61a242d48f36bfc41967e28c47ab31b2f590cf175fc2d582e8026749595e6fd6625
#TRUST-RSA-SHA256 a7bb78afb649ec7654d62318bd4c95c9535f5558219c5dc0c975ae22d852fc2c0d69bc7580fc05ba7de1221dc8436e7a00d7ca1c53dc880aa570c99d1ed9f6c70852e3cabe5f471afa775d8ff13fcb59e8ef00d03392dc94870d20e18b8f113072949210cc19310140d42f0877e7a5889af9edba3bc4df114a9f6311d1a8818ba126e90bad8ecaebed39ec8251a2c2775e315a6b76b11119e02337491f7f5768394b46dcd33481338a22dce50cb6fd85a95af122a51ad7d8e8853e1b2cd82d18532d8909a7149dde1f02c97425e1c168b30d1a7bbd4e81e16ec4dae03546ab54584e9a2023081ed5530feaa395f43c056e42cae33674082ebb823c46453e5c95d4a0d47c196e21497418c99e9bee14eee3d6ab9358743ee05f5a547ea3beebbd3119af36991ea4eb5971cde5f22534faf524fb69463d6c0f183f9c6223d3a8c575504d9732ec215ffd7941aa35b997e2b3e450177b5fc264e1b372d330cb957344eb58e703d7bc0b7c8fa0da69d075d65be05fbdde5047840ed1350e6844487f7a088bbb2e01a30747a6a2d7bb77cac3b208a2792d61d8854ab3c2e519c29e5ee1c416409b92ed41ced53721af65fadba131dbd20c35c529f84a1471a90e2d4de7021363a22a82a1bbf9b8748285f9504d80d21165a7e03d950a5003ea118963eaf75852990f1ab5c99dcbdd1224a152f51ae99fd4626f96c1a2ab61db0cbe3e
#
# This script is Copyright (C) 2004-2024 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.1 $
# $Date: 2024/06/17 $
#
# Description	: This .audit file is written again the Center for Internet Security Configuration Benchmark For AIX 7.2 v1.1.0.
#
# 		https://workbench.cisecurity.org/files/4124
#
#<ui_metadata>
#<display_name>CIS IBM AIX 7.2 L2 v1.1.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>IBM AIX 7.2</name>
#  <profile>L2</profile>
#  <version>1.1.0</version>
#  <link>https://workbench.cisecurity.org/benchmarks/13069</link>
#</spec>
#<labels>unix,cis,aix_unix_7.2</labels>
#<benchmark_refs>CCE,CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#<variables>
#  <variable>
#    <name>SYSLOG_SERVER_IP_ADDRESS</name>
#    <default>192.168.1.1</default>
#    <description>Primary syslog server IP address</description>
#    <info>For improved checks, the syslog check is compared against a specific syslog server in the environment.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>SUDO_LOG</name>
#    <default>/var/log/sudo.log</default>
#    <description>Path to custom sudo log</description>
#    <info>Path to the custom sudo log that simplifies auditing the use of sudo commands.</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>PLATFORM_VERSION</name>
#    <default>7\.[0-9]+</default>
#    <description>AIX Version</description>
#    <info>AIX Version</info>
#    <value_type>STRING</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Unix">

<if>
  <condition type:"AND">
    <custom_item>
      type          : CMD_EXEC
      description   : "AIX Version 7, Release 2 or greater, found"
      cmd           : "/usr/bin/oslevel"
      expect        : "^[\\s]*@PLATFORM_VERSION@"
      dont_echo_cmd : YES
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "CIS_AIX_7.2_Benchmark_v1.1.0_Level_2.audit from CIS AIX 7.2 Benchmark v1.1.0 Level 2 Benchmark"
      see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
    </report>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "te"
          cmd         : "/usr/sbin/trustchk -p TE"
          expect      : "^[\\s]*TE[\\s]*=[\\s]*[Oo][Nn][\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "stop_on_chkfail"
          cmd         : "/usr/sbin/trustchk -p STOP_ON_CHKFAIL 2>&1"
          expect      : "^[\\s]*STOP_ON_CHKFAIL[\\s]*=[\\s]*[Oo][Nn][\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "stop_untrusted"
          cmd         : "/usr/sbin/trustchk -p stop_untrustd 2>&1"
          expect      : "^[\\s]*STOP_UNTRUSTD[\\s]*=[\\s]*(?i)(ON|TROJAN)[\\s]*"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "2.6 Enforce Allowlist aka Trusted Execution Checks"
          info        : "This takes allowlist aka whitelisting to the next level - where all software, libraries and scripts that are not in the trusted signature database (TSD) in /etc/security/tsd/tsd.dat are blocked.

Rationale:

At Level 1 (recommendations 2.3, 2.4 and 2.5) - nothing is stopped from being utilized, but the controls are active and logging so that missing entries can be added to the TSD so that Level 2 will not cause a breach of availability.

Impact:

The step is reversible. By returning the TE policies STOP_UNTRUSTD and STOP_ON_CHKFAIL back to OFF the system will be returned to the Level 1 Profile.

An intermediate Level would be to set STOP_UNTRUSTD to TROJAN rather than ON (Level 2) or OFF (Level 1).

    TROJAN Stops the loading of files that do not belong to the TSD and have one of the following security settings:

      *    Have suid/sgid bit set

      *    Linked to a file in the TSD

      *    Have entry in the privcmds Database

      *    Be linked to a file in the privcmds database"
          solution    : "Execute one of the following commands:

trustchk -p stop_untrustd=on stop_on_chkfail=on te=on

or

trustchk -p stop_untrustd=trojan stop_on_chkfail=on te=on

Default Value:

TE=OFF"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-171|3.4.8,800-53|CM-7,800-53|CM-7(1),800-53|CM-7(5),800-53|CM-10,800-53|SI-7,800-53|SI-7(1),800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-7(5),800-53r5|CM-10,800-53r5|SI-7,800-53r5|SI-7(1),CN-L3|7.1.3.5(b),CSCv7|2.7,CSCv7|2.8,CSCv7|2.9,CSCv8|2.5,CSCv8|2.6,CSCv8|2.7,CSF|DE.CM-3,CSF|PR.DS-6,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(c)(1),HIPAA|164.312(c)(2),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|SI-7,ITSG-33|SI-7a.,ITSG-33|SI-7(1),LEVEL|2A,NESA|T3.4.1,NESA|T7.3.2,NESA|T7.3.3,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,PCI-DSSv3.2.1|10.5.5,QCSC-v1|3.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.3,SWIFT-CSCv1|6.2,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "2.8 Ensure the Trusted Execution Policies cannot be modified"
      info        : "Set trusted execution policy LOCK_KERN_POLICIES to enabled. All of the other policies will then be locked and cannot be changed without disabling the LOCK_KERN_POLICIES policy and then restarting the system.

Rationale:

When policies are locked, unauthorized users cannot make changes to the policies to allow them to execute unapproved tools and then revert the settings afterwards. An unplanned system reboot is likely to be noticed and investigated"
      solution    : "Execute the following command

trustchk -p LOCK_KERN_POLICIES=ON"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|2A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
      cmd         : "/usr/sbin/trustchk -p LOCK_KERN_POLICIES"
      expect      : "^[\\s]*LOCK_KERN_POLICIES[\\s]*=[\\s]*[Oo][Nn][\\s]*$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "clickext"
          cmd         : "/usr/bin/genkex | /usr/bin/grep crypto/clickext | /usr/bin/awk '{ print } END { if (NR == 0) print \"none\" }'"
          expect      : "[\\s]/usr/lib/drivers/crypto/clickext[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "lslpp clic"
          cmd         : "/usr/bin/lslpp -L | /usr/bin/grep clic"
          expect      : "^[\\s]+clic\\.rte\\."
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "3.1 Encryption: File System Level (EFS)"
          info        : "The recommendation, if there is a requirement for file based encryption aka encryption at rest, is to utilize EFS.

Rationale:

A security enhancement introduced with AIX 6.1 is Encrypted Filesystems (EFS). This technology enables an individual user to encrypt their own data within a jfs2 filesystem.

After enabling a filesystem to use EFS individual files can be encrypted or encryption can be set at the directory (all files within the directory, recursively) or by system administration at filesystem level. Encryption is performed by the kernel. Access to the kernel secret key is managed via keystore files. The standard AIX data and user management commands have been modified to work with encryption.

Data is only accessible in 'cleartext' when the active process has access to the secret key. Without this access the file system acts as if the file does not exist.

Impact:

The use of EFS enhances the file and directory security within AIX. If there are sensitive or confidential files, encryption provides that extra level of security in the event of an accidental chmod which may allow read or write access to other users.

The encryption operates at the filesystem level and each file is encrypted with a separate key. From a user perspective the encryption is transparent as the key can be automatically loaded during login."
          solution    : "There are two pre-requisite requirements for EFS, it requires RBAC and the installation of the CLiC cryptographic fileset. The fileset is located on the expansion pack, shipped with the AIX media.
Place the CLiC software into a convenient location, such as /tmp and install via:

/usr/lib/instl/sm_inst installp_cmd -a -Q -d /tmp -f clic.rte -c -N -g -X -G -Y

NOTE: If the software is not located in /tmp, reflect the actual location in the command above.
Load the CLiC kernel extension:

/usr/lib/methods/loadkclic

As the EFS administrator, create the initial keystore. This is typically the root user:

efsenable -a

An EFS enabled filesystem can be created with the following command:

chfs -v jfs2 -g <vg_name> -m <filesystem> -a size=<size> -a efs=yes

To enable EFS for an existing filesystem:

chfs -a efs=yes <filesystem>

To encrypt a file, load your keystore via:

efskeymgr -o ksh

Then encrypt via:

efsmgr -c AES_192_ECB -e <filename>

To decrypt:

efsmgr -d <filename>

Further details regarding planning and implementation of EFS can be found within the IBM AIX 7.1 Infocentre:
https://www.ibm.com/docs/en/aix/7.1?topic=system-efs-encrypted-file
NOTE: The configuration of EFS is completely dependent on the unique requirements of a given environment.

Default Value:

N/A"
          reference   : "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|14.8,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|2A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          show_output : YES
        </report>
      </then>
    </if>

    <report type:"WARNING">
      description : "3.2 Encryption: Logical Volume (ELV)"
      info        : "Starting with AIX 7.2 TL5, AIX adds LV encryption (encryption at logical volume level). This is an alternate data at rest encryption solution. Below is a blog about the feature.

In the references there is a link to one of the early blogs (written by an IBMer). The end of blog points to documentation in AIX 7.2 knowledge center.

Rationale:

Some organizations are required to show that data at rest is encrypted. A common example is the PCI (payment card industry) requirement to encrypt so-called sensitive data such as a direct link between card holder name and card number.

Using LV encryption is much like disk encryption of a PC. Once operational, the application environment does not even know the data is encrypted. The encryption is only noticeable when the (disk) storage is mounted somewhere else. Outside of the configured environment all information on the disk (read logical volume) is encrypted.

Impact:

For many uses LVE (logical volume encryption) is much easier to use - by applications - compared to an encryption solution such as EFS (encrypted file system). Once the system boots - and a valid (i.e., authorised) process or user is active on the system - they will have access to data, or not - depending on the classic access controls (e.g., inode DAC controls, ACLs, etc.).

LVE does have specific requirements on the management environment and the systems that can support it. See the blog for specifics. (EFS has no requirements other than it is enabled on AIX 6.1 or later).

No audit or remediation statements are provided. They will need to be provided by whoever implements LVE in your environment.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Default Value:

Not enabled."
      reference   : "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|14.8,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|2M,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
    </report>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "on disk /usr/sbin/mrouted"
          file        : "/etc/rc.tcpip"
          regex       : "^[\\s]*start[\\s]+/usr/sbin/mrouted"
          expect      : "^[\\s]*start[\\s]+/usr/sbin/mrouted"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "lssrc mrouted"
          cmd         : "/usr/bin/lssrc -s mrouted | /usr/bin/awk '{ print } END { if (NR==0) print \"pass\" }'"
          expect      : "[\\s]+(inoperative|The mrouted Subsystem is not on file\\.)$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "4.1.2.9 mrouted"
          info        : "This entry starts the mrouted daemon on system startup. This daemon is an implementation of the multicast routing protocol.

Rationale:

The mrouted daemon is an implementation of the multicast routing protocol. The recommendation is to only permit this service when there is a documented need for the service.

The assumption of this recommendation is that the service is not needed - and the audit and remediation are written to disable the service (it's default setting).

Impact:

When this service's need is documented (include with assessment report) the audit and remediation for this service may be skipped.

The CIS controls are to disable unneeded software. When needed it's usage must be allowed."
          solution    : "In /etc/rc.tcpip, comment out the mrouted entry and stop a running service:

chrctcp -d mrouted
stopsrc -s mrouted

Default Value:

Disabled"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : FILE_CONTENT_CHECK_NOT
      description : "4.1.3.1 autoconf6"
      info        : "This entry starts autoconf6 on system startup. This is to automatically configure IPv6 interfaces at boot time.

Rationale:

autoconf6 is used to automatically configure IPv6 interfaces at boot time. Running this service may allow other hosts on the same physical subnet to connect via IPv6, even when the network does not support it. You must disable this unless you utilize IPv6 on the server."
      solution    : "In /etc/rc.tcpip, comment out the autoconf6 entry:

chrctcp -d autoconf6

Default Value:

Commented out"
      reference   : "800-171|3.1.16,800-171|3.1.17,800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|AC-18,800-53|AC-18(1),800-53|AC-18(3),800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53r5|AC-18,800-53r5|AC-18(1),800-53r5|AC-18(3),800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,CSCv7|9.2,CSCv8|4.2,CSCv8|4.8,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.PT-3,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|AC-18(1),ITSG-33|AC-18(3),ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,LEVEL|1A,LEVEL|2A,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T5.4.2,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NIAv2|NS33,NIAv2|NS34,NIAv2|NS38,NIAv2|SS15a,NIAv2|SS16,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
      file        : "/etc/rc.tcpip"
      regex       : "^[\\s]*start[\\s]+/usr/sbin/autoconf6"
      expect      : "^[\\s]*start[\\s]+/usr/sbin/autoconf6"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK_NOT
      description : "4.1.3.2 ndpd-host"
      info        : "This entry starts ndpd-host on system startup. This is the Neighbor Discovery Protocol (NDP) daemon.

The ndpd-host command handles the default route, which includes the default router, the default interface, and the default interface address. However, the ndpd-host command does not overwrite the static default routes that are set on the host. When the daemon is stopped, the daemon cleans up the prefix addresses and the routes that are created during its lifetime.

Rationale:

The ndpd-host performs the client function of the NDP protocol.

Unless the server utilizes (dynamic) IPv6 this utility is not required and should be disabled.

Ipv6 static configuration is not affected by ndpd-host.

Impact:

When IPv6 is active and NDP is used to get a non-link-local IPv6 address (link-local addresses begin with fe80::) it is also likely that the MTU size of the interface will change from 1500 to 1492. Additionally, it may add default route to the IPv6 router it received it's address from. For example:

BEFORE NDP

netstat -ni

Name  Mtu   Network     Address           Ipkts Ierrs    Opkts Oerrs  Coll

...

en0   1500  192.168.129 192.168.129.71   105156791     0 49249083     1     0

en0   1500  fe80::dead:beef:fef7:6204    105156791     0 49249083     1     0

netstat -rn

Routing tables

Destination        Gateway           Flags   Refs     Use  If   Exp  Groups

Route tree for Protocol Family 2 (Internet):

default            192.168.129.1     UG       23  35660110 en0      -      -

127/8              127.0.0.1         U         2     22988 lo0      -      -

192.168.129.0      192.168.129.71    UHSb      0         0 en0      -      -   =>

192.168.129/24     192.168.129.71    U        12  13578475 en0      -      -

192.168.129.71     127.0.0.1         UGHS      0     21471 lo0      -      -

192.168.129.255    192.168.129.71    UHSb      0         0 en0      -      -

Route tree for Protocol Family 24 (Internet v6):

default            link#2            UC        0         0 en0      -      -

::1%1              ::1%1             UH        0     19154 lo0      -      -

...

After NDP

netstat -ni

Name  Mtu   Network     Address           Ipkts Ierrs    Opkts Oerrs  Coll

...

en0   1492  192.168.129 192.168.129.71   105190883     0 49267729     1     0

en0   1492  BEEF:980:a9ea:1:deed:beef:fef7:6204 105190883     0 49267729     1     0

en0   1492  fe80::deed:beef:fef7:6204    105190883     0 49267729     1     0

netstat -nr

Routing tables

Destination        Gateway           Flags   Refs     Use  If   Exp  Groups

Route tree for Protocol Family 2 (Internet):

default            192.168.129.1     UG       17  35724295 en0      -      -

127/8              127.0.0.1         U         2     23044 lo0      -      -

192.168.129.0      192.168.129.71    UHSb      0         0 en0      -      -   =>

192.168.129/24     192.168.129.71    U        14  13622746 en0      -      -

192.168.129.71     127.0.0.1         UGHS      0     21576 lo0      -      -

192.168.129.255    192.168.129.71    UHSb      0         0 en0      -      -

Route tree for Protocol Family 24 (Internet v6):

default            fe80::dead:beef:fefa:4bfe UG        0         0 en0      -      -

::1%1              ::1%1             UH        0     19198 lo0      -      -

Note: the IPv6 destination address is the link-local (fe80::) address of the IPv6 router."
      solution    : "In /etc/rc.tcpip, comment out the ndpd-host entry:

chrctcp -d ndpd-host

Default Value:

Commented out"
      reference   : "800-171|3.1.16,800-171|3.1.17,800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|AC-18,800-53|AC-18(1),800-53|AC-18(3),800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53r5|AC-18,800-53r5|AC-18(1),800-53r5|AC-18(3),800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,CSCv7|9.2,CSCv8|4.2,CSCv8|4.8,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.PT-3,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|AC-18(1),ITSG-33|AC-18(3),ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,LEVEL|1A,LEVEL|2A,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T5.4.2,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NIAv2|NS33,NIAv2|NS34,NIAv2|NS38,NIAv2|SS15a,NIAv2|SS16,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
      file        : "/etc/rc.tcpip"
      regex       : "^[\\s]*start[\\s]+/usr/sbin/ndpd-host"
      expect      : "^[\\s]*start[\\s]+/usr/sbin/ndpd-host"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK_NOT
      description : "4.1.3.3 ndpd-router"
      info        : "This entry starts ndpd-router on system startup. This manages the Neighbor Discovery Protocol (NDP) for non kernel activities.

It receives Router Solicitations and sends Router Advertisements. It can also exchange routing information using the RIPng protocol.

Rationale:

The ndpd-router manages NDP for non-kernel activities. Unless the server utilizes IPv6, this is not required and should be disabled.

Impact:

This service is not needed unless the AIX host is actively exchanging routing information with IPv6 routers.

See: manpage AIX 7.1 ndpd-router Daemon"
      solution    : "In /etc/rc.tcpip, comment out the ndpd-router entry:

chrctcp -d ndpd-router

Default Value:

Disabled"
      reference   : "800-171|3.1.16,800-171|3.1.17,800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|AC-18,800-53|AC-18(1),800-53|AC-18(3),800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53r5|AC-18,800-53r5|AC-18(1),800-53r5|AC-18(3),800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,CSCv7|9.2,CSCv8|4.2,CSCv8|4.8,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.PT-3,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|AC-18(1),ITSG-33|AC-18(3),ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,LEVEL|1A,LEVEL|2A,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T5.4.2,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NIAv2|NS33,NIAv2|NS34,NIAv2|NS38,NIAv2|SS15a,NIAv2|SS16,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
      file        : "/etc/rc.tcpip"
      regex       : "^[\\s]*start[\\s]+/usr/sbin/ndpd-router"
      expect      : "^[\\s]*start[\\s]+/usr/sbin/ndpd-router"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "4.1.4.2 NFS - de-install NFS server"
      info        : "De-install NFS server if the server does not act as an NFS server to remote clients.

Rationale:

NFS is frequently exploited to gain unauthorized access to file and directories. Unless the server needs to act as an NFS server or client, the filesets should be de-installed."
      solution    : "Ensure that there are no current NFS exports:

cat /etc/exports

The above command should yield no output. Or the file should not exist.
De-install the NFS sever software:

installp -u bos.net.nfs.server

If there was an empty /etc/exports file, remove it:

rm /etc/exports

Default Value:

N/A

Additional Information:

Reversion:

Re-install the software from the product DVD's

Note: When NFS Server software is installed then the Recommendation 4.1.4.7 is required. Otherwise, it may be skipped."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|2A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
      cmd         : "/usr/bin/lslpp -L | /usr/bin/grep bos.net.nfs.server | /usr/bin/awk '{ print } END { if (NR==0) print \"none\" }'"
      expect      : "^none$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "4.1.4.5 NFS - restrict NFS access"
      info        : "Only allow explicitly defined host access to NFS exported filesystems and directories.

Rationale:

The NFS server should be configured to only allow explicitly defined hosts to mount filesystems from the server. If an unauthorized host is denied the permission to mount a filesystem, then the unauthorized users on that host will not be able to access the server's files.

The default value of access allows any machine to mount any exported filesystems/directories."
      solution    : "Ensure that all exports defined in /etc/exports have explicit client access options which clearly define the host or hosts allowed access: Review the content of /etc/exports and that all exports have explicit access lists:

showmount -e | grep '(everyone)'

Ensure that each NFS export has an explicit access line, for example, modify:

/export/repo             (everyone)

to:

/export/repo             x071

The option -c is used to specify clients permitted access:

chnfsexp -d /export/repo -c x071

Default Value:

N/A

Additional Information:

Reversion: Clear the client access specification by supplying the NULL string ('') as argument.

chnfsexp -d /export/repo -c ''"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|2A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
      cmd         : "/usr/bin/showmount -e 2>&1 | /usr/bin/grep \"(everyone)\" | /usr/bin/wc -l"
      expect      : "^0$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "4.1.4.7 NFS - secure NFS"
      info        : "For each NFS export, ensure that the secure option is selected.

Rationale:

Secure NFS uses DES encryption or Kerberos to authenticate hosts involved in RPC transactions. RPC is a protocol used by NFS to communicate requests between hosts. Secure NFS mitigates attempts by an attacker to spoof RPC requests by encrypting the time stamp in the RPC requests. A receiver successfully decrypts the time stamp and confirms that it is correct. This serves as a confirmation that the RPC request came from a trusted host."
      solution    : "Use chnfsexp to change/validate this value for all NFS exported filesystems:

chnfsexp -d <fs> -S <sec>

The available security method options are:

sys - UNIX authentication

dh - DES authentication

none - Use the anonymous ID if it has a value other than -1

krb5 - Kerberos. Authentication only

krb5i - Kerberos. Authentication and integrity

krb5p - Authentication, integrity, and privacy '

Once all exported filesystems have been successfully validated or changed, re-export the filesystems and directories to activate the new options:

exportfs -a

Default Value:

N/A

Additional Information:

Reversion: Copy back the original /etc/exports:

cp -p /etc/exports.pre_cis /etc/exports"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|2A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
      cmd         : "/usr/sbin/lsnfsexp -l | /usr/bin/awk '{ print } BEGIN { f=0; } /^.*/ {if ($0 !~ \"sec=(sys|dh|krb5|krb5i|krb5p)\") f++;} END {if (NR == 0) print \"Pass - /etc/exports empty\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'"
      expect      : "^Pass"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "rlogin"
          file        : "/usr/bin/rlogin"
          mask        : "777"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "rcp"
          file        : "/usr/bin/rcp"
          mask        : "777"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "rsh"
          file        : "/usr/bin/rsh"
          mask        : "777"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "4.4.2 Remote command lockdown"
          info        : "Removes all permissions from the remote service commands: rsh, rlogin and rcp.

Rationale:

This effectively disables the following commands, for all users:

/usr/bin/rcp

/usr/bin/rlogin

/usr/bin/rsh

These remote services send usernames and passwords in clear text and should not be used. Unless required these binaries will be disabled for all users. The SSH suite of commands should be utilized to provide equivalent functionality"
          solution    : "Use the chmod command to remove all permissions on the remote services:

chmod ugo= /usr/bin/rcp
chmod ugo= /usr/bin/rlogin
chmod ugo= /usr/bin/rsh

Default Value:

N/A"
          reference   : "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|2A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : FILE_CONTENT_CHECK_NOT
      description : "4.4.3 Removal of entries from /etc/hosts.equiv"
      info        : "This process removes all entries from the /etc/hosts.equiv file.

Rationale:

The /etc/hosts.equiv file can be used to circumvent normal login or change control procedures. The existence of this file, with the relevant entries, can allow remote user access to a system bypassing local user and password authentication. Unless required all entries will be removed from this file."
      solution    : "Remove all entries from the /etc/hosts.equiv file:

sed '/^\s*$/d; s/^\(\s*[^#].*\)/#\1/' /etc/hosts.equiv > /etc/hosts.equiv.work
mv hosts.equiv.work hosts.equiv
chown root:system /etc/hosts.equiv
chmod 644 /etc/hosts.equiv

Note: the above command removes blank lines and comments out any non commented entries.

Default Value:

N/A"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|2A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
      file        : "/etc/hosts.equiv"
      regex       : "^[\\s]*[^#].*"
      expect      : "^[\\s]*[^#].*"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CHECK_NOT
          description : "rhosts"
          file        : "~/.rhosts"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK_NOT
          description : "netrc"
          file        : "~/.netrc"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "4.4.4 Removal of .rhosts and .netrc files"
          info        : "This recommendation removes all instances of .rhosts and .netrc files from the system.

Rationale:

The .rhosts and .netrc files can be used to circumvent normal login or change control procedures. The existence of such files, with the relevant entries, can allow remote user access to a system bypassing local user and password authentication. Unless required these files will be removed from all user home directories."
          solution    : "Remove the.rhosts and .netrc files from all user home directories:

find / -name '.netrc' -exec rm {} \;
find / -name '.rhosts' -exec rm {} \;

Default Value:

N/A"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-171|3.5.2,800-53|CM-7b.,800-53|IA-5(7),800-53r5|CM-7b.,800-53r5|IA-5(7),CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.AC-1,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,SWIFT-CSCv1|2.3,HIPAA|164.306(a)(1),TBA-FIISB|26.1,HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|CM-7a.,ITSG-33|IA-5(7),NESA|T5.2.3,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "tftpd"
          file        : "/usr/sbin/tftpd"
          mask        : "777"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "rshd"
          file        : "/usr/sbin/rshd"
          mask        : "777"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "rlogind"
          file        : "/usr/sbin/rlogind"
          mask        : "777"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "4.4.5 Remote daemon lockdown"
          info        : "Removes all permissions from the remote service daemons: rlogind, rshd and also tftpd.

Rationale:

This effectively disables the following daemons, for all users:

/usr/sbin/rlogind

/usr/sbin/rshd

/usr/sbin/tftpd

These remote services both send and receive usernames and passwords in clear text and should not be used. Unless required these daemons will be disabled for all users."
          solution    : "Use the chmod command to remove all permissions on the remote services:

chmod ugo= /usr/sbin/rlogind
chmod ugo= /usr/sbin/rshd
chmod ugo= /usr/sbin/tftpd

Default Value:

N/A"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "4.4.1.1 NIS - de-install NIS client"
      info        : "If NIS is not used in the environment, disable the NIS client and de-install the software.

Rationale:

As NIS is extremely insecure, the NIS client packages must be removed from the system unless absolutely needed."
      solution    : "Ensure that all of the NIS daemons are inactive:

stopsrc -g yp

De-install the NIS client software:

installp -u bos.net.nis.client

Default Value:

N/A

Additional Information:

Reversion:

Re-install the software from the product DVD's."
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
      cmd         : "/usr/bin/lslpp -L bos.net.nis.client"
      expect      : "[\\s]*not[\\s]+installed\\.[\\s]*$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "4.4.1.2 NIS - de-install NIS server"
      info        : "If NIS is not used in the environment, disable the NIS server and de-install the software.

Rationale:

As NIS is extremely insecure, the NIS server packages must be removed from the system unless absolutely needed."
      solution    : "Ensure that all of the NIS daemons are inactive:

stopsrc -g yp

De-install the NIS server software:

installp -u bos.net.nis.server

Default Value:

N/A

Additional Information:

Reversion:

Re-install the software from the product DVD's."
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
      cmd         : "/usr/bin/lslpp -L bos.net.nis.server"
      expect      : "[\\s]*not[\\s]+installed\\.[\\s]*$"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "/etc/passwd"
          file        : "/etc/passwd"
          regex       : "^\\+"
          expect      : "^\\+"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "/etc/group"
          file        : "/etc/group"
          regex       : "^\\+"
          expect      : "^\\+"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "4.4.1.3 NIS - remove NIS markers from password and group files"
          info        : "If NIS has been de-installed in the environment, or has historically been used, ensure the + markers are removed from/etc/passwd and /etc/group.

Rationale:

The + entries in /etc/passwd and /etc/group were used as markers to insert data from a NIS map. These entries may provide an avenue for attackers to gain privileged access on the system. The + entries must be deleted if they still exist."
          solution    : "Examine the /etc/passwd and /etc/group files:

grep '^+' /etc/passwd /etc/group

If the above command yields output, delete the + line:

vi /etc/passwd
vi /etc/group

Default Value:

N/A

Additional Information:

Reversion:

Add the + line back to the same point in the file/s:

vi /etc/passwd

vi /etc/group"
          reference   : "800-171|3.5.1,ITSG-33|IA-2a.,800-53|IA-2,NIAv2|AM2,800-53r5|IA-2,NESA|T2.3.8,CN-L3|7.1.3.1(a),TBA-FIISB|35.1,CN-L3|7.1.3.1(e),NESA|T5.3.1,CN-L3|8.1.4.1(a),NIAv2|AM8,CN-L3|8.1.4.2(a),NESA|T5.4.2,CN-L3|8.5.4.1(a),QCSC-v1|13.2,CSF|PR.AC-1,NESA|T5.5.1,GDPR|32.1.b,NIAv2|AM14b,HIPAA|164.306(a)(1),NESA|T5.5.2,HIPAA|164.312(a)(2)(i),TBA-FIISB|36.1,HIPAA|164.312(d),NESA|T5.5.3,ITSG-33|IA-2,QCSC-v1|5.2.2"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "server installed"
          cmd         : "/usr/bin/lslpp -L | /usr/bin/grep bos.net.nis.server | /usr/bin/awk '{ print } END { if (NR==0) print \"nis server is not installed\" }'"
          expect      : "^[\\s]*bos\\.net\\.nis\\.server[\\s]+"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "securenets contents"
              file        : "/var/yp/securenets"
              regex       : "^[\\s]*[0-9]{1,3}[\\.][0-9]{1,3}[\\.][0-9]{1,3}[\\.][0-9]{1,3}[\\s]+[0-9]{1,3}[\\.][0-9]{1,3}[\\.][0-9]{1,3}[\\.][0-9]{1,3}[\\s]*$"
              expect      : "^[\\s]*[0-9]{1,3}[\\.][0-9]{1,3}[\\.][0-9]{1,3}[\\.][0-9]{1,3}[\\s]+[0-9]{1,3}[\\.][0-9]{1,3}[\\.][0-9]{1,3}[\\.][0-9]{1,3}[\\s]*$"
              required    : YES
            </custom_item>

            <custom_item>
              type        : FILE_CHECK
              description : "securenets permissions"
              file        : "/var/yp/securenets"
              owner       : "root"
              mask        : "177"
              group       : "system"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "4.4.1.4 NIS - restrict NIS server communication"
              info        : "If NIS must be used in the environment, limit access to the NIS data to specific subnets.

Rationale:

By default the NIS server will authenticate all IP addresses if the /var/yp/securenets file does not exist, or exists without any subnets defined. The /var/yp/securenets file contains a list of subnets that are considered trusted and are allowed to access NIS data using the ypserv and ypxfrd daemons. This is a user-created file that resides on a NIS master server and any slave servers. Without configuring this file, anyone with knowledge of the NIS server address and the domain name, can obtain NIS served data, including the contents of the /etc/passwd file. Hence, it is recommended that the /var/yp/securenets file is configured to restrict access."
              solution    : "Create and secure the /var/yp/securenets file (if it does not already exist):

touch /var/yp/securenets
chmod u=rw,go= /var/yp/securenets
chown root:system /var/yp/securenets

Edit the file:

vi /var/yp/securenets

Add the allowed subnets:

255.255.255.0 128.311.10.0

NOTE: The format of the file is netmask netaddr as shown in the example above. Explicitly define all valid network subnets (one entry per line).
Stop and start NIS to implement the configuration changes:

stopsrc -g yp
startsrc -g yp

Default Value:

N/A

Additional Information:

Reversion:

Remove the /var/yp/securenets file:

rm /var/yp/securenets"
              reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|2A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
              show_output : YES
            </report>
          </then>
        </if>
      </then>

      <else>
        <report type:"PASSED">
          description : "4.4.1.4 NIS - restrict NIS server communication"
          info        : "If NIS must be used in the environment, limit access to the NIS data to specific subnets.

Rationale:

By default the NIS server will authenticate all IP addresses if the /var/yp/securenets file does not exist, or exists without any subnets defined. The /var/yp/securenets file contains a list of subnets that are considered trusted and are allowed to access NIS data using the ypserv and ypxfrd daemons. This is a user-created file that resides on a NIS master server and any slave servers. Without configuring this file, anyone with knowledge of the NIS server address and the domain name, can obtain NIS served data, including the contents of the /etc/passwd file. Hence, it is recommended that the /var/yp/securenets file is configured to restrict access."
          solution    : "Create and secure the /var/yp/securenets file (if it does not already exist):

touch /var/yp/securenets
chmod u=rw,go= /var/yp/securenets
chown root:system /var/yp/securenets

Edit the file:

vi /var/yp/securenets

Add the allowed subnets:

255.255.255.0 128.311.10.0

NOTE: The format of the file is netmask netaddr as shown in the example above. Explicitly define all valid network subnets (one entry per line).
Stop and start NIS to implement the configuration changes:

stopsrc -g yp
startsrc -g yp

Default Value:

N/A

Additional Information:

Reversion:

Remove the /var/yp/securenets file:

rm /var/yp/securenets"
          reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|2A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "4.5.1.2 /etc/inetd.conf - cmsd"
          cmd         : "/usr/bin/lslpp -L | /usr/bin/grep -i CDE"
          expect      : "^[\\s]*X11\\.Dt\\."
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : CMD_EXEC
          description : "4.5.1.2 /etc/inetd.conf - cmsd"
          info        : "This entry starts the cmsd service when required. This is a calendar and appointment service.

Rationale:

The cmsd service is utilized by CDE to provide calendar functionality. If CDE is not required, this service should be disabled."
          solution    : "In /etc/inetd.conf, comment out the cmsd entry:

chsubserver -r inetd -C /etc/inetd.conf -d  -v 'cmsd' -p 'tcsunrpc_udp'
refresh -s inetd

Default Value:

Uncommented"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|2A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          cmd         : "/usr/bin/lssrc -s inetd -l | /usr/bin/grep cms | /usr/bin/wc -l"
          expect      : "^0$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "4.5.1.2 /etc/inetd.conf - cmsd"
          info        : "This entry starts the cmsd service when required. This is a calendar and appointment service.

Rationale:

The cmsd service is utilized by CDE to provide calendar functionality. If CDE is not required, this service should be disabled."
          solution    : "In /etc/inetd.conf, comment out the cmsd entry:

chsubserver -r inetd -C /etc/inetd.conf -d  -v 'cmsd' -p 'tcsunrpc_udp'
refresh -s inetd

Default Value:

Uncommented"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|2A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "4.5.1.3 CDE - disabling dtlogin"
          cmd         : "/usr/bin/lslpp -L | /usr/bin/grep -i CDE"
          expect      : "^[\\s]*X11\\.Dt\\."
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : CMD_EXEC
          description : "4.5.1.3 CDE - disabling dtlogin"
          info        : "Do not start CDE automatically on system boot.

Rationale:

The implementation of the customized aixpert XML file disables CDE if there is not a graphical console attached to the system. If there is a graphical console or the XML file has not been executed, consider disabling CDE anyway."
          solution    : "Disable CDE start up:

/usr/dt/bin/dtconfig -d

NOTE: If CDE is not installed the command will not be found

Default Value:

N/A

Additional Information:

Reversion:

To re-configure the auto-start of the CDE software:

/usr/dt/bin/dtconfig -e"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          cmd         : "/usr/sbin/lsitab dt | /usr/bin/awk '{ print } END { if (NR==0) print \"pass\" }'"
          expect      : "^pass$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "4.5.1.3 CDE - disabling dtlogin"
          info        : "Do not start CDE automatically on system boot.

Rationale:

The implementation of the customized aixpert XML file disables CDE if there is not a graphical console attached to the system. If there is a graphical console or the XML file has not been executed, consider disabling CDE anyway."
          solution    : "Disable CDE start up:

/usr/dt/bin/dtconfig -d

NOTE: If CDE is not installed the command will not be found

Default Value:

N/A

Additional Information:

Reversion:

To re-configure the auto-start of the CDE software:

/usr/dt/bin/dtconfig -e"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "4.5.1.4 /etc/inetd.conf - dtspc"
          cmd         : "/usr/bin/lslpp -L | /usr/bin/grep -i CDE"
          expect      : "^[\\s]*X11\\.Dt\\."
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "4.5.1.4 /etc/inetd.conf - dtspc"
          info        : "This entry starts the dtspc service when required. This service is used in response to a CDE client request.

Rationale:

The dtspc service deals with the CDE interface of the X11 daemon. It is started automatically by the inetd daemon in response to a CDE client requesting a process to be started on the daemon's host. This makes it vulnerable to buffer overflow attacks, which may allow an attacker to gain root privileges on a host. This service must be disabled unless it is absolutely required."
          solution    : "In /etc/inetd.conf, comment out the dtspc entry:

chsubserver -r inetd -C /etc/inetd.conf -d  -v 'dtspc' -p 'tcp'

Default Value:

Commented out"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          file        : "/etc/inetd.conf"
          regex       : "^[\\s]*dtspc.*/usr/dt/bin/dtspcd"
          expect      : "^[\\s]*dtspc.*/usr/dt/bin/dtspcd"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "4.5.1.4 /etc/inetd.conf - dtspc"
          info        : "This entry starts the dtspc service when required. This service is used in response to a CDE client request.

Rationale:

The dtspc service deals with the CDE interface of the X11 daemon. It is started automatically by the inetd daemon in response to a CDE client requesting a process to be started on the daemon's host. This makes it vulnerable to buffer overflow attacks, which may allow an attacker to gain root privileges on a host. This service must be disabled unless it is absolutely required."
          solution    : "In /etc/inetd.conf, comment out the dtspc entry:

chsubserver -r inetd -C /etc/inetd.conf -d  -v 'dtspc' -p 'tcp'

Default Value:

Commented out"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "4.5.1.6 CDE - remote GUI login disabled"
          cmd         : "/usr/bin/lslpp -L | /usr/bin/grep -i CDE"
          expect      : "^[\\s]*X11\\.Dt\\."
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "4.5.1.6 CDE - remote GUI login disabled"
          info        : "The XDMCP service allows remote systems to start local X login sessions.

Rationale:

The XDMCP service should be disabled unless there is a requirement to allow remote X servers to start login sessions. If the ability to host remote X servers is not required, disable the service."
          solution    : "Copy /usr/dt/config/Xconfig to /etc/dt/config if it does not already exist:

ls -l /etc/dt/config/Xconfig

If the file does not exist, create it:

mkdir -p /etc/dt/config
cp /usr/dt/config/Xconfig /etc/dt/config

Disable remote X sessions from being started:

vi /etc/dt/config/Xconfig

Replace:

#  Dtlogin.requestPort:       0

With:

Dtlogin.requestPort:       0

Default Value:

Enabled

Additional Information:

Reversion:

Comment out the option:

vi /etc/dt/config/Xconfig

Reflect:

#  Dtlogin.requestPort:       0"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          file        : "/etc/dt/config/Xconfig"
          regex       : "(?i)DtLogin.requestPort"
          expect      : "(?i)^[\\s]*DtLogin[\\.]requestPort:[\\s]+0[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "4.5.1.6 CDE - remote GUI login disabled"
          info        : "The XDMCP service allows remote systems to start local X login sessions.

Rationale:

The XDMCP service should be disabled unless there is a requirement to allow remote X servers to start login sessions. If the ability to host remote X servers is not required, disable the service."
          solution    : "Copy /usr/dt/config/Xconfig to /etc/dt/config if it does not already exist:

ls -l /etc/dt/config/Xconfig

If the file does not exist, create it:

mkdir -p /etc/dt/config
cp /usr/dt/config/Xconfig /etc/dt/config

Disable remote X sessions from being started:

vi /etc/dt/config/Xconfig

Replace:

#  Dtlogin.requestPort:       0

With:

Dtlogin.requestPort:       0

Default Value:

Enabled

Additional Information:

Reversion:

Comment out the option:

vi /etc/dt/config/Xconfig

Reflect:

#  Dtlogin.requestPort:       0"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
        </report>
      </else>
    </if>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "4.5.3.5 sshd_config: PermitRootLogin is 'prohibit-password' or 'no'"
      info        : "The recommendation is to edit the /etc/ssh/sshd_config file to disable direct root login. Direct root login via SSH was enabled by default with prior versions of OpenSSH. To be absolutely certain direct login is disabled the recommendation is to set this variable specifically rather than rely on a new, changeable, default.

Rationale:

All root access should be facilitated through a local logon with a unique and identifiable user ID and then via the su command once locally authenticated.

Direct root login using passwords is insecure and does not provide sufficient logging or audit trailing for accountability.

Impact:

While this sounds simple - setting the attribute to no requires either sharing a root password (to use su), the installation of sudo, or a configuration using extended RBAC for actions that require enhanced privileges.

The recommendation .... specifies a LOG_LEVEL of INFO or DEBUG.

To resolve, partially, the accountability concerns, permitting publickey authentication as root together with LogLevel INFO (minimum) provides the following syslog information:

Jun 25 09:26:41 x071 auth|security:info sshd[8323282]: Accepted publickey for michael from 192.168.129.11 port 54278 ssh2: RSA SHA256:dRHxa5CGr5HCdC89suwYIBtAT8lyogz4SErSxTq0JXk

Jun 25 09:26:52 x071 auth|security:info sshd[8847396]: Accepted publickey for root from 192.168.129.11 port 54279 ssh2: RSA SHA256:dRHxa5CGr5HCdC89suwYIBtAT8lyogz4SErSxTq0JXk

Jun 25 09:26:53 x071 auth|security:info sshd[9044142]: Accepted publickey for root from 192.168.129.11 port 54280 ssh2: RSA SHA256:dRHxa5CGr5HCdC89suwYIBtAT8lyogz4SErSxTq0JXk

Local site policy might decide that publickey accountability is sufficient and a setting of PermitRootLogin prohibit-password (the new default) provides sufficient accountability and security.

Note: only public keys in a file such as ~root/.ssh/authorized_keys will be able to connect."
      solution    : "#!/usr/bin/ksh
PREFERRED_SETTING='prohibit-password'
umask 077
set $(/usr/bin/egrep '^PermitRootLogin' /etc/ssh/sshd_config)
echo $?
if [[ ! -z $1 ]]; then
  #  Look for a setting and change to no if anything else
  if [[ $2 != ${PREFERRED_SETTING} ]]; then
    sed 's/^PermitRootLogin \{1\}[^ ]\{1,\}/PermitRootLogin ${PREFERRED_SETTING}/' /etc/ssh/sshd_config >/tmp/sshd_config.$$
  fi
else
  #  Look for a comment and append
  sed '/^# \{0,\}PermitRootLogin/ a\^JPermitRootLogin ${PREFERRED_SETTING}/' /etc/ssh/sshd_config  >/tmp/sshd_config.$$
fi

if [[ -e /tmp/sshd_config.$$ ]]; then
  diff -u /tmp/sshd_config.$$  /etc/ssh/sshd_config
  rm /tmp/sshd_config.$$
elif
  # Verify setting is specified
  /usr/bin/egrep '^PermitRootLogin' /etc/ssh/sshd_config >>/dev/null
  if [[ $? -ne 0 ]]; then
    print 'PermitRootLogin ${PREFERRED_SETTING}' >> /etc/ssh/sshd_config
  fi
fi

Re-cycle the sshd daemon to pick up the configuration changes:

stopsrc -s sshd
sleep 5
startsrc -s sshd

Default Value:

PermitRootLogin prohibit-password

Additional Information:

The values for this parameter have been yes (not recommended), no (not recommended, but accepted), prohibit-password (recommended setting), forced-commands-only (not recommended, but accepted) and without-password (deprecated setting).

PermitRootLogin:

Specifies whether root can log in using ssh(1). The argument must be yes, prohibit-password, forced-commands-only, or no. The default is prohibit-password. If this option is set to prohibit-password (or its deprecated alias, without-password), password and keyboard-interactive authentication are disabled for root. If this option is set to forced-commands-only, root login with public key authentication will be allowed, but only if the command option has been specified (which may be useful for taking remote backups even if root login is normally not allowed). All other authentication methods are disabled for root. If this option is set to no, root is not allowed to log in."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-171|3.7.5,800-53|CM-7,800-53|MA-4,800-53r5|CM-7,800-53r5|MA-4,CSCv7|9.2,CSCv8|4.6,CSF|PR.IP-1,CSF|PR.MA-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7,ITSG-33|MA-4,LEVEL|2A,NESA|T2.3.4,NESA|T5.4.4,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3,TBA-FIISB|45.2.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*PermitRootLogin[\\s]+(no|prohibit-password|forced-commands-only)[\\s]*$"
      expect      : "^[\\s]*PermitRootLogin[\\s]+(no|prohibit-password|forced-commands-only)[\\s]*$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "4.5.3.14 sshd_config: Use Conditional exception(s)."
      info        : "There are several options available to regulate access to a server via OpenSSH. There are settings that are set at a global level only and there are settings that have a global default but can be modified to meet specific client (from) requirements for the server (to) being configured.

These overrides are specified via a conditional block that starts with the directive Match. When all the MATCH criteria (User, Group, Host, LocalAddress, LocalPort, RDomain, and Address, or the single token ALL that matches by definition) the following settings can be redefined (overwrite) previous setting values:

AcceptEnv, AllowAgentForwarding, AllowGroups, AllowStreamLocalForwarding, AllowTcpForwarding, AllowUsers, AuthenticationMethods, AuthorizedKeysCommand, AuthorizedKeysCommandUser, AuthorizedKeysFile, AuthorizedPrincipalsCommand, AuthorizedPrincipalsCommandUser, AuthorizedPrincipalsFile, Banner, CASignatureAlgorithms, ChrootDirectory, ClientAliveCountMax, ClientAliveInterval, DenyGroups, DenyUsers, DisableForwarding, ExposeAuthInfo, ForceCommand, GatewayPorts, GSSAPIAuthentication, HostbasedAcceptedAlgorithms, HostbasedAuthentication, HostbasedUsesNameFromPacketOnly, IgnoreRhosts, Include, IPQoS, KbdInteractiveAuthentication, KerberosAuthentication, LogLevel, MaxAuthTries, MaxSessions, PasswordAuthentication, PermitEmptyPasswords, PermitListen, PermitOpen, PermitRootLogin, PermitTTY, PermitTunnel, PermitUserRC, PubkeyAcceptedAlgorithms, PubkeyAuthentication, PubkeyAuthOptions, RekeyLimit, RevokedKeys, RDomain, SetEnv, StreamLocalBindMask, StreamLocalBindUnlink, TrustedUserCAKeys, X11DisplayOffset, X11Forwarding and X11UseLocalhost.

Rationale:

There are situations where exceptions to the corporate security policy are required. Match is the mechanism that permits the configuration - and documentation - of exceptions.

# Example of overriding settings on a per-user basis

# anoncvs does not get a comman prompt, instead a specific command is started.

#Match User anoncvs

#       X11Forwarding no

#       AllowTcpForwarding no

#       PermitTTY no

#       ForceCommand cvs server

# The user michael requires, and is permitted (see support ticket X123456), the use of X11Forwarding.

# Match User michael

#        X11Forwarding yes

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Default Value:

No MATCH statements are used."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-171|3.7.5,800-53|CM-7,800-53|MA-4,800-53r5|CM-7,800-53r5|MA-4,CSCv7|9.2,CSCv8|4.6,CSF|PR.IP-1,CSF|PR.MA-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7,ITSG-33|MA-4,LEVEL|2M,NESA|T2.3.4,NESA|T5.4.4,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3,TBA-FIISB|45.2.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
      cmd         : "exceptions=$(egrep \"^Match\" /etc/ssh/sshd_config | wc -l)
if [[ ${exceptions} != \"0\" ]]; then
 echo \"Verify the following Match statements are properly documented and still permitted/required\"
 /usr/bin/egrep -p \"^Match\" /etc/ssh/sshd_config
fi"
      expect      : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "4.5.5.1 SNMP - disable private community string"
          file        : "/etc/snmpd.conf"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "4.5.5.1 SNMP - disable private community string"
          info        : "If snmpd is required within the environment, disable the private community string.

Rationale:

In AIX, two SNMP community names, private and system, are enabled with read/write privileges, but are allowed access only from localhost connections. As these SNMP names are the default, they must not be used. Any SNMP community name should be a combination of letters, numbers and special characters to enhance security."
          solution    : "Create a backup of /etc/snmpd.conf:

cp -p /etc/snmpd.conf /etc/snmpd.conf.pre_cis

Edit the file:

vi /etc/snmpd.conf

Comment out the private entry:

#community       private 127.0.0.1 255.255.255.255 readWrite

Default Value:

Commented in

Additional Information:

Reversion:

Copy back the original /etc/snmpd.conf file:

cp -p /etc/snmpd.conf.pre_cis /etc/snmpd.conf"
          reference   : "800-171|3.5.2,800-53|IA-5c.,800-53r5|IA-5c.,CN-L3|7.1.2.7(d),CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5c.,LEVEL|2A,NESA|T5.2.1,NESA|T5.2.3,NESA|T5.5.2,NESA|T5.5.3,QCSC-v1|5.2.2,QCSC-v1|13.2"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          file        : "/etc/snmpd.conf"
          regex       : "^[\\s]*community[\\s]+private([\\s]+.*)*[\\s]*$"
          expect      : "^[\\s]*community[\\s]+private([\\s]+.*)*[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "4.5.5.1 SNMP - disable private community string"
          info        : "If snmpd is required within the environment, disable the private community string.

Rationale:

In AIX, two SNMP community names, private and system, are enabled with read/write privileges, but are allowed access only from localhost connections. As these SNMP names are the default, they must not be used. Any SNMP community name should be a combination of letters, numbers and special characters to enhance security."
          solution    : "Create a backup of /etc/snmpd.conf:

cp -p /etc/snmpd.conf /etc/snmpd.conf.pre_cis

Edit the file:

vi /etc/snmpd.conf

Comment out the private entry:

#community       private 127.0.0.1 255.255.255.255 readWrite

Default Value:

Commented in

Additional Information:

Reversion:

Copy back the original /etc/snmpd.conf file:

cp -p /etc/snmpd.conf.pre_cis /etc/snmpd.conf"
          reference   : "800-171|3.5.2,800-53|IA-5c.,800-53r5|IA-5c.,CN-L3|7.1.2.7(d),CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5c.,LEVEL|2A,NESA|T5.2.1,NESA|T5.2.3,NESA|T5.5.2,NESA|T5.5.3,QCSC-v1|5.2.2,QCSC-v1|13.2"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "4.5.5.2 SNMP - disable system community string"
          file        : "/etc/snmpd.conf"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "4.5.5.2 SNMP - disable system community string"
          info        : "If snmpd is required within the environment, disable the system community string.

Rationale:

In AIX, two SNMP community names, private and system, are enabled with read/write privileges, but are allowed access only from localhost connections. As these SNMP names are the default, they must not be used. Any SNMP community name should be a combination of letters, numbers and special characters to enhance security."
          solution    : "Edit the file:

vi /etc/snmpd.conf

Comment out the system entry:

#community       system  127.0.0.1 255.255.255.255 readWrite 1.17.2

Default Value:

Commented in

Additional Information:

Reversion:

Copy back the original /etc/snmpd.conf file:

cp -p /etc/snmpd.conf.pre_cis /etc/snmpd.conf"
          reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|2A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          file        : "/etc/snmpd.conf"
          regex       : "^[\\s]*community[\\s]+system([\\s]+.*)*[\\s]*$"
          expect      : "^[\\s]*community[\\s]+system([\\s]+.*)*[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "4.5.5.2 SNMP - disable system community string"
          info        : "If snmpd is required within the environment, disable the system community string.

Rationale:

In AIX, two SNMP community names, private and system, are enabled with read/write privileges, but are allowed access only from localhost connections. As these SNMP names are the default, they must not be used. Any SNMP community name should be a combination of letters, numbers and special characters to enhance security."
          solution    : "Edit the file:

vi /etc/snmpd.conf

Comment out the system entry:

#community       system  127.0.0.1 255.255.255.255 readWrite 1.17.2

Default Value:

Commented in

Additional Information:

Reversion:

Copy back the original /etc/snmpd.conf file:

cp -p /etc/snmpd.conf.pre_cis /etc/snmpd.conf"
          reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|2A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "4.5.5.3 SNMP - disable public community string"
          file        : "/etc/snmpd.conf"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "4.5.5.3 SNMP - disable public community string"
          info        : "If snmpd is required within the environment, disable or change the public community string.

Rationale:

The public community string can be polled by remote SNMP devices and pertinent information can be read or changed on the host. The public community string should but commented out, or if SNMP is a required service the public community name should be changed to be a combination of letters, numbers and special characters to enhance security."
          solution    : "Edit the file:

vi /etc/snmpd.conf

Comment out the public entry:

#community       public

Default Value:

Commented in

Additional Information:

Reversion:

Copy back the original /etc/snmpd.conf file:

cp -p /etc/snmpd.conf.pre_cis /etc/snmpd.conf"
          reference   : "800-171|3.5.2,800-53|IA-5c.,800-53r5|IA-5c.,CN-L3|7.1.2.7(d),CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5c.,LEVEL|2A,NESA|T5.2.1,NESA|T5.2.3,NESA|T5.5.2,NESA|T5.5.3,QCSC-v1|5.2.2,QCSC-v1|13.2"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          file        : "/etc/snmpd.conf"
          regex       : "^[\\s]*community[\\s]+public([\\s]+.*)*[\\s]*$"
          expect      : "^[\\s]*community[\\s]+public([\\s]+.*)*[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "4.5.5.3 SNMP - disable public community string"
          info        : "If snmpd is required within the environment, disable or change the public community string.

Rationale:

The public community string can be polled by remote SNMP devices and pertinent information can be read or changed on the host. The public community string should but commented out, or if SNMP is a required service the public community name should be changed to be a combination of letters, numbers and special characters to enhance security."
          solution    : "Edit the file:

vi /etc/snmpd.conf

Comment out the public entry:

#community       public

Default Value:

Commented in

Additional Information:

Reversion:

Copy back the original /etc/snmpd.conf file:

cp -p /etc/snmpd.conf.pre_cis /etc/snmpd.conf"
          reference   : "800-171|3.5.2,800-53|IA-5c.,800-53r5|IA-5c.,CN-L3|7.1.2.7(d),CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5c.,LEVEL|2A,NESA|T5.2.1,NESA|T5.2.3,NESA|T5.5.2,NESA|T5.5.3,QCSC-v1|5.2.2,QCSC-v1|13.2"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "4.5.5.4 SNMP - disable Readwrite community access"
          file        : "/etc/snmpd.conf"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "4.5.5.4 SNMP - disable Readwrite community access"
          info        : "If snmpd is required within the environment, disable readWrite permissions for all active community strings.

Rationale:

If SNMP is required, none of the available community strings should have global readWrite permissions defined. This would allow any remote client to query and to set system configuration parameters. SNMP readWrite communities must be disabled unless absolutely necessary. If a readWrite community is enabled, then access must be granted to only trusted machines in your network. As SNMP uses community names as part of authentication, you must ensure that all community names are greater than six characters and is a mix of characters, numbers, and special characters."
          solution    : "Identify if there are any currently configured community strings:

grep '^community[[:blank:]]' /etc/snmpd.conf

If there are active community strings, edit the configuration file:

vi /etc/snmpd.conf

Replace all instances of:

community <community name> <IP addresses> <netmask> [ readWrite <view>]

With:

community <community name> <IP addresses> <netmask> [ readOnly <view>]

Default Value:

N/A

Additional Information:

Reversion:

Copy back the original /etc/snmpd.conf file:

cp -p /etc/snmpd.conf.pre_cis /etc/snmpd.conf"
          reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|2A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          file        : "/etc/snmpd.conf"
          regex       : "^[\\s]*community[\\s]+[^#]*[\\s]+readWrite[\\s]*"
          expect      : "^[\\s]*community[\\s]+[^#]*[\\s]+readWrite[\\s]*"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "4.5.5.4 SNMP - disable Readwrite community access"
          info        : "If snmpd is required within the environment, disable readWrite permissions for all active community strings.

Rationale:

If SNMP is required, none of the available community strings should have global readWrite permissions defined. This would allow any remote client to query and to set system configuration parameters. SNMP readWrite communities must be disabled unless absolutely necessary. If a readWrite community is enabled, then access must be granted to only trusted machines in your network. As SNMP uses community names as part of authentication, you must ensure that all community names are greater than six characters and is a mix of characters, numbers, and special characters."
          solution    : "Identify if there are any currently configured community strings:

grep '^community[[:blank:]]' /etc/snmpd.conf

If there are active community strings, edit the configuration file:

vi /etc/snmpd.conf

Replace all instances of:

community <community name> <IP addresses> <netmask> [ readWrite <view>]

With:

community <community name> <IP addresses> <netmask> [ readOnly <view>]

Default Value:

N/A

Additional Information:

Reversion:

Copy back the original /etc/snmpd.conf file:

cp -p /etc/snmpd.conf.pre_cis /etc/snmpd.conf"
          reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|2A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "4.5.5.5 SNMP - restrict community access"
          file        : "/etc/snmpd.conf"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "AIX"
          type        : FILE_CONTENT_CHECK
          description : "4.5.5.5 SNMP - restrict community access"
          info        : "If snmpd is required within the environment, implement IP access restrictions on the available community strings.

Rationale:

If SNMP is required, IP access restrictions should be put into place to limit which hosts or networks subnets are able to remotely poll the server."
          solution    : "Identify if there are any currently configured community strings:

grep '^community[[:blank:]]' /etc/snmpd.conf

If there are active community strings, edit the configuration file:

vi /etc/snmpd.conf

Implement IP access restrictions to ALL of the available community names e.g.:

community       tivoli  192.132.10.0 255.255.255.0 readOnly

The format of each line should reflect:

community <community name> <IP addresses> <netmask> [ <permissions> <view>]

Default Value:

N/A

Additional Information:

Reversion:

Copy back the original /etc/snmpd.conf file:

cp -p /etc/snmpd.conf.pre_cis /etc/snmpd.conf"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|2A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          file        : "/etc/snmpd.conf"
          regex       : "^[\\s]*community[\\s]*"
          expect      : "^[\\s]*community[\\s]*[^\\s#]+[0-9A-Fa-f:\\.]*[\\s]+((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\.|\\b)){4}[\\s]*((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\.|\\b)){4}.*$"
          required    : NO
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "4.5.5.5 SNMP - restrict community access"
          info        : "If snmpd is required within the environment, implement IP access restrictions on the available community strings.

Rationale:

If SNMP is required, IP access restrictions should be put into place to limit which hosts or networks subnets are able to remotely poll the server."
          solution    : "Identify if there are any currently configured community strings:

grep '^community[[:blank:]]' /etc/snmpd.conf

If there are active community strings, edit the configuration file:

vi /etc/snmpd.conf

Implement IP access restrictions to ALL of the available community names e.g.:

community       tivoli  192.132.10.0 255.255.255.0 readOnly

The format of each line should reflect:

community <community name> <IP addresses> <netmask> [ <permissions> <view>]

Default Value:

N/A

Additional Information:

Reversion:

Copy back the original /etc/snmpd.conf file:

cp -p /etc/snmpd.conf.pre_cis /etc/snmpd.conf"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|2A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
        </report>
      </else>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "readonly"
          file        : "/etc/profile"
          regex       : "^[\\s]*readonly[\\s]+(TMOUT[\\s]+TIMEOUT[\\s]*|TIMEOUT[\\s]+TMOUT[\\s]*)$"
          expect      : "^[\\s]*readonly[\\s]+(TMOUT[\\s]+TIMEOUT[\\s]*|TIMEOUT[\\s]+TMOUT[\\s]*)$"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "TIMEOUT"
          file        : "/etc/profile"
          regex       : "^[\\s]*TIMEOUT"
          expect      : "^[\\s]*TIMEOUT[\\s]*=[\\s]*([1-9]|[1-9][0-9]|[1-8][0-9]{2}|900)[\\s]*$"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "TMOUT"
          file        : "/etc/profile"
          regex       : "^[\\s]*TMOUT"
          expect      : "^[\\s]*TMOUT[\\s]*=[\\s]*([1-9]|[1-9][0-9]|[1-8][0-9]{2}|900)[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "4.6.6 Unattended terminal session timeout is 900 seconds (or less) - readonly"
          info        : "TMOUT and TIMEOUT are environmental setting that activate the timeout of a shell. The value is in seconds.

TMOUT=n - Sets the shell timeout to n seconds. A setting of TMOUT=0, or unset TMOUT disables the automatic session timeout.

readonly TMOUT- Both export and lock TMOUT environmental variable to it's present value, preventing unwanted modification during run-time.

Rationale:

All systems are vulnerable if terminals are left logged in and unattended. The most serious problem occurs when a system manager leaves a terminal unattended that has been enabled with root authority. In general, users should log out anytime they leave their terminals.

You can force a terminal to log out after a period of inactivity by setting the TMOUT and TIMEOUT parameters in the /etc/profile file. The TMOUT parameter works in the ksh (Korn) shell, and the TIMEOUT parameter works in the bsh (Bourne) shell.

Impact:

This duplicates a recommendation with the addition that the variables are set to readonly (rather than export). And the recommendation level is set to level 2."
          solution    : "Review /etc/profile to verify that TMOUT and TIMEOUT are configured to:

include a timeout of no more than 900 seconds

to be readonly

verify readonly statement is the last statement

/usr/bin/egrep -e 'TMOUT|TIMEOUT' /etc/profile

This should return something similar to:

# TMOUT=120
TMOUT=900
TIMEOUT=900
readonly TMOUT TIMEOUT

If either setting is missing, and/or the readonly statement, add these to /etc/profile.

Default Value:

TMOUT=0"
          reference   : "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|2A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "TEP"
          cmd         : "/usr/sbin/trustchk -p TEP 2>&1"
          expect      : "^[\\s]*TEP[\\s]*=[\\s]*ON[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "TE"
          cmd         : "/usr/sbin/trustchk -p TE 2>&1"
          expect      : "^[\\s]*TE[\\s]*=[\\s]*ON[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "4.8.1 TE - implementation"
          info        : "The recommendation is to implement TE to protect the system from Trojan horse style attacks. TE provides a robust system integrity checking process.

Rationale:

One of the common ways a hacker infiltrates a system is through file tampering or the use of a Trojan horse. The implementation of TE can provide a number of integrity checks prior to loading a program into memory, any deviations can also be highlighted when programs and files are validated offline. This ensures that the programs executed are those which are intended to be and not malicious code masquerading as a true program.

When a discrepancy is identified it is classified as either minor or major. A minor discrepancy is automatically reset to the value defined in the TSD. In the event of a major discrepancy the file access permissions are changed to make the file inaccessible.

There is a pre-requisite requirement to install CLiC and SSL software."
          solution    : "It is recommended that TE is configured in online mode. This provides real time protection against Trojan horse attacks.
The tsd.dat file contains the important security attributes relating to all of the managed files:

cat /etc/security/tsd/tsd.dat

NOTE: The trustchk command is used to manage the entries in this file.
To enable TE, firstly enable online checking of executables and shell scripts:

trustchk -p CHKEXEC=ON
trustchk -p CHKSCRIPT=ON

Stop the execution or loading of binaries and files into memory when the integrity checks fail:

trustchk -p STOP_ON_CHKFAIL=ON

Enable online TE based on the policy selections above:

trustchk -p TE=ON

To set a Trusted Execution Path or TEP:

trustchk -p TEP=<PATH variable>

Enable the TEP:

trustchk -p TEP=ON

NOTE: Commands will not be executed if they reside outside of the TEP.
Further details regarding planning and implementation of TE can be found within the IBM AIX 7.1 Infocentre:
https://www.ibm.com/docs/en/aix/7.1?topic=configuration-trusted-execution
NOTE: The configuration of TE is dependant on the unique requirements of a given environment.

Default Value:

Not enabled"
          reference   : "800-171|3.14.2,TBA-FIISB|49.2.2,800-171|3.14.4,ITSG-33|SI-3,800-171|3.14.5,QCSC-v1|3.2,800-53|SI-3,ITSG-33|SI-7,800-53|SI-7(6),TBA-FIISB|50.2.1,800-53r5|SI-3,ITSG-33|SI-7a.,800-53r5|SI-7(6),QCSC-v1|5.2.3,CN-L3|7.1.3.6(b),NESA|T3.4.1,CN-L3|8.1.4.5,TBA-FIISB|49.3.1,CN-L3|8.1.9.6(a),NESA|T7.3.2,CN-L3|8.1.9.6(b),QCSC-v1|8.2.1,CN-L3|8.1.10.5(b),NESA|T7.3.3,CN-L3|8.1.10.7(a),TBA-FIISB|51.2.7,CN-L3|8.1.10.7(b),NIAv2|GS8a,CSF|DE.CM-4,SWIFT-CSCv1|6.2,CSF|DE.DP-3,PCI-DSSv3.2.1|5.1,CSF|PR.DS-6,TBA-FIISB|49.3.2,GDPR|32.1.b,PCI-DSSv3.2.1|5.1.1,HIPAA|164.306(a)(1),TBA-FIISB|49.2.1,HIPAA|164.312(c)(1),PCI-DSSv3.2.1|10.5.5,HIPAA|164.312(c)(2),TBA-FIISB|51.2.4,HIPAA|164.312(e)(2)(i),PCI-DSSv4.0|5.2.1,ISO/IEC-27001|A.12.2.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CHECK_NOT
          description : "at.deny"
          file        : "/var/adm/cron/at.deny"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "at.allow"
          file        : "/var/adm/cron/at.allow"
          regex       : "^root$"
          expect      : "^root$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "6.5 Services - at access is root only"
          info        : "This change creates an at.allow file with a root user entry and removes the at.deny file, if it exists.

Rationale:

This ensures that only the root user has the ability to schedule jobs through the at command. A hacker may exploit use of at to execute programs or processes automatically. Limiting access to the root account only reduces this risk."
          solution    : "Create the /var/adm/cron/at.allow file and remove /var/adm/cron/at.deny (if it exists):

echo 'root' > /var/adm/cron/at.allow
rm /var/adm/cron/at.deny

Default Value:

N/A"
          reference   : "800-53|SI-16,800-53r5|SI-16,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|2A"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CHECK_NOT
          description : "cron.deny"
          file        : "/var/adm/cron/cron.deny"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "cron.allow root"
          file        : "/var/adm/cron/cron.allow"
          regex       : "^root$"
          expect      : "^root$"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "cron.allow admin"
          file        : "/var/adm/cron/cron.allow"
          regex       : "^adm$"
          expect      : "^adm$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "6.7 Services - crontab access is root only"
          info        : "This change creates a cron.allow file with a root user entry and removes the cron.deny file, if it exists.

Rationale:

This ensures that only the root user has the ability to create a crontab. A hacker may exploit use of the crontab to execute programs or processes automatically. Limiting access to the root account only reduces this risk."
          solution    : "Create the /var/adm/cron/cron.allow file and remove /var/adm/cron/cron.deny (if it exists):

print 'root\nadm' > /var/adm/cron/cron.allow

rm /var/adm/cron/cron.deny

Default Value:

N/A"
          reference   : "800-53|SI-16,800-53r5|SI-16,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|2A"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          show_output : YES
        </report>
      </then>
    </if>

    <report type:"WARNING">
      description : "6.1.1 Create baseline of executables that elevate to a different GUID (Not scored)"
      info        : "Access Control can be managed by a judicious arrangement of file system DAC controls. Legacy AIX Role based management relies on careful assignment of 'Other' to group escalation, followed by Group membership to EUID for the remaining privilege requirement - where the object owner (or super-user access) is able to access any resources needed to complete a task or function.

Rationale:

The baseline is to have a point that can be used to very system integrity - the file system DAC permissions are 'as installed' by OEM.

Should you make local changes to OEM, be sure to create a second list to verify the desired settings (and perhaps verify a specific delta).

Impact:

An example:

# find / -fstype jfs2 -type f ! -size 0 -perm -g+s ! -perm -u+s -perm -o+x -ls |  awk '{ print $6, $5, $3, $11 }' | sort

adm bin -r-xr-sr-x /usr/bin/timex

cron bin -r-xr-sr-x /usr/bin/atq

printq bin -r-xr-sr-x /usr/bin/splp

printq bin -r-xr-sr-x /usr/lib/lpd/piobe

printq root -r-xr-sr-x /usr/lib/lpd/pio/etc/piomkapqd

security root -r-xr-sr-x /usr/bin/chfn

security root -r-xr-sr-x /usr/bin/chgrpmem

security root -r-xr-sr-x /usr/bin/chsh

security root -r-xr-sr-x /usr/bin/smitacl

security root -r-xr-sr-x /usr/sbin/lsgroup

system bin -r-xr-sr-x /usr/bin/ps

system bin -r-xr-sr-x /usr/sbin/killall

system root -r-xr-sr-x /usr/bin/lssrc

system root -r-xr-sr-x /usr/bin/uptime

system root -r-xr-sr-x /usr/bin/w

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : ""
      reference   : "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv7|4,CSCv8|6,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|2M,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
    </report>

    <report type:"WARNING">
      description : "6.1.2 Create baseline of executables that require a specific group for elevation to a different EUID (not scored)"
      info        : "Access Control can be managed by a judicious arrangement of file system DAC controls. Legacy AIX Role based management relies on careful assignment of 'Other' to group escalation, followed by Group membership to EUID for the remaining privilege requirement - where the object owner (or super-user access) is able to access any resources needed to complete a task or function.

Rationale:

The baseline is to have a point that can be used to very system integrity - the file system DAC permissions are 'as installed' by OEM.

Should you make local changes to OEM, be sure to create a second list to verify the desired settings (and perhaps verify a specific delta).

Impact:

An example:

# find / -fstype jfs2 -type f ! -size 0 ! -perm -o+x -perm -u+s -ls |  awk '{ print $6, $5, $3, $11 }' | sort

adm root -r-sr-s--- /usr/bin/acctctl

adm root -r-sr-s--- /usr/bin/acctras

adm root -r-sr-x--- /sbin/helpers/jfs2/diskusg

adm root -r-sr-x--- /usr/lib/sa/sadc

adm root -r-sr-x--- /usr/lpp/bos/inst_root/sbin/helpers/jfs2/diskusg

adm root -r-sr-x--- /usr/sbin/acct/accton

adm root -r-sr-x--- /usr/sbin/diskusg

adm root -r-sr-xr-- /usr/sbin/perf/diag_tool/getschedparms

adm root -r-sr-xr-- /usr/sbin/perf/diag_tool/getvmparms

audit root -r-sr-x--- /usr/sbin/audit

audit root -r-sr-x--- /usr/sbin/auditbin

audit root -r-sr-x--- /usr/sbin/auditcat

audit root -r-sr-x--- /usr/sbin/auditconv

audit root -r-sr-x--- /usr/sbin/auditmerge

audit root -r-sr-x--- /usr/sbin/auditpr

audit root -r-sr-x--- /usr/sbin/auditselect

audit root -r-sr-x--- /usr/sbin/auditstream

audit root -r-sr-x--- /usr/sbin/watch

cron root -r-s--S--- /usr/sbin/cron

printq root -r-sr-s--- /usr/bin/chque

printq root -r-sr-s--- /usr/bin/chquedev

printq root -r-sr-s--- /usr/bin/mkque

printq root -r-sr-s--- /usr/bin/mkquedev

printq root -r-sr-s--- /usr/bin/rmque

printq root -r-sr-s--- /usr/bin/rmquedev

printq root -r-sr-s--- /usr/sbin/lpd

printq root -r-sr-s--- /usr/sbin/qdaemon

printq root -r-sr-x--- /usr/lib/lpd/digest

printq root -r-sr-x--- /usr/lib/lpd/pio/etc/piomkpq

printq root -r-sr-x--- /usr/lib/lpd/rembak

security root -r-sr-x--- /usr/bin/chgroup

security root -r-sr-x--- /usr/bin/chrole

security root -r-sr-x--- /usr/bin/chsec

security root -r-sr-x--- /usr/bin/chuser

security root -r-sr-x--- /usr/bin/lssec

security root -r-sr-x--- /usr/bin/mkgroup

security root -r-sr-x--- /usr/bin/mkrole

security root -r-sr-x--- /usr/bin/mkuser

security root -r-sr-x--- /usr/bin/pwdck

security root -r-sr-x--- /usr/bin/sysck

security root -r-sr-x--- /usr/bin/tcbck

security root -r-sr-x--- /usr/bin/usrck

security root -r-sr-x--- /usr/sbin/chtcb

security root -r-sr-x--- /usr/sbin/grpck

security root -r-sr-x--- /usr/sbin/mkpasswd

security root -r-sr-x--- /usr/sbin/rmgroup

security root -r-sr-x--- /usr/sbin/rmrole

security root -r-sr-x--- /usr/sbin/rmuser

shutdown root -r-sr-x--- /usr/sbin/exec_shutdown

shutdown root -r-sr-x--- /usr/sbin/fastboot

shutdown root -r-sr-x--- /usr/sbin/reboot

snapp root -r-sr-x--- /usr/sbin/snappd

system root -r-sr-s--- /usr/lib/semutil

system root -r-sr-s--- /usr/sbin/srcd

system root -r-sr-s--- /usr/sbin/srcmstr

system root -r-sr-x--- /usr/bin/filemon

system root -r-sr-x--- /usr/bin/fileplace

system root -r-sr-x--- /usr/bin/fileplacej2

system root -r-sr-x--- /usr/bin/netpmon

system root -r-sr-x--- /usr/lpp/diagnostics/bin/Dctrl

system root -r-sr-x--- /usr/lpp/diagnostics/bin/diagTasksWebSM

system root -r-sr-x--- /usr/lpp/diagnostics/bin/diagela_exec

system root -r-sr-x--- /usr/lpp/diagnostics/bin/diaggetrto

system root -r-sr-x--- /usr/lpp/diagnostics/bin/diagrto

system root -r-sr-x--- /usr/lpp/diagnostics/bin/diagsetrto

system root -r-sr-x--- /usr/lpp/diagnostics/bin/uesensor

system root -r-sr-x--- /usr/lpp/diagnostics/bin/update_flash

system root -r-sr-x--- /usr/lpp/diagnostics/bin/update_manage_flash

system root -r-sr-x--- /usr/lpp/diagnostics/bin/uspchrp

system root -r-sr-x--- /usr/lpp/diagnostics/bin/usysfault

system root -r-sr-x--- /usr/lpp/diagnostics/bin/usysident

system root -r-sr-x--- /usr/lpp/diagnostics/bin/utape

system root -r-sr-x--- /usr/sbin/allocp

system root -r-sr-x--- /usr/sbin/cfgmgr

system root -r-sr-x--- /usr/sbin/chcod

system root -r-sr-x--- /usr/sbin/chcons

system root -r-sr-x--- /usr/sbin/chdev

system root -r-sr-x--- /usr/sbin/chpath

system root -r-sr-x--- /usr/sbin/devinstall

system root -r-sr-x--- /usr/sbin/diag_exec

system root -r-sr-x--- /usr/sbin/extendvg

system root -r-sr-x--- /usr/sbin/getlvcb

system root -r-sr-x--- /usr/sbin/getlvname

system root -r-sr-x--- /usr/sbin/getvgname

system root -r-sr-x--- /usr/sbin/gsclvmd

system root -r-sr-x--- /usr/sbin/invscoutd

system root -r-sr-x--- /usr/sbin/ipl_varyon

system root -r-sr-x--- /usr/sbin/lchangelv

system root -r-sr-x--- /usr/sbin/lchangepv

system root -r-sr-x--- /usr/sbin/lchangevg

system root -r-sr-x--- /usr/sbin/lchlvcopy

system root -r-sr-x--- /usr/sbin/lcreatelv

system root -r-sr-x--- /usr/sbin/ldeletelv

system root -r-sr-x--- /usr/sbin/ldeletepv

system root -r-sr-x--- /usr/sbin/lextendlv

system root -r-sr-x--- /usr/sbin/lmigratelv

system root -r-sr-x--- /usr/sbin/lmigratepp

system root -r-sr-x--- /usr/sbin/lreducelv

system root -r-sr-x--- /usr/sbin/lresynclp

system root -r-sr-x--- /usr/sbin/lresynclv

system root -r-sr-x--- /usr/sbin/lvaryoffvg

system root -r-sr-x--- /usr/sbin/lvaryonvg

system root -r-sr-x--- /usr/sbin/lvgenmajor

system root -r-sr-x--- /usr/sbin/lvgenminor

system root -r-sr-x--- /usr/sbin/lvrelmajor

system root -r-sr-x--- /usr/sbin/lvrelminor

system root -r-sr-x--- /usr/sbin/mkdev

system root -r-sr-x--- /usr/sbin/mklvcopy

system root -r-sr-x--- /usr/sbin/mkpath

system root -r-sr-x--- /usr/sbin/mkvg

system root -r-sr-x--- /usr/sbin/pdelay

system root -r-sr-x--- /usr/sbin/pdisable

system root -r-sr-x--- /usr/sbin/penable

system root -r-sr-x--- /usr/sbin/phold

system root -r-sr-x--- /usr/sbin/pshare

system root -r-sr-x--- /usr/sbin/pstart

system root -r-sr-x--- /usr/sbin/putlvcb

system root -r-sr-x--- /usr/sbin/putlvodm

system root -r-sr-x--- /usr/sbin/redefinevg

system root -r-sr-x--- /usr/sbin/rmdev

system root -r-sr-x--- /usr/sbin/rmpath

system root -r-sr-x--- /usr/sbin/swap

system root -r-sr-x--- /usr/sbin/swapoff

system root -r-sr-x--- /usr/sbin/swapon

system root -r-sr-x--- /usr/sbin/swcons

system root -r-sr-x--- /usr/sbin/switch.prt

system root -r-sr-x--- /usr/sbin/synclvodm

system root -r-sr-x--- /usr/sbin/tellclvmd

system root -r-sr-x--- /usr/sbin/uucpd

system root -r-sr-x--- /usr/sbin/varyonvg

system root -r-sr-xr-- /usr/sbin/inetd

system root -r-sr-xr-- /usr/sbin/krlogind

system root -r-sr-xr-- /usr/sbin/krshd

system root -r-sr-xr-- /usr/sbin/named9

system root -r-sr-xr-- /usr/sbin/route

system root -r-sr-xr-- /usr/sbin/rwhod

system root -r-sr-xr-- /usr/sbin/talkd

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : ""
      reference   : "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv7|4,CSCv8|6,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|2M,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
    </report>

    <report type:"WARNING">
      description : "6.1.3 Create baseline of executables that elevate directly to a new EUID (not scored)"
      info        : "Access Control can be managed by a judicious arrangement of file system DAC controls. Legacy AIX Role based management relies on careful assignment of 'Other' to group escalation, followed by Group membership to EUID for the remaining privilege requirement - where the object owner (or super-user access) is able to access any resources needed to complete a task or function.

Rationale:

The baseline is to have a point that can be used to very system integrity - the file system DAC permissions are 'as installed' by OEM.

Should you make local changes to OEM, be sure to create a second list to verify the desired settings (and perhaps verify a specific delta).

Impact:

An example:

# find / -fstype jfs2 -type f ! -size 0 -perm -u+s -perm -o+x -ls |  awk '{ print $6, $5, $3, $11 }' | sort

audit root -r-sr-xr-x /usr/sbin/lsaudit

bin root -r-sr-xr-x /usr/bin/getconf

bin root -r-sr-xr-x /usr/bin/iostat

bin root -r-sr-xr-x /usr/bin/ipcs

bin root -r-sr-xr-x /usr/bin/mesg

bin root -r-sr-xr-x /usr/bin/rdist

bin root -r-sr-xr-x /usr/bin/rexec

bin root -r-sr-xr-x /usr/bin/rlogin

bin root -r-sr-xr-x /usr/bin/vmstat

bin root -r-sr-xr-x /usr/lib/mh/slocal

bin root -r-sr-xr-x /usr/sbin/arp.atm

bin root -r-sr-xr-x /usr/sbin/atmstat

bin root -r-sr-xr-x /usr/sbin/atmstat.batm

bin root -r-sr-xr-x /usr/sbin/atmstat.chrm

bin root -r-sr-xr-x /usr/sbin/atmsvcd

bin root -r-sr-xr-x /usr/sbin/atmvcstat

bin root -r-sr-xr-x /usr/sbin/entstat

bin root -r-sr-xr-x /usr/sbin/entstat.bent

bin root -r-sr-xr-x /usr/sbin/entstat.ethchan

bin root -r-sr-xr-x /usr/sbin/entstat.goent

bin root -r-sr-xr-x /usr/sbin/entstat.gxent

bin root -r-sr-xr-x /usr/sbin/entstat.hea

bin root -r-sr-xr-x /usr/sbin/entstat.kngent

bin root -r-sr-xr-x /usr/sbin/entstat.ment

bin root -r-sr-xr-x /usr/sbin/entstat.phxent

bin root -r-sr-xr-x /usr/sbin/entstat.scent

bin root -r-sr-xr-x /usr/sbin/entstat.vent

bin root -r-sr-xr-x /usr/sbin/entstat.vioent

bin root -r-sr-xr-x /usr/sbin/entstat.vnic

bin root -r-sr-xr-x /usr/sbin/fcstat

bin root -r-sr-xr-x /usr/sbin/hdlcstat

bin root -r-sr-xr-x /usr/sbin/ibstat

bin root -r-sr-xr-x /usr/sbin/muxatmd

bin root -r-sr-xr-x /usr/sbin/netstat

bin root -r-sr-xr-x /usr/sbin/quota

bin root -r-sr-xr-x /usr/sbin/repquota

bin root -r-sr-xr-x /usr/sbin/rmsock

bin root -r-sr-xr-x /usr/sbin/rnicstat

bin root -r-sr-xr-x /usr/sbin/rsct/bin/ctstrtcasd

bin root -r-sr-xr-x /usr/sbin/rsct/bin/nlssrc_c

bin root -r-sr-xr-x /usr/sbin/tokstat

bin root -r-sr-xr-x /usr/sbin/tokstat.cstok

cron root -r-sr-sr-x /usr/bin/at

cron root -r-sr-sr-x /usr/bin/crontab

mail root -r-sr-sr-x /usr/bin/bellmail

printq root -r-sr-sr-x /usr/bin/enq

printq root -r-sr-sr-x /usr/lib/lpd/pio/etc/piodmgrsu

printq root -r-sr-xr-x /usr/lib/lpd/pio/etc/pioout

security root -r-sr-xr-x /usr/bin/chcore

security root -r-sr-xr-x /usr/bin/lscore

security root -r-sr-xr-x /usr/bin/newgrp

security root -r-sr-xr-x /usr/bin/pagdel

security root -r-sr-xr-x /usr/bin/paginit

security root -r-sr-xr-x /usr/bin/paglist

security root -r-sr-xr-x /usr/bin/passwd

security root -r-sr-xr-x /usr/bin/pwdadm

security root -r-sr-xr-x /usr/bin/setgroups

security root -r-sr-xr-x /usr/bin/setsenv

security root -r-sr-xr-x /usr/bin/shell

security root -r-sr-xr-x /usr/bin/su

security root -r-sr-xr-x /usr/bin/yppasswd

security root -r-sr-xr-x /usr/sbin/getty

security root -r-sr-xr-x /usr/sbin/login

security root -r-sr-xr-x /usr/sbin/lsuser

security root -r-sr-xr-x /usr/sbin/tsm

sys root -r-sr-xr-x /usr/bin/errpt

sys root -r-sr-xr-x /usr/lib/trcload

system root -r-sr-s--x /usr/sbin/mailq

system root -r-sr-s--x /usr/sbin/newaliases

system root -r-sr-s--x /usr/sbin/sendmail

system root -r-sr-s--x /usr/sbin/sendmail_nonssl

system root -r-sr-s--x /usr/sbin/sendmail_ssl

system root -r-sr-sr-x /usr/bin/confsrc

system root -r-sr-sr-x /usr/sbin/lsresource

system root -r-sr-xr-x /opt/IBMinvscout/bin/invscoutClient_PartitionID

system root -r-sr-xr-x /opt/IBMinvscout/bin/invscoutClient_VPD_Survey

system root -r-sr-xr-x /sbin/helpers/jfs2/backbyinode

system root -r-sr-xr-x /sbin/helpers/jfs2/restbyinode

system root -r-sr-xr-x /usr/bin/capture

system root -r-sr-xr-x /usr/bin/chkey

system root -r-sr-xr-x /usr/bin/ftp

system root -r-sr-xr-x /usr/bin/logout

system root -r-sr-xr-x /usr/bin/rcp

system root -r-sr-xr-x /usr/bin/remsh

system root -r-sr-xr-x /usr/bin/rm_mlcache_file

system root -r-sr-xr-x /usr/bin/rsh

system root -r-sr-xr-x /usr/bin/ruptime

system root -r-sr-xr-x /usr/bin/rwho

system root -r-sr-xr-x /usr/bin/script

system root -r-sr-xr-x /usr/bin/telnet

system root -r-sr-xr-x /usr/bin/tftp

system root -r-sr-xr-x /usr/bin/tn

system root -r-sr-xr-x /usr/bin/tn3270

system root -r-sr-xr-x /usr/bin/traceroute

system root -r-sr-xr-x /usr/bin/utftp

system root -r-sr-xr-x /usr/lib/boot/tftp

system root -r-sr-xr-x /usr/lpp/X11/bin/msmitpasswd

system root -r-sr-xr-x /usr/lpp/bos/inst_root/sbin/helpers/jfs2/backbyinode

system root -r-sr-xr-x /usr/lpp/bos/inst_root/sbin/helpers/jfs2/restbyinode

system root -r-sr-xr-x /usr/lpp/diagnostics/bin/diagrpt

system root -r-sr-xr-x /usr/sbin/arp

system root -r-sr-xr-x /usr/sbin/arp.ib

system root -r-sr-xr-x /usr/sbin/backbyinode

system root -r-sr-xr-x /usr/sbin/fdformat

system root -r-sr-xr-x /usr/sbin/format

system root -r-sr-xr-x /usr/sbin/frcactrl

system root -r-sr-xr-x /usr/sbin/fuser

system root -r-sr-xr-x /usr/sbin/invscout

system root -r-sr-xr-x /usr/sbin/keyenvoy

system root -r-sr-xr-x /usr/sbin/lparsetres

system root -r-sr-xr-x /usr/sbin/lquerylv

system root -r-sr-xr-x /usr/sbin/lquerypv

system root -r-sr-xr-x /usr/sbin/lqueryvg

system root -r-sr-xr-x /usr/sbin/lqueryvgs

system root -r-sr-xr-x /usr/sbin/lscfg

system root -r-sr-xr-x /usr/sbin/lscons

system root -r-sr-xr-x /usr/sbin/lslv

system root -r-sr-xr-x /usr/sbin/lsmcode

system root -r-sr-xr-x /usr/sbin/lspath

system root -r-sr-xr-x /usr/sbin/lspv

system root -r-sr-xr-x /usr/sbin/lsrset

system root -r-sr-xr-x /usr/sbin/lsslot

system root -r-sr-xr-x /usr/sbin/lsvg

system root -r-sr-xr-x /usr/sbin/lsvgfs

system root -r-sr-xr-x /usr/sbin/mknod

system root -r-sr-xr-x /usr/sbin/mount

system root -r-sr-xr-x /usr/sbin/mtrace

system root -r-sr-xr-x /usr/sbin/ndp

system root -r-sr-xr-x /usr/sbin/nfsstat

system root -r-sr-xr-x /usr/sbin/ping

system root -r-sr-xr-x /usr/sbin/portmir

system root -r-sr-xr-x /usr/sbin/restbyinode

system root -r-sr-xr-x /usr/sbin/sliplogin

system root -r-sr-xr-x /usr/sbin/timedc

system root -r-sr-xr-x /usr/sbin/umount

system root -r-sr-xr-x /usr/sbin/unmount

system root -rwsr-xr-x /usr/lib/perf/libperfstat_updt_dictionary

system root -rwsr-xr-x /usr/lpp/X11/Xamples/bin/xload

system root -rwsr-xr-x /usr/lpp/X11/bin/aixterm

system root -rwsr-xr-x /usr/lpp/X11/bin/xlock

system root -rwsr-xr-x /usr/lpp/X11/bin/xterm

uucp uucp -r-sr-xr-x /usr/bin/cu

uucp uucp -r-sr-xr-x /usr/bin/uucp

uucp uucp -r-sr-xr-x /usr/bin/uuname

uucp uucp -r-sr-xr-x /usr/bin/uuq

uucp uucp -r-sr-xr-x /usr/bin/uusnap

uucp uucp -r-sr-xr-x /usr/bin/uustat

uucp uucp -r-sr-xr-x /usr/bin/uux

uucp uucp -r-sr-xr-x /usr/sbin/uucp/uucico

uucp uucp -r-sr-xr-x /usr/sbin/uucp/uusched

uucp uucp -r-sr-xr-x /usr/sbin/uucp/uuxqt

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : ""
      reference   : "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv7|4,CSCv8|6,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|2M,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
    </report>

    <report type:"WARNING">
      description : "6.2.1 Privilege escalation: enhanced RBAC"
      info        : "The recommendation is to configure RBAC to reflect the privileged command access requirements for all users of the system. RBAC is a default component of AIX 7.1.

Rationale:

Privileged command access should be limited to and defined by a user's individual needs. Access to a root command prompt should limited, wherever possible, to minimize the risk of inadvertent or deliberate misuse of the account.

The choice between sudo and enhanced RBAC revolves around whether or not the environment is heterogeneous in nature, running different flavors of UNIX, or perhaps different versions of AIX. It may be that sudo is the standard tool of choice for managing privileged command access across an entire UNIX estate. However, if the environment is AIX 6.1+ only, it is recommended that enhanced RBAC is used as the tool of choice. Some implementations however may benefit from a combined approach, utilizing both sudo and enhanced RBAC.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Enhanced RBAC improves on its legacy implementation by allowing greater flexibility around command lists and authorization definitions, which can be customized. The definitions are also saved to a kernel table rather than in flat files, which improves security.
The implementation of RBAC is role based, allowing users to be specifically granted access to the privileged commands they need to perform their day to day tasks. The tool can be used to replace sudo in many instances, or indeed to work alongside it.
A successful implementation may also allow the root account to be deprecated.
The RBAC definition files:

/etc/security/privcmds
/etc/security/privfiles
/etc/security/privdevs

The command used to list the active RBAC definitions, i.e. those loaded into the kernel:

lskst

The command used to update RBAC definitions in the kernel table:

setkst

Further details regarding planning and implementation of RBAC can be found within the IBM AIX 7.1 Infocentre:
https://www.ibm.com/docs/en/aix/7.1?topic=control-aix-rbac
NOTE: The configuration of enhanced RBAC is completely dependent on the unique requirements of a given environment.

Default Value:

N/A"
      reference   : "800-171|3.1.1,800-171|3.1.5,800-171|3.3.8,800-171|3.3.9,800-53|AC-2,800-53|AC-3,800-53|AC-6,800-53|AC-6(1),800-53|AC-6(7),800-53|AU-9(4),800-53r5|AC-2,800-53r5|AC-3,800-53r5|AC-6,800-53r5|AC-6(1),800-53r5|AC-6(7),800-53r5|AU-9(4),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(d),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv8|6.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.5,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.4,ISO/IEC-27001|A.9.4.5,ISO/IEC-27001|A.12.4.2,ITSG-33|AC-2,ITSG-33|AC-3,ITSG-33|AC-6,ITSG-33|AC-6(1),ITSG-33|AU-9(4),ITSG-33|AU-9(4)(a),ITSG-33|AU-9(4)(b),LEVEL|2M,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|AM31,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|NS5j,NIAv2|SM5,NIAv2|SM6,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,NIAv2|VL3b,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.3.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
    </report>

    <custom_item>
      type        : CMD_EXEC
      description : "6.3.1 Privilege escalation: sudo"
      info        : "The recommendation is to install and configure sudo, to reflect the privileged command access requirements of all users of the system.

Rationale:

Privileged command access should be limited to and defined by a user's individual needs. Access to a root command prompt should limited, wherever possible, to minimize the risk of inadvertent or deliberate misuse of the account.

The choice between sudo and enhanced RBAC revolves around whether or not the environment is heterogeneous in nature, running different flavors of UNIX, or perhaps different versions of AIX. It may be that sudo is the standard tool of choice for managing privileged command access across an entire UNIX estate. However, if the environment is AIX 6.1+ only, it is recommended that enhanced RBAC is used as the tool of choice. Some implementations however may benefit from a combined approach, utilizing both sudo and enhanced RBAC."
      solution    : "Install the latest available version for the sudo distribution installed on your system. This version should be 1.9.5p2 or later.

Default Value:

Not installed

Additional Information:

Once installed refer to the sudo man page for information regarding the creation of a custom /etc/sudoers file. It is recommended that, to reduce rule complexity, privileges are assigned at a group level wherever possible:

http://www.gratisoft.us/sudo/man/sudo.html

NOTE: The configuration of sudo is completely dependent on the unique requirements of a given environment.

All editing of the /etc/sudoers file must be performed by the following command:

visudo

Once the /etc/sudoers file has been successfully created, validate the syntax of the file:

visudo -c

Reversion:

De-install the sudo software:"
      reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|2M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
      cmd         : "/usr/bin/sudo --version | head -1"
      expect      : "^(?i)sudo[\\s]*version[\\s]"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"OR">
        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "syslog none"
          file        : "/etc/sudoers /etc/sudoers.d/*"
          regex       : "(?i)^[\\s]*Defaults[\\s]+syslog_"
          expect      : "(?i)^[\\s]*Defaults[\\s]+syslog_(badpri|goodpri)[\\s]*=[\\s]*none"
        </custom_item>

        <custom_item>
          type            : FILE_CONTENT_CHECK
          description     : "sudo.log"
          file            : "/etc/sudoers /etc/sudoers.d/*"
          regex           : "^[\\s]*Defaults[\\s]+logfile"
          expect          : "^[\\s]*Defaults[\\s]+logfile[\\s]*=[\\s]*\"?@SUDO_LOG@\"[\\s]*$"
          file_required   : NO
          min_occurrences : "1"
          string_required : NO
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "6.3.2 Ensure sudo logging is active"
          info        : "All commands executed via sudo should be logged to either syslog (default) or a dedicated log file

Note: visudo edits the sudoers file in a safe fashion, analogous to vipw(8). visudo locks the sudoers file against multiple simultaneous edits, provides basic sanity checks, and checks or parse errors. If the sudoers file is currently being edited you will receive a message to try again later.

Rationale:

Logging of commands executed via sudo enables auditing of those commands"
          solution    : "Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo -f <PATH TO FILE>
Remove the any lines which are found containing

syslog_badpri=none

or

syslog_goodpri=none

-OR-
If you do not want to log sudo commands to syslog, to use as sudo specific log file add the following line:

Defaults  logfile='<PATH TO CUSTOM LOG FILE>'

Example:

Defaults  logfile='/var/log/sudo.log'

Default Value:

All options are unset by default"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type            : FILE_CONTENT_CHECK
      description     : "6.3.3 Ensure sudo commands use pty"
      info            : "sudo can be configured to run only from a pseudo-pty

Note: visudo edits the sudoers file in a safe fashion, analogous to vipw(8). visudo locks the sudoers file against multiple simultaneous edits, provides basic sanity checks, and checks or parse errors. If the sudoers file is currently being edited you will receive a message to try again later.

Rationale:

Attackers can run a malicious program using sudo, which would again fork a background process that remains even when the main program has finished executing."
      solution        : "Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo -f <PATH TO FILE> and add the following line:

Defaults use_pty"
      reference       : "800-53|SI-16,800-53r5|SI-16,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|2A"
      see_also        : "https://workbench.cisecurity.org/benchmarks/13069"
      file            : "/etc/sudoers /etc/sudoers.d/*"
      regex           : "^\\s*Defaults\\s+([^#]+,\\s*)?use_pty(,\\s+\\S+\\s*)*(\\s+#.*)?$"
      expect          : "^\\s*Defaults\\s+([^#]+,\\s*)?use_pty(,\\s+\\S+\\s*)*(\\s+#.*)?$"
      file_required   : NO
      min_occurrences : "1"
      string_required : NO
    </custom_item>

    <report type:"WARNING">
      description : "7.1 Use FLRT regularly"
      info        : "FLRT (Fix Level Recommendation Tool) provides upgrade recommendations for software and firmware, providing custom reports for each system.

Rationale:

The Fix Level Recommendation Tool (FLRT) provides cross-product compatibility information and fix recommendations for IBM products. Use FLRT to plan upgrades of key components or to verify the current health of a system.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Default Value:

Not installed

Additional Information:

To take advantage of the FLRT scripting capabilities, use an HTTP retrieval program, such as wget, to query FLRT for the recommended software levels for your machine.

Make sure your machine has network access to http://www14.software.ibm.com/webapp/set2/flrt/query.

Write a script to query FLRT by reading the FLRT scripting documentation listed below. Or, start with one of the sample ksh scripts provided on this page.

The scripts provided are sample scripts only. You must create your own script based on your environment. If you want to use one of the script samples as a starting point, please modify it to suit the needs of your machine. Comment out sections for software that is not running on your machine. Place your script in a directory where execution will have write authority so that it can create temporary files for processing."
      reference   : "800-171|3.11.2,800-171|3.11.3,800-171|3.14.1,800-53|RA-5,800-53|SI-2,800-53|SI-2(2),800-53r5|RA-5,800-53r5|SI-2,800-53r5|SI-2(2),CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSCv8|7.3,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.1,ITSG-33|RA-5,ITSG-33|SI-2,ITSG-33|SI-2(2),LEVEL|2M,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.1,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,PCI-DSSv4.0|6.3.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.2,SWIFT-CSCv1|2.7"
      see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
    </report>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "audit mount"
          cmd         : "/usr/sbin/lsfs /audit || print \"Audit Filesystem is missing\""
          expect      : "[\\s]+/audit[\\s]+jfs2[\\s]+"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "/etc/security/audit/config"
          cmd         : "/usr/bin/awk 'BEGIN {x=0;a[\"start:-binmode\"] = \"^on$\"; a[\"start:-streammode\"] = \"^off$\"; a[\"bin:-trail\"] = \"^/audit/trail$\"; a[\"bin:-bin1\"] = \"^/audit/bin1$\"; a[\"bin:-bin2\"] = \"^/audit/bin2$\"; a[\"bin:-binsize\"] = \"^10240$\"; a[\"bin:-cmds\"] = \"^/etc/security/audit/bincmds$\"; a[\"users:-root\"] = \"^general\"} /^[^ ]+:$/ { sec=$1 } { if ($3 ~ a[sec\"-\"$1]) delete a[sec\"-\"$1] } END { for (i in a) x++; if (x > 0) { print \"failed\" } else { print \"pass\" } }' /etc/security/audit/config"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "lssec auditclasses"
          cmd         : "/usr/bin/lssec -f /usr/lib/security/mkuser.default -s user -a auditclasses"
          expect      : "^user[\\s]+auditclasses[\\s]*=[\\s]*general,SRC,cron,tcpip[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "crontab"
          cmd         : "/usr/bin/crontab -l | /usr/bin/grep \"cronaudit\" | awk '{ print } END { if (NR == 0) print \"none\" }'"
          expect      : "^[\\s]*[0-9\\s\\*]+[\\s]+/etc/security/aixpert/bin/cronaudit[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "lsitab audit"
          cmd         : "/usr/sbin/lsitab audit | awk '{ print } END { if (NR == 0) print \"none\" }'"
          expect      : "^[\\s]*audit:2:boot:audit[\\s]+start[\\s]+>[\\s]+/dev/console[\\s]+2>&1"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "8.2 AIX Auditing"
          info        : "This recommendation configures AIX auditing in bin mode.

Rationale:

AIX auditing provides a framework within which to capture pertinent system and security related information, such as failed login attempts, cron usage etc. It is recommended that auditing is enabled as part of a group of measures designed to provide enhanced logging of system and security changes. Further information regarding the setup and management of AIX accounting and auditing can be found in the redbook Accounting and Auditing for AIX 5L"
          solution    : "Configure AIX auditing in-line with the High Level AIX Security Expert policy.
Create a /audit filesystem, at least 100 MB in size:

mklv -y <LV name> -t jfs2 -u 1 -c 1 rootvg 1 hdisk0
crfs -v jfs2 -d auditlv -m /audit -A yes -t no
mount /audit

Reflect the following configuration in the /etc/security/audit/config file:

vi /etc/security/audit/config

Add in:

start:
            binmode = on
            streammode = off
bin:
           trail = /audit/trail
            bin1 = /audit/bin1
            bin2 = /audit/bin2
            binsize = 10240
            cmds = /etc/security/audit/bincmds

Add the auditing entries for root and all other users below the pre-defined audit classes:

users:
        root = general,SRC,mail,cron,tcpip,ipsec,lvm
        <user 1> = general,SRC,cron,tcpip
        <user 2> = general,SRC,cron,tcpip
        etc.

Update the /usr/lib/security/mkuser.default auditclasses entry to ensure that auditing is set up for any newly created users:

chsec -f /usr/lib/security/mkuser.default -s user -a
auditclasses=general,SRC,cron,tcpip

A cron job is implemented to monitor the free space in /audit, running hourly, to ensure that /audit does not fill up. If /audit is greater than 90% used, /audit/trail is moved to /audit/trailOneLevelBack:

crontab -e

Add in:

0 * * * * /etc/security/aixpert/bin/cronaudit

NOTE: The implementation of a script to suit internal security policy is recommended to further enhance the log rotation process.
Add the audit startup command into /etc/inittab:

mkitab 'audit:2:boot:audit start > /dev/console 2>&1 # Start audit'

Default Value:

Auditing not enabled"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2M,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "syslog *.info;auth.none"
          file        : "/etc/syslog.conf"
          regex       : "^[\\s]*\\*\\.info;auth\\.none[\\s]+@"
          expect      : "^[\\s]*\\*\\.info;auth\\.none[\\s]+@@SYSLOG_SERVER_IP_ADDRESS@[\\s]*$"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "syslog auth.info"
          file        : "/etc/syslog.conf"
          regex       : "^[\\s]*auth\\.info[\\s]+@"
          expect      : "^[\\s]*auth\\.info[\\s]+@@SYSLOG_SERVER_IP_ADDRESS@[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "8.1.2 Configuring syslog - remote logging"
          info        : "This recommendation implements a remote syslog configuration.

Rationale:

To further enhance the local syslog logging process CIS recommends that syslog information, in particular that generated by the auth facility, is logged remotely. This recommendation assumes that a remote and secure syslog server is available on the network. If this is not the case, please skip to the next recommendation.

The primary reason for logging remotely is to provide an un-editable audit trail of system access. If a hacker were to access a system and gain super user authority it would be easy to edit local files and remove all traces of access, providing the system administrator with no way of identifying the individual or group responsible. If the log data is sent remotely at the point of access, these remote logs can then be reconciled with local data to identify tampered and altered files. The logs can also be used as evidence in any subsequent prosecution."
          solution    : "Explicitly define a remote host for auth.info data in /etc/syslog.conf (enter the remote host IP address in the example below):

printf 'auth.info\t\t@<IP address of remote syslog server>' >> /etc/syslog.conf

NOTE: This ensures that remote login, sudo or su attempts are logged separately
Create a remote host entry in /etc/syslog.conf to capture all other output of level info or higher (enter the remote host IP address in the example below):

printf '*.info;auth.none\t@<IP address of remote syslog server>\n' >> /etc/syslog.conf

Refresh syslogd to force the daemon to read the edited /etc/syslog.conf:

refresh -s syslogd

Default Value:

Not configured

Additional Information:

IBM POWER Systems can supply an additional security mechanism named Trusted Logging in it's PowerSC package.

This product writes logs to storage on a VIOS (Virtual I/O Server) without any need for an active/open IP path.

Since it is an additional product - we consider using Trusted Logging as Level 2, IG2 whereas remote syslog may be considered Level 1."
          reference   : "800-171|3.3.8,800-53|AU-9(2),800-53r5|AU-9(2),CN-L3|8.1.3.5(d),CN-L3|8.1.4.3(c),CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9(2),LEVEL|2A,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SS13e,PCI-DSSv3.2.1|10.5.3,PCI-DSSv3.2.1|10.5.4,PCI-DSSv4.0|10.3.3,QCSC-v1|8.2.1,QCSC-v1|13.2"
          see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "8.1.3 Configuring syslog - remote messages"
      info        : "This recommendation prevents the local syslogd daemon from accepting messages from other hosts on the network.

Rationale:

Apart from a central syslog server, all other hosts should not accept remote syslog messages. By default the syslogd daemon accepts all remote syslog messages as no authentication is required. This means that a hacker could flood a server with syslog messages and potentially fill up the /var filesystem."
      solution    : "If the server does not act as a central syslog server, suppress the logging of messages originating from remote servers:

chssys -s syslogd -a '-r'

Re-cycle syslogd to activate the configuration change:

stopsrc -s syslogd
startsrc -s syslogd

Default Value:

Not configured

Additional Information:

Reversion:

Remove the suppression of remote syslog messages:

chssys -s syslogd -a ''

Re-cycle syslogd to activate the configuration change:

stopsrc -s syslogd

startsrc -s syslogd"
      reference   : "800-171|3.3.8,800-53|AU-9(2),800-53r5|AU-9(2),CN-L3|8.1.3.5(d),CN-L3|8.1.4.3(c),CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9(2),LEVEL|2A,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SS13e,PCI-DSSv3.2.1|10.5.3,PCI-DSSv3.2.1|10.5.4,PCI-DSSv4.0|10.3.3,QCSC-v1|8.2.1,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
      cmd         : "/usr/bin/ps -ef | /usr/bin/grep [s]yslogd"
      expect      : "^[\\s]*root.*/usr/sbin/syslogd[\\s]+-r\\b"
    </custom_item>
  </then>

  <else>
    <report type:"WARNING">
      description : "CIS_AIX_7.2_Benchmark_v1.1.0_Level_2.audit from CIS AIX 7.2 Benchmark v1.1.0 Level 2 Benchmark"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://workbench.cisecurity.org/benchmarks/13069"
    </report>
  </else>
</if>

</check_type>

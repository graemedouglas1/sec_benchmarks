#TRUSTED 1fd1645d8ffebd8df3bdd61fa5caf8f478a02da0f58044501bc69ccc6d06a91a3c60f7c8d8f4cf07fe5400c434c998c1be2d27cd80dfd858535ebb70279944564b0bbb0b0544ce283b194fdf89ccac807ff5bfff7fff8acfb5e3082a3c3c285a3bcf2c11045e8b9b4c6214316393bba5a89231bd7bc6be2aa3b377ce5dd0c745d62587a857c8616afd2b8a724f1fd15f8af12f23a2d228dfa52bb9856e9c337bd947f4a12441903a1f5a67c99ff9cd2b576e0a79dd5d29da39a40f6fac4b307c5ce94d3023132df43a9bcd2eccdfb1a8f477d7a2c97b26c42754a3ab3f69f4263911adf11952c99ec108a2ed194e2ffa2aeb8376e6ce1a0cba54f900cb86681b035328bf9610a3b10014f97507240696f9ac045798bc9436623ee38cd24e2dc6f94573d9966956994c2d6b2a0815ceba25a33e27cbcdf08a34ac1bda808eb015d7f337822a1928d75c56761647cbc23e63506440e427e42cc2f538f9f056eb9fac9d4474a8dd7e7fe0dc455b26d07dd801d8e2ccff6aa833240bcafdee48373a82531a210afd6a4ed71eaa4f0e41dd8d41538d5955f13cbc6174d5dda17cba12f465c3f4205dc7a9c053cd9e1a7054425de54cfbb95275eab2156492663bc4d30e8f685569ad49202bfc1199d9e22d62d30fa9e17cf676de97c79c679cc43fe6ac2e0f879ab327d997f9a75f9aec1510fe135d46fe53130f7e90cc1b8f741a65
#TRUST-RSA-SHA256 7cf3f9c6cd91af41dbceb9b143210f335eec135134e3fec1430d6203789b7e32f3d0b1046c45f858457641e62b3caf239559909306d6bcf92f2a787b21bcd3eebb1959ccb97b7e084f75b78d5ee254113c6d7dd3df96f996d7fdc3133942a8c65d40bac03ed513fa7185fcfb8e25edef4740721c827a1320eab786701a05b5cb8e97336d8fef34bbbb78b9ca1af358d188b99b8743eb9cc0fbe730a64e8528e3999e11c867774a0f21dd47fdad80f4b12b07d2177eb77c69732fc5d20aa619b986bcfa7fa5376a00427ebc16662ff599c16f564717a9e825246d1d23e39023c46adc11fa5b95ab9451b5312b432d4a523ec8ec1ac3a8eefc6073f2e2e501cdf90ed82b283646a653fbc4b37ec46524a8e7326b11bf79f19d093cff360f3b1eb720a5919d9f318958602f729352da2a7cc2972d7799161f6849850f459fedd4b7bf6aa75cbf54492b6a8509723eb496c606c70fb83b6a143f3c14b2c35cd46ca66b567213d2df90464f992c4cfe494e84d9d8c6e3bbef1028141f0304720b9e5c0dbc088fb6e641d1ca6f0001ec2e5294ef80c4391c80ca9c0f7889a57af609b690fa6b8261305d1fba5395ba674024a2d132b70ba81358460f252187d8ce8a6b3deac818ef04362d463b5321734ea4cefc468ec5cbca2e88977ae3b727882957dd04613bc67263550583b536bd4e955be34470d98989c8d58ff255c5cc1acc38
#
# This script is Copyright (C) 2004-2024 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.12 $
# $Date: 2024/06/17 $
#
# description : This document implements the security configuration as recommended by the
#               CIS Microsoft Exchange Server 2016 v1.0.0 Benchmark
#
#<ui_metadata>
#<display_name>CIS Microsoft Exchange Server 2016 Mailbox v1.0.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>Microsoft Exchange Server 2016</name>
#  <profile>L1 Mailbox</profile>
#  <version>1.0.0</version>
#  <link>https://workbench.cisecurity.org/files/1514</link>
#</spec>
#<labels>exchange_server_2016,update_20230227</labels>
#<benchmark_refs>CCE,CIS_Recommendation,CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#<variables>
#  <variable>
#    <name>SECURE_STRING</name>
#    <default>none</default>
#    <description>Secure String for Authentication</description>
#    <info>Comma separated secure string(s) which will be used to authenticate against the target servers.</info>
#    <value_type>SECURE_STRING</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Windows" version:"2">
<group_policy:"Microsoft Exchange Server 2016">

<if>
  <condition type:"AND">
    <custom_item>
      type            : AUDIT_EXCHANGE
      description     : "Test secure string"
      value_type      : POLICY_TEXT
      value_data      : ".*"
      powershell_args : "hostname"
      secure_string   : "@SECURE_STRING@"
      check_type      : CHECK_REGEX
    </custom_item>
  </condition>

  <then>
    <custom_item>
      type            : AUDIT_EXCHANGE
      description     : "CIS_Microsoft_Exchange_Server_2016_Level_1_Mailbox_v1.0.0.audit from CIS Microsoft Exchange Server 2016 v1.0.0 Benchmark"
      info            : "NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      reference       : "800-171|3.14.1,800-53|SI-2c.,800-53r5|SI-2c.,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|SS14b,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.3,QCSC-v1|11.2,SWIFT-CSCv1|2.2"
      value_type      : POLICY_TEXT
      value_data      : "[\s]+15\.1[\s]+.*[\s]+True"
      powershell_args : "If (Get-ExchangeServer) { Get-ExchangeServer | Format-Table Name, AdminDisplayVersion, IsMailboxServer } Else { 'No Exchange servers found' }"
      secure_string   : "@SECURE_STRING@"
      check_type      : CHECK_REGEX
      severity        : MEDIUM
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "Platform check"
          value_type      : POLICY_TEXT
          value_data      : "[\s]+15\.1[\s]+.*[\s]+True"
          powershell_args : "If (Get-ExchangeServer) { Get-ExchangeServer | Format-Table Name, AdminDisplayVersion, IsMailboxServer } Else { 'No Exchange servers found' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "1.14 Set 'Message tracking logging - Mailbox' to 'True'"
          info            : "A message tracking log provides a detailed log of all message activity as messages are transferred to and from a computer running Exchange. Message tracking is available on Hub Transport servers, Edge Transport servers, and Mailbox servers. By default, message tracking is enabled.

Rationale:

If events are not recorded it may be difficult or impossible to determine the root cause of system problems or the unauthorized activities of malicious users."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-TransportService EXCHANGE1 -MessageTrackingLogEnabled $true"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|1A,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/files/1514"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-TransportService ; $settings | Format-List Identity, MessageTrackingLogEnabled; If ($settings | Where {$_.MessageTrackingLogEnabled -ne $true}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.1 Set 'Mailbox quotas: Issue warning at' to '1991680'"
          info            : "You can configure this setting to automatically warn mailbox users that their mailbox is approaching its storage limit. To specify the storage limit, select the check box for this capability, and then specify in kilobytes (KB) how much content users can store in their mailboxes before a warning e-mail message is sent to them. You can enter a value between 0 and 2,147,483,647 KB (2.1 terabytes).

Rationale:

If users exceed their mailbox limits without warning, they may miss important messages requiring them to take immediate action to mitigate a security risk."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-MailboxDatabase 'EXCHANGE01\Mailbox Database' -IssueWarningQuota 1991680KB"
          reference       : "800-53|SC-6,800-53r5|SC-6,CN-L3|7.1.3.7(c),CN-L3|7.1.3.7(d),GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-6,ITSG-33|SC-6a.,LEVEL|1M,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2"
          see_also        : "https://workbench.cisecurity.org/files/1514"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$pass = $true; Get-MailboxDatabase | Format-List Identity, IssueWarningQuota; foreach ($item in (Get-MailboxDatabase).IssueWarningQuota -Replace '.*\(' -Replace ' .*' ) { if (([int64]$item)/1KB -gt 1991680) { $pass = $false } }; If ($pass) { 'All policies compliant' } Else { 'Non compliant policies found' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.2 Set 'Mailbox quotas: Prohibit send and receive at' to '2411520'"
          info            : "Configure this setting to prevent users from sending and receiving e-mail messages after their mailbox size reaches the specified limit. To specify this limit, select the check box, and then type the size of the mailbox in kilobytes (KB) at which you want to prohibit the sending and receiving of e-mail messages and notify the user. You can enter a value between 0 and 2,147,483,647 KB (2.1 terabytes).

Rationale:

If users exceed their mailbox limits without warning, they may miss important messages requiring them to take immediate action to mitigate a security risk."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-MailboxDatabase 'EXCHANGE01\Mailbox Database' -ProhibitSendReceiveQuota 2411520KB"
          reference       : "800-53|SC-6,800-53r5|SC-6,CN-L3|7.1.3.7(c),CN-L3|7.1.3.7(d),GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-6,ITSG-33|SC-6a.,LEVEL|1M,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2"
          see_also        : "https://workbench.cisecurity.org/files/1514"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$pass = $true; Get-MailboxDatabase | Format-List Identity, ProhibitSendReceiveQuota; foreach ($item in (Get-MailboxDatabase).ProhibitSendReceiveQuota -Replace '.*\(' -Replace ' .*' ) { if (([int64]$item)/1KB -gt 2411520) { $pass = $false } }; If ($pass) { 'All policies compliant' } Else { 'Non compliant policies found' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.4 Set 'Keep deleted mailboxes for the specified number of days' to '30'"
          info            : "You can use this setting to specify how long deleted mailboxes are retained before they are permanently removed from the database. Defining a reasonable retention period facilitates recovering accidentally deleted mailboxes while controlling the volume of storage that retained mailboxes require.

Rationale:

Administrators may want to recover accidentally deleted mailboxes or they may need to recover deliberately deleted mailboxes for legal or managerial reasons."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-Mailboxdatabase 'EXCHANGE01\Mailbox Database' -MailboxRetention 30.00:00:00"
          reference       : "800-53|SI-12,800-53r5|SI-12,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-12,ITSG-33|SI-12a.,LEVEL|1A,NESA|M5.2.3,NESA|M5.2.4,NESA|M5.3.1,NIAv2|DR1,NIAv2|DR1a,NIAv2|DR1b,NIAv2|DR1c,NIAv2|DR2,NIAv2|DR3,NIAv2|DR4,NIAv2|DR5,NIAv2|DR6,PCI-DSSv3.2.1|3.1,PCI-DSSv4.0|3.2.1"
          see_also        : "https://workbench.cisecurity.org/files/1514"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$limit = New-TimeSpan -Days 30; $settings = Get-Mailboxdatabase; $settings | Format-List Identity, MailboxRetention; If ($settings | Where {$_.MailboxRetention -gt $limit}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.3 Set 'Mailbox quotas: Prohibit send at' to '2097152'"
          info            : "You can configure this setting to prevent users from sending new e-mail messages after their mailboxes reach a specified limit. To specify this limit, select the check box for this capability, and then type the size of the mailbox in kilobytes (KB) at which you want to prohibit the sending and receiving of e-mail messages and notify the user. You can enter a value between 0 and 2,147,483,647 KB (2.1 terabytes).

Rationale:

This setting prevents users from sending messages when their mailbox is approaching its size limit. However, they can continue to receive messages."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-MailboxDatabase 'EXCHANGE01\Mailbox Database' -ProhibitSendQuota 2097152KB"
          reference       : "800-53|SC-6,800-53r5|SC-6,CN-L3|7.1.3.7(c),CN-L3|7.1.3.7(d),GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-6,ITSG-33|SC-6a.,LEVEL|1M,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2"
          see_also        : "https://workbench.cisecurity.org/files/1514"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$pass = $true; Get-MailboxDatabase | Format-List Identity, ProhibitSendQuota; foreach ($item in (Get-MailboxDatabase).ProhibitSendQuota -Replace '.*\(' -Replace ' .*' ) { if (([int64]$item)/1KB -gt 2097152) { $pass = $false } }; If ($pass) { 'All policies compliant' } Else { 'Non compliant policies found' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.5 Set 'Do not permanently delete items until the database has been backed up' to 'True'"
          info            : "This setting allows you to ensure that items are not permanently deleted until the database has been backed up.

Rationale:

To ensure that accidentally deleted items can be recovered, they should not be permanently deleted until the database is backed up."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-MailboxDatabase <Mailbox Database Name> -RetainDeletedItemsUntilBackup $true"
          reference       : "800-171|3.8.9,800-53|CP-9a.,800-53r5|CP-9a.,CSF|PR.IP-4,GDPR|32.1.b,GDPR|32.1.c,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.3.1,ITSG-33|CP-9a.,LEVEL|1A,NESA|T3.5.1"
          see_also        : "https://workbench.cisecurity.org/files/1514"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-MailboxDatabase ; $settings | Format-List Identity, RetainDeletedItemsUntilBackup; If ($settings | Where {$_.RetainDeletedItemsUntilBackup -ne $true}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.14 Set 'Retain deleted items for the specified number of days' to '14'"
          info            : "You can use this setting to specify how long deleted messages are retained before they are permanently removed from the database. Defining a reasonable retention period facilitates recovering accidentally deleted messages while controlling the volume of storage that retained messages require.

Rationale:

Users may want to recover accidentally deleted messages, or administrators may need to recover deliberately deleted messages for legal or managerial reasons."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-MailboxDatabase -Identity MDB2 -DeletedItemRetention 14"
          reference       : "800-171|3.8.9,800-53|CP-9a.,800-53r5|CP-9a.,CSF|PR.IP-4,GDPR|32.1.b,GDPR|32.1.c,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.3.1,ITSG-33|CP-9a.,LEVEL|1A,NESA|T3.5.1"
          see_also        : "https://workbench.cisecurity.org/files/1514"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-MailboxDatabase ; $settings | Format-List Identity, DeletedItemRetention; If ($settings | Where {$_.DeletedItemRetention -lt 14}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>
      </then>
    </if>
  </then>

  <else>
    <report type:"FAILED">
      description : "Authentication Failure"
      info        : "Secure string passed to powershell was invalid or empty."
    </report>
  </else>
</if>

</group_policy>
</check_type>

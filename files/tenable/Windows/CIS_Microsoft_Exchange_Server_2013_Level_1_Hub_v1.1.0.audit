#TRUSTED 85f26c0f636b8d2feb0dce0c0e03a3886893a698a570c7a6fef3b3b98beb079980cfeca1e080a4cb1d9d9b9c1f0e294312edae66585e4c7160c1a0b81868cbe65215de3c711491a1d6c51611193547d0169fbd599130afe557ec4285d069ee620285a4321725f5ad88ba618a100623eee073746bcaa45c457ee22d97ac29c659caa393379eea5dffdcd891ed3204e9f5af6b6e2b80958b39d3764258ab8b5b30da8a8ba1b191b8fd9623cec67f960c1b5d4f41d4a8e7de4b3284803f32001284eba70caa14fd1b68614060f81d65a2db8426d0fc02c0c3b64ab7da347f45216a832347c88c306beabb13b08ee7358f8c028c38d7bf117a01e4408947f42cdbcedd4c3bbef8ac61996adf941399f3642b46227a47c2ee78e24c3e392e0f676db20fdbd55cdc892af296cf6ec53a9b7ebfe34689410e83089e9304140e95fd9094473fbf5b5cbef18ade40a6373ab0fa2f8b8d2090343f87dfdff143d4bb17beb9944b41f8f1cf171265332982316242daddb60899a4b3936df846dfaf223cdb95a85e3a152b2db102131f2631fc7d34aba97ede461419578906413e27fafbdd73accb6b77470de8f57c1c7f246d292bbb1d1dd2464300be2e41292abc06e1574d616af32d65657f40b27428420df03b80f2671847c73dadff673a1dcc7815765bfceacd81ba0635a232b0519e9cdda51d709655d04fce885db92e9e9b2b1454e5
#TRUST-RSA-SHA256 35544dc0ab58fe16e5c49da6c25207a2cb36261b716b6709685d89e0aa8d3376d401ebaa03cce4755c407c67f6cbcebee277bb73f502c067e4b0203b512d7519a0979d569198bb50a821d9a7e0afec59685f6f9aa503e3caa2626eca504a99daba2247a019e5ddd3dce2fc75f24f9ae748b82a483dba84886151ec7e8f89de3b30cc6dc5eaad62034b285620ce66845c8cd5bb72bc6cc18039b26272aa72693ed6b99bf4922505520c7b0d587d2edc62624e7b50e6fab7e2e4426a10057cecce5bd721a98054ae36ba573e21f0061f9c03f8f7c81833b71ffe44400231e3b84c05215b8846e8030249f53eb9b90f38809123edcfae2404aa630653cfa060ea5cb9b732fabdf8b31f30220c7b394d78ebbcc18746687699e22f83b6951cdeb986008f41f27c157e94547468ab0f01d79e53d08ede50b0e59ef73334853fdd8a3a0944fcd784b2f88897b78b836f60541276af909fe223bda5ff5f58084a77c6d499f2fc4c55e7b8fe4303109dd51a87c37197142cb8cbf18366403f4862fd2cc704df63a84bb95ea30659d47d3e576673288666c234cb0fec4663485559db787f0e26466ce4ee72733b60764248c9802780d581f49ea07a915885146d41555e3ae6a19a6f320a90c6ce36ff28222bd093f42623cebb0b423f26e984b7b4e9438922169e9597f0e216145d56e93be790280c603ab0c2fff071bb9e2731c497187f
#
# This script is Copyright (C) 2004-2024 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.12 $
# $Date: 2024/06/17 $
#
# description : This document implements the security configuration as recommended by the
#               CIS Microsoft Exchange Server 2013 v1.1.0 Benchmark
#
#<ui_metadata>
#<display_name>CIS Microsoft Exchange Server 2013 Hub v1.1.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>Microsoft Exchange Server 2013</name>
#  <profile>L1 Hub</profile>
#  <version>1.1.0</version>
#  <link>https://workbench.cisecurity.org/files/1512</link>
#</spec>
#<labels>exchange_server_2013,update_20230227</labels>
#<benchmark_refs>CCE,CIS_Recommendation,CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#<variables>
#  <variable>
#    <name>SECURE_STRING</name>
#    <default>none</default>
#    <description>Secure String for Authentication</description>
#    <info>Comma separated secure string(s) which will be used to authenticate against the target servers.</info>
#    <value_type>SECURE_STRING</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Windows" version:"2">
<group_policy:"Microsoft Exchange Server 2013">

<if>
  <condition type:"AND">
    <custom_item>
      type            : AUDIT_EXCHANGE
      description     : "Test secure string"
      value_type      : POLICY_TEXT
      value_data      : ".*"
      powershell_args : "hostname"
      secure_string   : "@SECURE_STRING@"
      check_type      : CHECK_REGEX
    </custom_item>
  </condition>

  <then>
    <custom_item>
      type            : AUDIT_EXCHANGE
      description     : "CIS_Microsoft_Exchange_Server_2013_Level_1_Hub_v1.1.0.audit from CIS Microsoft Exchange Server 2013 v1.1.0 Benchmark"
      info            : "NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      reference       : "800-171|3.14.1,800-53|SI-2c.,800-53r5|SI-2c.,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|SS14b,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.3,QCSC-v1|11.2,SWIFT-CSCv1|2.2"
      value_type      : POLICY_TEXT
      value_data      : "[\s]+15\.0[\s]+.*[\s]+True"
      powershell_args : "If (Get-ExchangeServer) { Get-ExchangeServer | Format-Table Name, AdminDisplayVersion, IsHubTransportServer } Else { 'No Exchange servers found' }"
      secure_string   : "@SECURE_STRING@"
      check_type      : CHECK_REGEX
      severity        : MEDIUM
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "Platform check"
          value_type      : POLICY_TEXT
          value_data      : "[\s]+15\.0[\s]+.*[\s]+True"
          powershell_args : "If (Get-ExchangeServer) { Get-ExchangeServer | Format-Table Name, AdminDisplayVersion, IsHubTransportServer } Else { 'No Exchange servers found' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "1.2 Set 'Maximum receive size - organization level' to '10240'"
          info            : "This limit includes the message header, the message body, and any attachments. For internal message flow, Exchange Server uses the custom X-MS-Exchange-Organization-OriginalSize message header to record the original message size of the message as it enters the Exchange Server organization. Whenever the message is checked against the specified message size limits, either the lower value of the current message size or the original message size header is used. The size of the message can change because of content conversion, encoding, and agent processing.

Rationale:

This setting somewhat limits the impact that a malicious user or a computer with malware can have on the Exchange infrastructure by restricting the size of incoming messages."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

	Set-TransportConfig -MaxReceiveSize 10240KB"
          reference       : "800-53|SC-5,800-53r5|SC-5,CSF|DE.CM-1,CSF|PR.DS-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5,ITSG-33|SC-5a.,LEVEL|1M,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1"
          see_also        : "https://workbench.cisecurity.org/files/1512"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "Get-TransportConfig | Format-List MaxReceiveSize; if ([int64]((Get-TransportConfig).MaxReceiveSize -Replace '.*\(' -Replace ' .*' )/1KB -gt 10240) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "1.5 Set 'Configure Sender Filtering' to 'Enabled'"
          info            : "By default, sender filtering is enabled on a computer performing the Edge Transport server role for inbound messages from the Internet that are not authenticated. These messages are handled as external messages. You can disable the Sender Filter agent in individual computer configurations by using the Exchange admin center or the Exchange Management Shell. When you enable the Sender Filter agent on a computer running Exchange, it filters all messages from all Receive connectors on that computer. Only messages from external sources are filtered. External sources are defined as non-authenticated sources. These are considered anonymous Internet sources.

Rationale:

Spam consumes a large amount of network bandwidth and server capacity. In addition, it is often the source of malicious software."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

	Set-SenderFilterConfig -Enabled $true"
          reference       : "800-53|SI-8a.,800-53r5|SI-8a.,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-8a.,LEVEL|1A,QCSC-v1|3.2,QCSC-v1|8.2.1"
          see_also        : "https://workbench.cisecurity.org/files/1512"
          value_type      : POLICY_TEXT
          value_data      : "Enabled[\s]+:[\s]+True"
          powershell_args : "Get-SenderFilterConfig | Format-List -property Enabled"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "1.7 Set 'Maximum number of recipients - organization level' to '5000'"
          info            : "You can use this setting to control the total number of message recipients. When a message is first composed, the recipients exist in the To:, Cc:, and Bcc: header fields. When the message is submitted for delivery, the message recipients are converted into RCPT TO: entries in the message envelope. A distribution group is counted as a single recipient during message submission.

Rationale:

This setting somewhat limits the impact that a malicious user or a computer with malware can have on the Exchange infrastructure by restricting the number of recipients for any single message."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

	 Set-TransportService -Identity 'Server01' -PickupDirectoryMaxRecipientsPerMessage 5000"
          reference       : "800-53|SC-5,800-53r5|SC-5,CSF|DE.CM-1,CSF|PR.DS-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5,ITSG-33|SC-5a.,LEVEL|1A,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1"
          see_also        : "https://workbench.cisecurity.org/files/1512"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-TransportService; $settings | Format-List Identity, PickupDirectoryMaxRecipientsPerMessage; If ($settings | Where {$_.PickupDirectoryMaxRecipientsPerMessage -gt 5000}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "1.13 Set 'Message tracking logging - Transport' to 'True'"
          info            : "A message tracking log provides a detailed log of all message activity as messages are transferred to and from a computer running Exchange. Message tracking is available on Hub Transport servers, Edge Transport servers, and Mailbox servers. By default, message tracking is enabled.

Rationale:

If events are not recorded it may be difficult or impossible to determine the root cause of system problems or the unauthorized activities of malicious users."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

	Set-TransportService EXCHANGE1 -MessageTrackingLogEnabled $true"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|1A,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/files/1512"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-TransportService ; $settings | Format-List Identity, MessageTrackingLogEnabled; If ($settings | Where {$_.MessageTrackingLogEnabled -ne $true}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "1.17 Set 'Maximum send size - organization level' to '10240'"
          info            : "This limit includes the message header, the message body, and any attachments. For internal message flow, Exchange Server uses the custom X-MS-Exchange-Organization-OriginalSize message header to record the original message size of the message as it enters the Exchange Server organization. Whenever the message is checked against the specified message size limits, the lower value of the current message size or the original message size header is used. The size of the message can change because of content conversion, encoding, and agent processing.

Rationale:

This setting somewhat limits the impact that a malicious user or a computer with malware can have on the Exchange infrastructure by restricting the size of outgoing messages."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

	Set-TransportConfig -MaxSendSize 10240KB"
          reference       : "800-53|SC-5(1),800-53r5|SC-5(1),CSF|DE.CM-1,CSF|PR.DS-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5(1),LEVEL|1A,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1"
          see_also        : "https://workbench.cisecurity.org/files/1512"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "Get-TransportConfig | Format-List MaxSendSize; if ([int]((Get-TransportConfig).MaxSendSize -Replace '.*\(' -Replace ' .*' )/1KB -gt 10240) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "1.18 Set 'Maximum receive size - connector level' to '10240'"
          info            : "You can use this setting to limit the total size of messages at the connector level. This includes the message header, the message body, and any attachments. For internal message flow, Exchange Server uses the custom X-MS-Exchange-Organization-OriginalSize message header to record the original message size of the message as it enters the Exchange Server organization. Whenever the message is checked against the specified message size limits, the lower value of the current message size or the original message size header is used. The size of the message can change because of content conversion, encoding, and agent processing.

Rationale:

This setting somewhat limits the impact a malicious user or a computer with malware can have on the Exchange infrastructure by restricting the size of incoming messages."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

	Set-ReceiveConnector 'Connection from Contoso.com' -MaxMessageSize 10240KB"
          reference       : "800-53|SC-5,800-53r5|SC-5,CSF|DE.CM-1,CSF|PR.DS-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5,ITSG-33|SC-5a.,LEVEL|1A,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1"
          see_also        : "https://workbench.cisecurity.org/files/1512"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$pass = $true; Get-ReceiveConnector | Format-List Identity, MaxMessageSize; foreach ($item in (Get-ReceiveConnector).MaxMessageSize -Replace '.*\(' -Replace ' .*' ) { if (([int]$item)/1KB -gt 10240) { $pass = $false } }; If ($pass) { 'All policies compliant' } Else { 'Non compliant policies found' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "3.3 Set 'Turn on script execution' to 'RemoteSigned'"
          info            : "Use this setting to configure the script execution policy that controls what script types users can run.

Rationale:

Unsigned scripts are at greater risk of containing unauthorized code."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

	Set-ExecutionPolicy RemoteSigned"
          reference       : "800-171|3.4.8,800-53|CM-7(5)(b),800-53r5|CM-7(5)(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3"
          see_also        : "https://workbench.cisecurity.org/files/1512"
          value_type      : POLICY_TEXT
          value_data      : "RemoteSigned"
          powershell_args : "Get-ExecutionPolicy"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "3.5 Set 'Enable automatic replies to remote domains' to 'False'"
          info            : "You can use this setting to determine if the server automatically replies to remote domains.

Rationale:

Attackers can use automated messages to determine whether a user account is active, in the office, traveling, and so on. An attacker might use this information to conduct other types of attacks."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

	Set-RemoteDomain -Identity Contoso -AutoReplyEnabled $false"
          reference       : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
          see_also        : "https://workbench.cisecurity.org/files/1512"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-RemoteDomain ; $settings | Format-List Identity, AutoReplyEnabled; If ($settings | Where {$_.AutoReplyEnabled -ne $false}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "3.7 Set 'Enable non-delivery reports to remote domains' to 'False'"
          info            : "You can use this setting to determines if the server automatically sends delivery reports to remote domains.

Rationale:

Attackers can use automated messages to determine whether a user account is active, in the office, traveling, and so on. An attacker might use this information to conduct other types of attacks."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

	Set-RemoteDomain -Identity Contoso -NDREnabled $false"
          reference       : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
          see_also        : "https://workbench.cisecurity.org/files/1512"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-RemoteDomain ; $settings | Format-List Identity, NDREnabled; If ($settings | Where {$_.NDREnabled -ne $false}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "3.8 Set 'Enable OOF messages to remote domains' to 'None'"
          info            : "You can use this setting to determine if the server automatically forwards out-of-office messages to remote domains.

Rationale:

Attackers can use automated messages to determine whether a user is active, in the office, traveling, and so on. An attacker might use this information to conduct other types of attacks."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

	Set-RemoteDomain 'RemoteDomain' -AllowedOOFType None"
          reference       : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
          see_also        : "https://workbench.cisecurity.org/files/1512"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-RemoteDomain ; $settings | Format-List Identity, AllowedOOFType; If ($settings | Where {$_.AllowedOOFType -ne 'None'}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "3.9 Set 'Enable automatic forwards to remote domains' to 'False'"
          info            : "You can use this setting to determine if the server sends automatic forwards to remote domains.

Rationale:

Attackers can use automated messages to determine whether a user account is active, in the office, traveling, and so on. An attacker might use this information to conduct other types of attacks."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

	Set-RemoteDomain -Identity Contoso -AutoForwardEnabled $false"
          reference       : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
          see_also        : "https://workbench.cisecurity.org/files/1512"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-RemoteDomain ; $settings | Format-List Identity, AutoForwardEnabled; If ($settings | Where {$_.AutoForwardEnabled -ne $false}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>
      </then>
    </if>
  </then>

  <else>
    <report type:"FAILED">
      description : "Authentication Failure"
      info        : "Secure string passed to powershell was invalid or empty."
    </report>
  </else>
</if>

</group_policy>
</check_type>

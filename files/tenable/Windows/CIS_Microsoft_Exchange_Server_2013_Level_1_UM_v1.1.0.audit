#TRUSTED 09e8c2e9c360170111081b53db5bdee4aef3019a1c20cd6a1e418a796e5e1f306372e0cc46e68075a7bf8a452ab8ab6c1ae9acaef2684d836ec4b590748a30f63f5b5748f607ed556013f49f4a87418202174a5ea884a5ba2a6cb23b057d07d6cb59a07c1ce064b4b813eed0eee10c489f118020bb6d0063a3ebf10f083996666050b63be81833119cc0c95f580a1fbe8aaea03e6ad077aa91cca3b40ec5273028063ca5b0fa5678f91fcdcc9254f4c76167007b14a30de8da0b4ffbf4a79bda7e1f3ac321e636a10cd471a0d089639e3c53775bf7109516732ac415d7b24d01a4ae66864f5d8a7b49933895528b50ab8fdd456e2914e0ceb9ce5ffba4c04dd155d7b5f1fc0a38d1b25cc4cdc211b6d98d36034d8846cd336311496f49f08a9b408033605b9dbd41b414fd53206f7fccd93e411d84c085c19ccf9adae53cf86d5ffa94e5cf47b3c13855f6096d1da56734e50cca6d465491d49582ef9ec2073bffaea4f23c94fa494e2fd1f4dc6dee29d1c37a77f2d6ed9a7fa77715c3e30ecfc2fea9d6cb1dfe0ee686e6f72075353895a4f9ec7ee8d2db5c6917db2f9bd58fbe9ccb7b999c2ea88d20c02928df2cf926490f8ad2abebaa3eaff70b9506bd2b6ff923b46a7316475456f96d6df176d348060892d3dbf0472a6f4e61845f7db672bba6010d9d8a61b1558643d5408f5a5851b2549a6a2b80c75cdeb5a6b43a1c
#TRUST-RSA-SHA256 02d78d71421e18ca5622440d7312a7d4abe6c42d59781060bedd9c2384bd70992eab798bece533c54522bf405396432c359db059e87fb3dcad419d436ed44cd34db8f5c296eef41e401d4c0192c4f1e194f4f43f4fe810814d479673ebeefb1b3f3671bbfdeac29a9a72b8d0bac5fe725caa5e12706bff70228b38436fd353b95e0f11fe46a91483e7f2760f92a46b82ac784f3bb47c833978e7802a133ad52b1224cc52646502516fd6bc487dc82d9db70218b0877b1405e4336b2d82a7959bf60156acdc367b3e102d44fe2662ed655f0beac0cd6781c9f1d5e90d3456a17abdcc2b9a403407381087086e771d28e10f9fdb233bae871e8d480aa1c4e25bd0c9246574fd8acf3915cb4d15d1808c5c75081ec2f5114cfb306d8bf3bf467065b8bd84d5500de9a876fa0e23dc67a26d814745e2551868c689230d386cc25bb1d4bcaaab8af7e5e7f47b1427968e506fa795c7fd05d308204964326651248438d7ed1727c3a808969991a58559c0a879856b8432b1471a90aa8ca371ff8da22be1e7ed30226a75559dca6edb77526a99659c48d34b5cc47b0f360d3ebf379f49fbeae43c006e8643e568bcd500967c695fd10acec4b32eadca1b932b8b8af7b2542c7d4ea7352bb767d975a3956edf5928a14828b4b2225bd3c91b1f1e8ea3bcb6ffdcc67e7b10c526b110afd65de422de9e188378588f2afc9b3bc69e89e19c
#
# This script is Copyright (C) 2004-2024 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.12 $
# $Date: 2024/06/17 $
#
# description : This document implements the security configuration as recommended by the
#               CIS Microsoft Exchange Server 2013 v1.1.0 Benchmark
#
#<ui_metadata>
#<display_name>CIS Microsoft Exchange Server 2013 UM v1.1.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>Microsoft Exchange Server 2013</name>
#  <profile>L1 UM</profile>
#  <version>1.1.0</version>
#  <link>https://workbench.cisecurity.org/files/1512</link>
#</spec>
#<labels>exchange_server_2013,update_20230227</labels>
#<benchmark_refs>CCE,CIS_Recommendation,CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#<variables>
#  <variable>
#    <name>SECURE_STRING</name>
#    <default>none</default>
#    <description>Secure String for Authentication</description>
#    <info>Comma separated secure string(s) which will be used to authenticate against the target servers.</info>
#    <value_type>SECURE_STRING</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Windows" version:"2">
<group_policy:"Microsoft Exchange Server 2013">

<if>
  <condition type:"AND">
    <custom_item>
      type            : AUDIT_EXCHANGE
      description     : "Test secure string"
      value_type      : POLICY_TEXT
      value_data      : ".*"
      powershell_args : "hostname"
      secure_string   : "@SECURE_STRING@"
      check_type      : CHECK_REGEX
    </custom_item>
  </condition>

  <then>
    <custom_item>
      type            : AUDIT_EXCHANGE
      description     : "CIS_Microsoft_Exchange_Server_2013_Level_1_UM_v1.1.0.audit from CIS Microsoft Exchange Server 2013 v1.1.0 Benchmark"
      info            : "NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      reference       : "800-171|3.14.1,800-53|SI-2c.,800-53r5|SI-2c.,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|SS14b,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.3,QCSC-v1|11.2,SWIFT-CSCv1|2.2"
      value_type      : POLICY_TEXT
      value_data      : "[\s]+15\.0[\s]+.*[\s]+True"
      powershell_args : "If (Get-ExchangeServer) { Get-ExchangeServer | Format-Table Name, AdminDisplayVersion, IsUnifiedMessagingServer } Else { 'No Exchange servers found' }"
      secure_string   : "@SECURE_STRING@"
      check_type      : CHECK_REGEX
      severity        : MEDIUM
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "Platform check"
          value_type      : POLICY_TEXT
          value_data      : "[\s]+15\.0[\s]+.*[\s]+True"
          powershell_args : "If (Get-ExchangeServer) { Get-ExchangeServer | Format-Table Name, AdminDisplayVersion, IsUnifiedMessagingServer } Else { 'No Exchange servers found' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.10 Set 'Configure startup mode' to 'TLS'"
          info            : "Use this setting to start the UM Server in secure mode. This forces all dial plans to use TLS.

Rationale:

Communications between other VOIP systems and Exchange that are not protected by TLS are vulnerable to being captured by a malicious third party."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

	Set-UMService -Identity Exchange1 -UMStartUpMode TLS"
          reference       : "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2"
          see_also        : "https://workbench.cisecurity.org/files/1512"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-UMService ; $settings | Format-List Identity, UMStartUpMode; If ($settings | Where {$_.UMStartUpMode -ne 'TLS'}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.12 Set 'Configure dial plan security' to 'Secured'"
          info            : "Use this setting to protect individual dial plans if the UM Server cannot be started in TLS Mode. To use this setting, the UM Server must be started in DUAL Mode.

Rationale:

If the UM role is not started in secure mode, each dial plan is individually vulnerable to traffic being captured by a malicious third party."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

	Set-UMDialPlan -identity MySecureDialPlan -VoIPSecurity Secured"
          reference       : "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2"
          see_also        : "https://workbench.cisecurity.org/files/1512"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-UMDialPlan ; $settings | Format-List Identity, VoIPSecurity; If ($settings | Where {$_.VoIPSecurity -ne 'Secured'}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.13 Set 'Allow access to voicemail without requiring a PIN' to 'False'"
          info            : "Use this setting to ensure PIN access to mailbox data via voice is required.

Rationale:

If PINLess access is enabled, the mailbox data is unsecured and vulnerable to capture when being accessed via the phone"
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

	Set-UMMailboxPolicy -id MyUMMailboxPolicy -AllowPinlessVoiceMailAccess $false"
          reference       : "800-171|3.5.1,800-53|IA-2,800-53r5|IA-2,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2,ITSG-33|IA-2a.,LEVEL|1A,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|35.1,TBA-FIISB|36.1"
          see_also        : "https://workbench.cisecurity.org/files/1512"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-UMMailboxPolicy ; $settings | Format-List Identity, AllowPinlessVoiceMailAccess; If ($settings | Where {$_.AllowPinlessVoiceMailAccess -ne $false}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "3.1 Set cmdlets 'Turn on Administrator Audit Logging' to 'True'"
          info            : "Administrator audit logging is used to provide a log of the settings that are changed by administrators anywhere in the system. By default this setting is turned on to ensure discovery of configuration related security breaches.

Rationale:

Administrators may be able to reconfigure the system to expose a vulnerability with no record of the changes made."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

	Set-AdminAuditLogConfig -AdminAuditLogCmdlets *"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|1A,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/files/1512"
          value_type      : POLICY_TEXT
          value_data      : "AdminAuditLogCmdlets[\s]+:[\s]+\{\*\}"
          powershell_args : "Get-AdminAuditLogConfig | Format-List -property AdminAuditLogCmdlets"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "3.11 Set mailbox 'Turn on Administrator Audit Logging' to 'True'"
          info            : "Administrator audit logging is used to provide a log of the settings that are changed by administrators anywhere in the system. By default this setting is turned on to ensure discovery of configuration related security breaches.

Rationale:

Administrators may be able to reconfigure the system to expose a vulnerability with no record of the changes made."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

	Set-AdminAuditLogConfig -AdminAuditLogEnabled $true"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|1A,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/files/1512"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-AdminAuditLogConfig ; $settings | Format-List Identity, AdminAuditLogEnabled; If ($settings | Where {$_.AdminAuditLogEnabled -ne $true}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>
      </then>
    </if>
  </then>

  <else>
    <report type:"FAILED">
      description : "Authentication Failure"
      info        : "Secure string passed to powershell was invalid or empty."
    </report>
  </else>
</if>

</group_policy>
</check_type>

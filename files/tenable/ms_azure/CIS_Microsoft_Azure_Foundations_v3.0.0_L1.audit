#TRUSTED 5365a6dabb4942e57465070d365e930fa4fa1dd1415d34bac470ba1b9c46d7a4632623d9f707f3ff96ae082242099dbafc17740a4d8b2f492204d4b5f31fa2babb6dfbdfdcf154d09630e51d6ae0f92ac4d7f261a75afdccb2c315ed4488fc31b0a0395c9c5b3e19fb137f7eac2d5e8432d602c391b679000804510f93b97223297b022a04e0a152791a808e2a1163403cb88dbb87d57531504efc8936b33029824c351d6ddcb38be3d621b0292574613c3019d4f3d784e6a9704b1646269612191a95b1567cfd430062a1faea81729b7d30b2fb4938487eba441aed3d2046c47f9b5ba877ee9fdc441fe47941888febabc45af87bf904fed2e65d57ac36e11a0708645889b526fb431ffaf7a1607d283aed8c643bc080414f91b7ca050be9b99eb1700abd6dc1d07e5c6ddea504320ddcbdf86643f108ffb61662683298462a8345442198629365eb5e2b2beb9aa6985e2fb2bd0a558528da4751d1f7e83497632da2af56142a151d89ae9afbe817b2a650a74e16ebb4bb95810c587c5d8fb522315fb1d2ae143581f93255879424d1bd393cd896c5648bd072286650a16d63ee3bc1a9f21f5cafe67b723f167485f57da851176568936fe188483d7ff32b6246d68bfc080c947b036ce2da4481bc3a07b33f9c7254d9171c88c335a11fe188c87c56c57edb041aba8be66cd893ca42eaa555ddb5f0d259dee56c6c62b1a5fd
#TRUST-RSA-SHA256 ac4a0be9d4d67565ae32b5363c4a31a7771d136686c0f151875647c75bd0872e99a7d15a8041f3d809546046669ecf0c3f50b1f579057c894302643ec29926b72bdb532c8086ab4db3849a23c446e8f179d82c39c65bbad9ca67b91cae9adbd622f073865ab2fe1437952506539604eed6b4393678c1a0257b401cd5c08be74608a0fa44443e2db71e2d64b7f262db736ed45baad6783787df489fae750d323052ea321c8c2f358c3696cfffab128d28f9e13582ac8614a7d781edb42bfb52df916e641cc0341b2bb91bbba9f40e1349b54c6809e073f8b7d38e8fad2025e376be56fc1682fb652aa33e9314ea35b83a21d71e87f66f8ac7a5912132e4df346fce10f3f6c9bd544f74d7dbe18bec0108e7778fa819a6f0c72344049aa33da58f11d19a526ea5d840e524b15e697c21290e5691cffe837990c0c06bc2e6adf0ed17661adf3bda92cc395aec5e6a93da507d1b6ace09e9a7f8dd5a9d98fa51afc3d5419860b265ac2604055751098b606eff6913000f67542e9cfb840078562e9b5704b58abceb90bf2fa13dfb1600a65be8d37cf39c92bb610753a5a12add735dc16583135edaef617f85ae10cb27679e82300418ae770fdfa249d5164e0fd4e0881b24e513e437c31126b6086e27e969d3235666151fe659880fce4b95b29e5146b0d2d88e7c341e8bba76352239634bd26fe44af584fc6b4381d4bc1935d7dd
#
# This script is Copyright (C) 2004-2024 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
#
# $Revision: 1.0 $
# $Date: 2024/11/06 $
#
# description	: CIS Microsoft Azure Foundations v3.0.0 audit
#
#<ui_metadata>
#<display_name>CIS Microsoft Azure Foundations v3.0.0 L1</display_name>
#<spec>
#  <type>CIS</type>
#  <name>Microsoft Azure Foundations</name>
#  <profile>L1</profile>
#  <version>3.0.0</version>
#  <link>https://workbench.cisecurity.org/benchmarks/16820</link>
#</spec>
#<labels>microsoft,azure,cloud</labels>
#<benchmark_refs>CCE,CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#</ui_metadata>

<check_type:"microsoft_azure">

<report type:"WARNING">
  description : "2.1.1 Ensure Security Defaults is enabled on Microsoft Entra ID"
  info        : "[IMPORTANT - Please read the section overview: If your organization pays for Microsoft Entra ID licensing (included in Microsoft 365 E3, E5, or F5, and EM&S E3 or E5 licenses) and CAN use Conditional Access, ignore the recommendations in this section and proceed to the Conditional Access section.]

Security defaults in Microsoft Entra ID make it easier to be secure and help protect your organization. Security defaults contain preconfigured security settings for common attacks.

Security defaults is available to everyone. The goal is to ensure that all organizations have a basic level of security enabled at no extra cost. You may turn on security defaults in the Azure portal.

Rationale:

Security defaults provide secure default settings that we manage on behalf of organizations to keep customers safe until they are ready to manage their own identity security settings.

For example, doing the following:

Requiring all users and admins to register for MFA.

Challenging users with MFA - when necessary, based on factors such as location, device, role, and task.

Disabling authentication from legacy authentication clients, which can't do MFA.

Impact:

This recommendation should be implemented initially and then may be overridden by other service/product specific CIS Benchmarks. Administrators should also be aware that certain configurations in Microsoft Entra ID may impact other Microsoft services such as Microsoft 365.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Remediate from Azure Portal
To enable security defaults in your directory:

From Azure Home select the Portal Menu.

Browse to Microsoft Entra ID > Properties.

Select Manage security defaults.

Under Security defaults, select Enabled (recommended).

Select Save.

Default Value:

If your tenant was created on or after October 22, 2019, security defaults may already be enabled in your tenant."
  reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|ID.RA-09,CSF2.0|PR.DS-10,CSF2.0|PR.IR-03,CSF2.0|PR.PS-01,CSF2.0|PR.PS-06,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1M,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<report type:"WARNING">
  description : "2.1.2 Ensure that 'Multi-Factor Auth Status' is 'Enabled' for all Privileged Users"
  info        : "[IMPORTANT - Please read the section overview: If your organization pays for Microsoft Entra ID licensing (included in Microsoft 365 E3, E5, or F5, and EM&S E3 or E5 licenses) and CAN use Conditional Access, ignore the recommendations in this section and proceed to the Conditional Access section.]

Enable multi-factor authentication for all roles, groups, and users that have write access or permissions to Azure resources. These include custom created objects or built-in roles such as;

Service Co-Administrators

Subscription Owners

Contributors

Rationale:

Multi-factor authentication requires an individual to present a minimum of two separate forms of authentication before access is granted. Multi-factor authentication provides additional assurance that the individual attempting to gain access is who they claim to be. With multi-factor authentication, an attacker would need to compromise at least two different authentication mechanisms, increasing the difficulty of compromise and thus reducing the risk.

Impact:

Users would require two forms of authentication before any access is granted. Additional administrative time will be required for managing dual forms of authentication when enabling multi-factor authentication.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Remediate from Azure Portal

From Azure Home select the Portal Menu

Select Microsoft Entra ID blade

Under Manage, click Roles and administrators

Take note of all users with the role Service Co-Administrators, Owners or Contributors

Return to the Overview

Under Manage, click Users

Click on the Per-User MFA button in the top row menu

Check the box next to each noted user

Click Enable MFA

Click Enable

Other Options within Azure Portal
Follow Microsoft Azure documentation and enable multi-factor authentication in your environment.
https://docs.microsoft.com/en-us/azure/active-directory/authentication/tutorial-enable-azure-mfa
Enabling and configuring MFA with conditional access policy is a multi-step process. Here are some additional resources on the process within Entra ID to enable multi-factor authentication for users within your subscriptions with conditional access policy.
https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/howto-conditional-access-policy-admin-mfa
https://docs.microsoft.com/en-us/azure/active-directory/authentication/howto-mfa-getstarted#enable-multi-factor-authentication-with-conditional-access
https://docs.microsoft.com/en-us/azure/active-directory/authentication/howto-mfa-mfasettings

Default Value:

By default, multi-factor authentication is disabled for all users."
  reference   : "800-171|3.5.3,800-53|IA-2(1),800-53|IA-2(2),800-53r5|AC-19,800-53r5|IA-2(1),800-53r5|IA-2(2),CN-L3|7.1.2.7(b),CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSCv7|4.5,CSCv7|16.3,CSCv8|6.3,CSCv8|6.4,CSCv8|6.5,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2(1),ITSG-33|IA-2(2),LEVEL|1M,NESA|T5.4.2,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,NIAv2|AM36,NIAv2|VL3c,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|1.2,TBA-FIISB|35.1,TBA-FIISB|36.1"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<report type:"WARNING">
  description : "2.1.4 Ensure that 'Allow users to remember multi-factor authentication on devices they trust' is Disabled"
  info        : "[IMPORTANT - Please read the section overview: If your organization pays for Microsoft Entra ID licensing (included in Microsoft 365 E3, E5, or F5, and EM&S E3 or E5 licenses) and CAN use Conditional Access, ignore the recommendations in this section and proceed to the Conditional Access section.]

Do not allow users to remember multi-factor authentication on devices.

Rationale:

Remembering Multi-Factor Authentication (MFA) for devices and browsers allows users to have the option to bypass MFA for a set number of days after performing a successful sign-in using MFA. This can enhance usability by minimizing the number of times a user may need to perform two-step verification on the same device. However, if an account or device is compromised, remembering MFA for trusted devices may affect security. Hence, it is recommended that users not be allowed to bypass MFA.

Impact:

For every login attempt, the user will be required to perform multi-factor authentication.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Remediate from Azure Portal

From Azure Home select the Portal Menu

Select Microsoft Entra ID

Under Manage, click Users

Click the Per-user MFA button on the top bar

Click on Service settings

Uncheck the box next to Allow users to remember multi-factor authentication on devices they trust

Click Save

Default Value:

By default, Allow users to remember multi-factor authentication on devices they trust is disabled."
  reference   : "800-171|3.5.3,800-53|IA-2(1),800-53|IA-2(2),800-53r5|AC-19,800-53r5|IA-2(1),800-53r5|IA-2(2),CN-L3|7.1.2.7(b),CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSCv7|16.3,CSCv8|6.3,CSCv8|6.4,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2(1),ITSG-33|IA-2(2),LEVEL|1M,NESA|T5.4.2,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,NIAv2|AM36,NIAv2|VL3c,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|1.2,TBA-FIISB|35.1,TBA-FIISB|36.1"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<report type:"WARNING">
  description : "2.3 Ensure that 'Restrict non-admin users from creating tenants' is set to 'Yes'"
  info        : "Require administrators or appropriately delegated users to create new tenants.

Rationale:

It is recommended to only allow an administrator to create new tenants. This prevent users from creating new Microsoft Entra ID or Azure AD B2C tenants and ensures that only authorized users are able to do so.

Impact:

Enforcing this setting will ensure that only authorized users are able to create new tenants.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Remediate from Azure Portal

From Azure Home select the Portal Menu

Select Microsoft Entra ID

Under Manage, select Users

Under Manage, select User settings

Set Restrict non-admin users from creating tenants to Yes

Click Save

Remediate from PowerShell

Import-Module Microsoft.Graph.Identity.SignIns

Connect-MgGraph -Scopes 'Policy.ReadWrite.Authorization'

Select-MgProfile -Name beta

$params = @{
DefaultUserRolePermissions = @{
AllowedToCreateTenants = $false
}
}

Update-MgPolicyAuthorizationPolicy -AuthorizationPolicyId  -BodyParameter $params"
  reference   : "800-171|3.1.1,800-171|3.1.5,800-171|3.3.8,800-171|3.3.9,800-53|AC-2,800-53|AC-3,800-53|AC-6,800-53|AC-6(1),800-53|AC-6(7),800-53|AU-9(4),800-53r5|AC-2,800-53r5|AC-5,800-53r5|AC-6,800-53r5|AC-6(1),800-53r5|AC-6(7),800-53r5|AU-9(4),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(d),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|6.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.5,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.4,ISO/IEC-27001|A.9.4.5,ISO/IEC-27001|A.12.4.2,ITSG-33|AC-2,ITSG-33|AC-3,ITSG-33|AC-6,ITSG-33|AC-6(1),ITSG-33|AU-9(4),ITSG-33|AU-9(4)(a),ITSG-33|AU-9(4)(b),LEVEL|1A,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|AM31,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|NS5j,NIAv2|SM5,NIAv2|SM6,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,NIAv2|VL3b,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.3.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<custom_item>
  description    : "2.4 Ensure Guest Users Are Reviewed on a Regular Basis"
  info           : "Microsoft Entra ID has native and extended identity functionality allowing you to invite people from outside your organization to be guest users in your cloud account and sign in with their own work, school, or social identities.

Rationale:

Guest users are typically added outside your employee on-boarding/off-boarding process and could potentially be overlooked indefinitely. To prevent this, guest users should be reviewed on a regular basis. During this audit, guest users should also be determined to not have administrative privileges.

Impact:

Before removing guest users, determine their use and scope. Like removing any user, there may be unforeseen consequences to systems if an account is removed without careful consideration.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution       : "Remediate from Azure Portal

From Azure Home select the Portal Menu

Select Microsoft Entra ID

Under Manage, select Users

Click on Add filter

Select User type

Select Guest from the Value dropdown

Click Apply

Check the box next to all Guest users that are no longer required or are inactive

Click Delete

Click OK

Remediate from Azure CLI
Before deleting the user, set it to inactive using the ID from the Audit Procedure to determine if there are any dependent systems.

az ad user update --id <exampleaccountid@domain.com> --account-enabled {false}

After determining that there are no dependent systems delete the user.

Remove-AzureADUser -ObjectId <exampleaccountid@domain.com>

Remediate from Azure PowerShell
Before deleting the user, set it to inactive using the ID from the Audit Procedure to determine if there are any dependent systems.

Set-AzureADUser -ObjectId '<exampleaccountid@domain.com>' -AccountEnabled false

After determining that there are no dependent systems delete the user.

PS C:\>Remove-AzureADUser -ObjectId exampleaccountid@domain.com

Default Value:

By default no guest users are created."
  reference      : "800-171|3.1.1,800-53|AC-2,800-53|AC-2(3),800-53r5|AC-2,800-53r5|AC-2(3),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(e),CN-L3|8.1.4.2(c),CSCv7|16.6,CSCv7|16.8,CSCv8|5.1,CSCv8|5.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.6,ITSG-33|AC-2,ITSG-33|AC-2(3),LEVEL|1M,NIAv2|AM26,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.2"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listGuestUsers"
  json_transform : '.[]| "DisplayName: \(.displayName), UserPrincipalName: \(.userPrincipalName), UserType: \(.userType)"'
  regex          : '.+'
  not_expect     : '.+'
  severity       : MEDIUM
</custom_item>

<report type:"WARNING">
  description : "2.5 Ensure That 'Number of methods required to reset' is set to '2'"
  info        : "Ensures that two alternate forms of identification are provided before allowing a password reset.

Rationale:

A Self-service Password Reset (SSPR) through Azure Multi-factor Authentication (MFA) ensures the user's identity is confirmed using two separate methods of identification. With multiple methods set, an attacker would have to compromise both methods before they could maliciously reset a user's password.

Impact:

There may be administrative overhead, as users who lose access to their secondary authentication methods will need an administrator with permissions to remove it. There will also need to be organization-wide security policies and training to teach administrators to verify the identity of the requesting user so that social engineering cannot render this setting useless.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Remediate from Azure Portal

From Azure Home select the Portal Menu

Select Microsoft Entra ID

Under Manage, select Users

Under Manage, select Password reset

Select Authentication methods

Set the Number of methods required to reset to 2

Click Save

Default Value:

By default, the Number of methods required to reset is set to '2'."
  reference   : "800-171|3.5.3,800-53|IA-2(1),800-53|IA-2(2),800-53r5|AC-19,800-53r5|IA-2(1),800-53r5|IA-2(2),CN-L3|7.1.2.7(b),CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSCv7|16.3,CSCv8|6.3,CSCv8|6.4,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2(1),ITSG-33|IA-2(2),LEVEL|1M,NESA|T5.4.2,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,NIAv2|AM36,NIAv2|VL3c,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|1.2,TBA-FIISB|35.1,TBA-FIISB|36.1"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<report type:"WARNING">
  description : "2.6 Ensure that account 'Lockout Threshold' is less than or equal to '10'"
  info        : "The account lockout threshold determines how many failed login attempts are permitted prior to placing the account in a locked-out state and initiating a variable lockout duration.

Rationale:

Account lockout is a method of protecting against brute-force and password spray attacks. Once the lockout threshold has been exceeded, the account enters a locked-out state which prevents all login attempts for a variable duration. The lockout in combination with a reasonable duration reduces the total number of failed login attempts that a malicious actor can execute in a given period of time.

Impact:

If account lockout threshold is set too low (less than 3), users may experience frequent lockout events and the resulting security alerts may contribute to alert fatigue.

If account lockout threshold is set too high (more than 10), malicious actors can programmatically execute more password attempts in a given period of time.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Remediate from Azure Portal

From Azure Home select the Portal Menu.

Select Microsoft Entra ID.

Under Manage, select Security.

Under Manage, select Authentication methods.

Under Manage, select Password protection.

Set the Lockout threshold to 10 or fewer.

Click Save.

Default Value:

By default, Lockout threshold is set to 10."
  reference   : "800-171|3.1.8,800-171|3.1.18,800-53|AC-7,800-53|AC-19,800-53r5|AC-7,800-53r5|AC-19,CN-L3|8.1.4.1(b),CSCv8|4.10,CSF|PR.AC-3,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.6.2.1,ITSG-33|AC-7,ITSG-33|AC-19,LEVEL|1M,NIAv2|AM24,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|36.2.4,TBA-FIISB|45.1.2"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<report type:"WARNING">
  description : "2.7 Ensure that account 'Lockout duration in seconds' is greater than or equal to '60'"
  info        : "The account lockout duration value determines how long an account retains the status of lockout, and therefore how long before a user can continue to attempt to login after passing the lockout threshold.

Rationale:

Account lockout is a method of protecting against brute-force and password spray attacks. Once the lockout threshold has been exceeded, the account enters a locked-out state which prevents all login attempts for a variable duration. The lockout in combination with a reasonable duration reduces the total number of failed login attempts that a malicious actor can execute in a given period of time.

Impact:

If account lockout duration is set too low (less than 60 seconds), malicious actors can perform more password spray and brute-force attempts over a given period of time.

If the account lockout duration is set too high (more than 300 seconds) users may experience inconvenient delays during lockout.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Remediate from Azure Portal

From Azure Home select the Portal Menu.

Select Microsoft Entra ID.

Under Manage, select Security.

Under Manage, select Authentication methods.

Under Manage, select Password protection.

Set the Lockout duration in seconds to 60 or higher.

Click Save.

Default Value:

By default, Lockout duration in seconds is set to 60."
  reference   : "800-171|3.1.8,800-171|3.1.18,800-53|AC-7,800-53|AC-19,800-53r5|AC-7,800-53r5|AC-19,CN-L3|8.1.4.1(b),CSCv8|4.10,CSF|PR.AC-3,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.6.2.1,ITSG-33|AC-7,ITSG-33|AC-19,LEVEL|1M,NIAv2|AM24,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|36.2.4,TBA-FIISB|45.1.2"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<report type:"WARNING">
  description : "2.8 Ensure that a Custom Bad Password List is set to 'Enforce' for your Organization"
  info        : "Microsoft Azure provides a Global Banned Password policy that applies to Azure administrative and normal user accounts. This is not applied to user accounts that are synced from an on-premise Active Directory unless Microsoft Entra ID Connect is used and you enable EnforceCloudPasswordPolicyForPasswordSyncedUsers. Please see the list in default values on the specifics of this policy. To further password security, it is recommended to further define a custom banned password policy.

Rationale:

Enabling this gives your organization further customization on what secure passwords are allowed. Setting a bad password list enables your organization to fine-tune its password policy further, depending on your needs. Removing easy-to-guess passwords increases the security of access to your Azure resources.

Impact:

Increasing needed password complexity might increase overhead on administration of user accounts. Licensing requirement for Global Banned Password List and Custom Banned Password list requires Microsoft Entra ID P1 or P2. On-premises Active Directory Domain Services users that are not synchronized to Microsoft Entra ID also benefit from Microsoft Entra ID Password Protection based on existing licensing for synchronized users.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Remediate from Azure Portal

From Azure Home select the Portal Menu

Select Microsoft Entra ID

Under Manage, select Security.

Under Manage, select Authentication methods.

Under Manage, select Password protection.

Set the Enforce custom list option to Yes.

Click in the Custom banned password list text box to add a string.

Click Save.

Default Value:

By default the custom bad password list is not 'Enabled'. Organizational-specific terms can be added to the custom banned password list, such as the following examples:

Brand names

Product names

Locations, such as company headquarters

Company-specific internal terms

Abbreviations that have specific company meaning

Months and weekdays with your company's local languages

The default Azure bad password policy is already applied to your resources which applies the following basic requirements:

Characters allowed:

Uppercase characters (A - Z)

Lowercase characters (a - z)

Numbers (0 - 9)

Symbols:

@ # $ % ^ & * - _ ! + = [ ] { } | \ : ' , . ? / ' ~ ' ( ) ; < >

blank space

Characters not allowed:

Unicode characters

Password length Passwords require

A minimum of eight characters

A maximum of 256 characters

Password complexity: Passwords require three out of four of the following categories:

Uppercase characters

Lowercase characters

Numbers

Symbols Note: Password complexity check isn't required for Education tenants.

Password not recently used:

When a user changes or resets their password, the new password can't be the same as the current or recently used passwords.

Password isn't banned by Entra ID Password Protection.

The password can't be on the global list of banned passwords for Azure AD Password Protection, or on the customizable list of banned passwords specific to your organization."
  reference   : "800-171|3.1.1,800-171|3.5.2,800-53|AC-2(1),800-53|AC-3,800-53|IA-5(1),800-53r5|AC-2(1),800-53r5|AC-3,800-53r5|IA-5(1),CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|4.4,CSCv8|5.2,CSCv8|6.7,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-2(1),ITSG-33|AC-3,ITSG-33|IA-5(1),LEVEL|1M,NESA|T4.2.1,NESA|T5.2.3,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|4.1,TBA-FIISB|31.1"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<report type:"WARNING">
  description : "2.9 Ensure that 'Number of days before users are asked to re-confirm their authentication information' is not set to '0'"
  info        : "Ensure that the number of days before users are asked to re-confirm their authentication information is not set to 0.

Rationale:

This setting is necessary if you have setup 'Require users to register when signing in option'. If authentication re-confirmation is disabled, registered users will never be prompted to re-confirm their existing authentication information. If the authentication information for a user changes, such as a phone number or email, then the password reset information for that user reverts to the previously registered authentication information.

Impact:

Users will be prompted for their multifactor authentication at the duration set here.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Remediate from Azure Portal

From Azure Home select the Portal Menu

Select Microsoft Entra ID

Under Manage, select Users

Under Manage, select Password reset

Under Manage, select Registration'

Set the Number of days before users are asked to re-confirm their authentication information to your organization-defined frequency

Click Save

Default Value:

By default, the Number of days before users are asked to re-confirm their authentication information is set to '180 days'."
  reference   : "800-171|3.1.1,800-53|AC-1,800-53|AC-2,800-53|AC-2(1),800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.6(c),CSCv7|16.10,CSCv8|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|GV.OC-03,CSF2.0|GV.OV-01,CSF2.0|GV.PO-01,CSF2.0|GV.PO-02,CSF2.0|GV.SC-03,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|AC-2(1),LEVEL|1M,NESA|M1.2.2,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<report type:"WARNING">
  description : "2.10 Ensure that 'Notify users on password resets?' is set to 'Yes'"
  info        : "Ensure that users are notified on their primary and alternate emails on password resets.

Rationale:

User notification on password reset is a proactive way of confirming password reset activity. It helps the user to recognize unauthorized password reset activities.

Impact:

Users will receive emails alerting them to password changes to both their primary and alternate emails.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Remediate from Azure Portal

From Azure Home select the Portal Menu

Select Microsoft Entra ID

Under Manage, select Users

Under Manage, select Password reset

Under Manage, select Notifications

Set Notify users on password resets? to Yes

Click Save

Default Value:

By default, Notify users on password resets? is set to 'Yes'."
  reference   : "800-171|3.1.1,800-53|AC-2(1),800-53|AC-3,800-53r5|AC-2(1),800-53r5|AC-3,CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|16.2,CSCv8|6.7,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-2(1),ITSG-33|AC-3,LEVEL|1M,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|31.1"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<report type:"WARNING">
  description : "2.11 Ensure That 'Notify all admins when other admins reset their password?' is set to 'Yes'"
  info        : "Ensure that all Global Administrators are notified if any other administrator resets their password.

Rationale:

Administrator accounts are sensitive. Any password reset activity notification, when sent to all Administrators, ensures that all Global Administrators can passively confirm if such a reset is a common pattern within their group. For example, if all Administrators change their password every 30 days, any password reset activity before that may require administrator(s) to evaluate any unusual activity and confirm its origin.

Impact:

All Global Administrators will receive a notification from Azure every time a password is reset. This is useful for auditing procedures to confirm that there are no out of the ordinary password resets for Administrators. There is additional overhead, however, in the time required for Global Administrators to audit the notifications. This setting is only useful if all Global Administrators pay attention to the notifications and audit each one.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Remediate from Azure Portal

From Azure Home select the Portal Menu

Select Microsoft Entra ID

Under Manage, select Users

Under Manage, select Password reset

Under Manage, select Notifications

Set Notify all admins when other admins reset their password? to Yes

Click Save

Default Value:

By default, Notify all admins when other admins reset their password? is set to 'No'."
  reference   : "800-171|3.1.1,800-171|3.1.5,800-171|3.1.6,800-53|AC-2(1),800-53|AC-3,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-2(1),800-53r5|AC-3,800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|4.8,CSCv8|5.4,CSCv8|6.7,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.3,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-2(1),ITSG-33|AC-3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|AM32,NIAv2|AM33,NIAv2|NS5j,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<report type:"WARNING">
  description : "2.12 Ensure 'User consent for applications' is set to 'Do not allow user consent'"
  info        : "Require administrators to provide consent for applications before use.

Rationale:

If Microsoft Entra ID is running as an identity provider for third-party applications, permissions and consent should be limited to administrators or pre-approved. Malicious applications may attempt to exfiltrate data or abuse privileged user accounts.

Impact:

Enforcing this setting may create additional requests that administrators need to review.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Remediate from Azure Portal

From Azure Home select the Portal Menu

Select Microsoft Entra ID

Under Manage, select Enterprise applications

Under Security, select Consent and permissions

Under Manage, select User consent settings

Set User consent for applications to Do not allow user consent

Click Save

Default Value:

By default, Users consent for applications is set to Allow user consent for apps."
  reference   : "800-171|3.1.1,800-171|3.4.1,800-171|3.4.7,800-171|3.4.9,800-171|3.5.2,800-171|3.5.5,800-171|3.5.6,800-53|AC-1,800-53|AC-2,800-53|CM-7(2),800-53|CM-8(3),800-53|CM-10,800-53|CM-11,800-53|IA-4,800-53|IA-5,800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),800-53r5|CM-7(2),800-53r5|CM-8(3),800-53r5|CM-10,800-53r5|CM-11,800-53r5|IA-4,800-53r5|IA-5,CN-L3|7.1.2.7(b),CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.2(a),CN-L3|8.1.10.2(b),CN-L3|8.1.10.6(c),CSCv7|2.6,CSCv8|2.3,CSCv8|6.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|GV.OC-03,CSF2.0|GV.OV-01,CSF2.0|GV.PO-01,CSF2.0|GV.PO-02,CSF2.0|GV.SC-03,CSF2.0|ID.AM-01,CSF2.0|ID.AM-02,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.PS-01,CSF2.0|PR.PS-02,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.12.6.2,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|CM-7(2),ITSG-33|CM-8(3),ITSG-33|IA-4,ITSG-33|IA-5,LEVEL|1M,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T5.2.3,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|NS5j,NIAv2|SS14e,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|2.3,SWIFT-CSCv1|5,SWIFT-CSCv1|5.1"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<report type:"WARNING">
  description : "2.14 Ensure That 'Users Can Register Applications' Is Set to 'No'"
  info        : "Require administrators or appropriately delegated users to register third-party applications.

Rationale:

It is recommended to only allow an administrator to register custom-developed applications. This ensures that the application undergoes a formal security review and approval process prior to exposing Microsoft Entra ID data. Certain users like developers or other high-request users may also be delegated permissions to prevent them from waiting on an administrative user. Your organization should review your policies and decide your needs.

Impact:

Enforcing this setting will create additional requests for approval that will need to be addressed by an administrator. If permissions are delegated, a user may approve a malevolent third party application, potentially giving it access to your data.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Remediate from Azure Portal

From Azure Home select the Portal Menu

Select Microsoft Entra ID

Under Manage, select Users

Under Manage, select User settings

Set Users can register applications to No

Click Save

Remediate from PowerShell

$param = @{ AllowedToCreateApps = '$false' }
Update-MgPolicyAuthorizationPolicy -DefaultUserRolePermissions $param

Default Value:

By default, Users can register applications is set to 'Yes'."
  reference   : "800-171|3.1.1,800-171|3.4.1,800-171|3.4.7,800-171|3.4.9,800-53|AC-2(1),800-53|AC-3,800-53|CM-7(2),800-53|CM-8(3),800-53|CM-10,800-53|CM-11,800-53r5|AC-2(1),800-53r5|AC-3,800-53r5|CM-7(2),800-53r5|CM-8(3),800-53r5|CM-10,800-53r5|CM-11,CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(a),CN-L3|8.1.10.2(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|2.6,CSCv8|2.3,CSCv8|2.4,CSCv8|6.7,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|ID.AM-01,CSF2.0|ID.AM-02,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,CSF2.0|PR.PS-01,CSF2.0|PR.PS-02,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ISO/IEC-27001|A.12.6.2,ITSG-33|AC-2(1),ITSG-33|AC-3,ITSG-33|CM-7(2),ITSG-33|CM-8(3),LEVEL|1A,NESA|T1.2.1,NESA|T1.2.2,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,NIAv2|SS15a,NIAv2|SS29,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|2.3,SWIFT-CSCv1|5.1,TBA-FIISB|31.1"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<report type:"WARNING">
  description : "2.15 Ensure That 'Guest users access restrictions' is set to 'Guest user access is restricted to properties and memberships of their own directory objects'"
  info        : "Limit guest user permissions.

Rationale:

Limiting guest access ensures that guest accounts do not have permission for certain directory tasks, such as enumerating users, groups or other directory resources, and cannot be assigned to administrative roles in your directory. Guest access has three levels of restriction.

Guest users have the same access as members (most inclusive),

Guest users have limited access to properties and memberships of directory objects (default value),

Guest user access is restricted to properties and memberships of their own directory objects (most restrictive).

The recommended option is the 3rd, most restrictive: 'Guest user access is restricted to their own directory object'.

Impact:

This may create additional requests for permissions to access resources that administrators will need to approve.

According to https://learn.microsoft.com/en-us/azure/active-directory/enterprise-users/users-restrict-guest-permissions#services-currently-not-supported

Service without current support might have compatibility issues with the new guest restriction setting.

Forms

Project

Yammer

Planner in SharePoint

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Remediate from Azure Portal

From Azure Home select the Portal Menu

Select Microsoft Entra ID

Under Manage, select External Identities

Select External collaboration settings

Under Guest user access, set Guest user access restrictions to Guest user access is restricted to properties and memberships of their own directory objects

Click Save

Remediate from PowerShell

Enter the following to update the policy ID:

Update-MgPolicyAuthorizationPolicy -GuestUserRoleId '2af84b1e-32c8-42b7-82bc-daa82404023b'

Check the GuestUserRoleId again:

(Get-MgPolicyAuthorizationPolicy).GuestUserRoleId

Ensure that the GuestUserRoleId is equal to the earlier entered value of 2af84b1e-32c8-42b7-82bc-daa82404023b.

Default Value:

By default, Guest user access restrictions is set to Guest users have limited access to properties and memberships of directory objects."
  reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.3.8,800-171|3.3.9,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-2,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|AC-6(1),800-53|AC-6(7),800-53|AU-9(4),800-53|MP-2,800-53r5|AC-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|AC-6(1),800-53r5|AC-6(7),800-53r5|AU-9(4),800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(d),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSCv8|6.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-2,CSF|PR.PT-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.5,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.4,ISO/IEC-27001|A.9.4.5,ISO/IEC-27001|A.12.4.2,ITSG-33|AC-2,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|AC-6(1),ITSG-33|AU-9(4),ITSG-33|AU-9(4)(a),ITSG-33|AU-9(4)(b),ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|AM31,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|NS5j,NIAv2|SM5,NIAv2|SM6,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,NIAv2|VL3b,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.3.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<report type:"WARNING">
  description : "2.17 Ensure That 'Restrict access to Microsoft Entra admin center' is Set to 'Yes'"
  info        : "Restrict access to the Microsoft Entra ID administration center to administrators only.

NOTE: This only affects access to the Entra ID administrator's web portal. This setting does not prohibit privileged users from using other methods such as Rest API or Powershell to obtain sensitive information from Microsoft Entra ID.

Rationale:

The Microsoft Entra ID administrative center has sensitive data and permission settings. All non-administrators should be prohibited from accessing any Microsoft Entra ID data in the administration center to avoid exposure.

Impact:

All administrative tasks will need to be done by Administrators, causing additional overhead in management of users and resources.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Remediate from Azure Portal

From Azure Home select the Portal Menu

Select Microsoft Entra ID

Under Manage, select Users

Under Manage, select User settings

Under Administration centre, set Restrict access to Microsoft Entra admin center to Yes

Click Save

Default Value:

By default, Restrict access to Microsoft Entra admin center is set to No"
  reference   : "800-171|3.1.1,800-171|3.1.5,800-171|3.1.6,800-171|3.3.8,800-171|3.3.9,800-53|AC-2,800-53|AC-3,800-53|AC-6,800-53|AC-6(1),800-53|AC-6(2),800-53|AC-6(5),800-53|AC-6(7),800-53|AU-9(4),800-53r5|AC-2,800-53r5|AC-5,800-53r5|AC-6,800-53r5|AC-6(1),800-53r5|AC-6(2),800-53r5|AC-6(5),800-53r5|AC-6(7),800-53r5|AU-9(4),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(d),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|4.3,CSCv8|5.4,CSCv8|6.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.3,ISO/IEC-27001|A.9.2.5,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.4,ISO/IEC-27001|A.9.4.5,ISO/IEC-27001|A.12.4.2,ITSG-33|AC-2,ITSG-33|AC-3,ITSG-33|AC-6,ITSG-33|AC-6(1),ITSG-33|AC-6(2),ITSG-33|AC-6(5),ITSG-33|AU-9(4),ITSG-33|AU-9(4)(a),ITSG-33|AU-9(4)(b),LEVEL|1M,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|AM31,NIAv2|AM32,NIAv2|AM33,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|NS5j,NIAv2|SM5,NIAv2|SM6,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,NIAv2|VL3a,NIAv2|VL3b,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.3.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<report type:"WARNING">
  description : "2.22 Ensure that 'Require Multifactor Authentication to register or join devices with Microsoft Entra' is set to 'Yes'"
  info        : "NOTE: This recommendation is only relevant if your subscription is using Per-User MFA. If your organization is licensed to use Conditional Access, the preferred method of requiring MFA to join devices to Entra ID is to use a Conditional Access policy (see additional information below for link).

Joining or registering devices to Microsoft Entra ID should require multi-factor authentication.

Rationale:

Multi-factor authentication is recommended when adding devices to Microsoft Entra ID. When set to Yes, users who are adding devices from the internet must first use the second method of authentication before their device is successfully added to the directory. This ensures that rogue devices are not added to the domain using a compromised user account.

Impact:

A slight impact of additional overhead, as Administrators will now have to approve every access to the domain.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Remediate from Azure Portal

From Azure Home select the Portal Menu

Select Microsoft Entra ID

Under Manage, select Devices

Under Manage, select Device settings

Under Microsoft Entra join and registration settings, set Require Multifactor Authentication to register or join devices with Microsoft Entra to Yes

Click Save

Default Value:

By default, Require Multifactor Authentication to register or join devices with Microsoft Entra is set to No."
  reference   : "800-171|3.5.3,800-53|IA-2(1),800-53|IA-2(2),800-53r5|AC-19,800-53r5|IA-2(1),800-53r5|IA-2(2),CN-L3|7.1.2.7(b),CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSCv7|16.3,CSCv8|6.3,CSCv8|6.4,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2(1),ITSG-33|IA-2(2),LEVEL|1M,NESA|T5.4.2,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,NIAv2|AM36,NIAv2|VL3c,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|1.2,TBA-FIISB|35.1,TBA-FIISB|36.1"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<custom_item>
  description    : "2.23 Ensure That No Custom Subscription Administrator Roles Exist"
  info           : "The principle of least privilege should be followed and only necessary privileges should be assigned instead of allowing full administrative access.

Rationale:

Custom roles in Azure with administrative access can obfuscate the permissions granted and introduce complexity and blind spots to the management of privileged identities. For less mature security programs without regular identity audits, the creation of Custom roles should be avoided entirely. For more mature security programs with regular identity audits, Custom Roles should be audited for use and assignment, used minimally, and the principle of least privilege should be observed when granting permissions

Impact:

Subscriptions will need to be handled by Administrators with permissions."
  solution       : "Remediate from Azure Portal

From Azure Home select the Portal Menu.

Select Subscriptions.

Select a subscription.

Select Access control (IAM).

Select Roles.

Click Type and select Custom role from the drop-down menu.

Check the box next to each role which grants subscription administrator privileges.

Select Delete.

Select Yes.

Remediate from Azure CLI
List custom roles:

az role definition list --custom-role-only True

Check for entries with assignableScope of the subscription, and an action of *.
To remove a violating role:

az role definition delete --name <role name>

Note that any role assignments must be removed before a custom role can be deleted.
Ensure impact is assessed before deleting a custom role granting subscription administrator privileges.

Default Value:

By default, no custom owner roles are created."
  reference      : "800-171|3.1.1,800-171|3.1.5,800-171|3.1.6,800-171|3.3.8,800-171|3.3.9,800-53|AC-2,800-53|AC-3,800-53|AC-6,800-53|AC-6(1),800-53|AC-6(2),800-53|AC-6(5),800-53|AC-6(7),800-53|AU-9(4),800-53r5|AC-2,800-53r5|AC-5,800-53r5|AC-6,800-53r5|AC-6(1),800-53r5|AC-6(2),800-53r5|AC-6(5),800-53r5|AC-6(7),800-53r5|AU-9(4),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(d),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|4.1,CSCv8|5.4,CSCv8|6.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.3,ISO/IEC-27001|A.9.2.5,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.4,ISO/IEC-27001|A.9.4.5,ISO/IEC-27001|A.12.4.2,ITSG-33|AC-2,ITSG-33|AC-3,ITSG-33|AC-6,ITSG-33|AC-6(1),ITSG-33|AC-6(2),ITSG-33|AC-6(5),ITSG-33|AU-9(4),ITSG-33|AU-9(4)(a),ITSG-33|AU-9(4)(b),LEVEL|1A,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|AM31,NIAv2|AM32,NIAv2|AM33,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|NS5j,NIAv2|SM5,NIAv2|SM6,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,NIAv2|VL3a,NIAv2|VL3b,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.3.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listRoleDefinitions"
  json_transform : '.[] | .subscriptionId as $subid | [ .value[].properties | select(.type == "CustomRole") | (.permissions[].actions[] | select(. == "*")) as $action | { "name": .roleName, "action": $action, "scope": .assignableScopes[] } ] | if (.[] | length) == 0 then "Subscription ID: \($subid) - no custom roles with action = *" else (.[] | "Subscription ID: \($subid), Role Name: \(.name), Scope: \(.scope), Action: \(.action)") end'
  regex          : "Subscription ID:"
  not_expect     : "Scope: /(subscriptions/[0-9a-f-]+)?,"
</custom_item>

<report type:"WARNING">
  description : "2.26 Ensure fewer than 5 users have global administrator assignment"
  info        : "This recommendation aims to maintain a balance between security and operational efficiency by ensuring that a minimum of 2 and a maximum of 4 users are assigned the Global Administrator role in Microsoft Entra ID. Having at least two Global Administrators ensures redundancy, while limiting the number to four reduces the risk of excessive privileged access.

Rationale:

The Global Administrator role has extensive privileges across all services in Microsoft Entra ID. The Global Administrator role should never be used in regular daily activities; administrators should have a regular user account for daily activities, and a separate account for administrative responsibilities. Limiting the number of Global Administrators helps mitigate the risk of unauthorized access, reduces the potential impact of human error, and aligns with the principle of least privilege to reduce the attack surface of an Azure tenant. Conversely, having at least two Global Administrators ensures that administrative functions can be performed without interruption in case of unavailability of a single admin.

Impact:

Implementing this recommendation may require changes in administrative workflows or the redistribution of roles and responsibilities. Adequate training and awareness should be provided to all Global Administrators.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Remediate from Azure Portal

From Azure Home select the Portal Menu

Select Microsoft Entra ID

Under Manage, select Roles and administrators

Under Administrative Roles, select Global Administrator

If more than 4 users are assigned:

Remove Global Administrator role for users which do not or no longer require the role.

Assign Global Administrator role via PIM which can be activated when required.

Assign more granular roles to users to conduct their duties.

If only one user is assigned:

Provide the Global Administrator role to a trusted user or create a break glass admin account."
  reference   : "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv7|4.1,CSCv8|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1M,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<custom_item>
  description    : "3.1.1.1 Ensure that Auto provisioning of 'Log Analytics agent for Azure VMs' is Set to 'On'"
  info           : "Enable automatic provisioning of the monitoring agent to collect security data.

DEPRECATION PLANNED: The Log Analytics Agent is slated for deprecation in August 2024. The Microsoft Defender for Endpoint agent, in tandem with new agentless capabilities will be providing replacement functionality. More detail is available here: https://techcommunity.microsoft.com/t5/microsoft-defender-for-cloud/microsoft-defender-for-cloud-strategy-and-plan-towards-log/ba-p/3883341.

Rationale:

When Log Analytics agent for Azure VMs is turned on, Microsoft Defender for Cloud provisions the Microsoft Monitoring Agent on all existing supported Azure virtual machines and any new ones that are created. The Microsoft Monitoring Agent scans for various security-related configurations and events such as system updates, OS vulnerabilities, endpoint protection, and provides alerts."
  solution       : "Remediate from Azure Portal

From Azure Home select the Portal Menu

Select Microsoft Defender for Cloud

Under Management, select Environment Settings

Select a subscription

Click on Settings & monitoring

Set the Status of Log Analytics agent to On

Select a Workspace

Click Apply

Click Continue

Repeat the above for any additional subscriptions.
Remediate from Azure CLI
Use the below command to set Automatic provisioning of monitoring agent to On.

az account get-access-token --query '{subscription:subscription,accessToken:accessToken}' --out tsv | xargs -L1 bash -c 'curl -X PUT -H 'Authorization: Bearer $1' -H 'Content-Type: application/json' https://management.azure.com/subscriptions/subscriptionID/providers/Microsoft.Security/autoProvisioningSettings/default?api-version=2017-08-01-preview -d@'input.json''

Where input.json contains the Request body json data as mentioned below.

   {
  'id': '/subscriptions/<Your_Subscription_Id>/providers/Microsoft.Security/autoProvisioningSettings/default',
  'name': 'default',
  'type': 'Microsoft.Security/autoProvisioningSettings',
  'properties': {
    'autoProvision': 'On'
  }
}

Default Value:

By default, Automatic provisioning of monitoring agent is set to On."
  reference      : "800-171|3.11.2,800-171|3.11.3,800-53|RA-5,800-53r5|RA-5,CSCv7|3.1,CSCv8|7.5,CSCv8|7.6,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,CSF2.0|GV.SC-10,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|ID.RA-01,CSF2.0|ID.RA-08,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.1,ITSG-33|RA-5,LEVEL|1A,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.7.1,PCI-DSSv3.2.1|6.1,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.7"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listAutoProvisioningSettings"
  json_transform : '.[]|.subscriptionId as $id|.value|.name as $name|.type as $type|"Subscription ID: \($id), Name: \($name), Auto Provisioning: \(.properties.autoProvision)"'
  regex          : "Auto Provisioning:"
  not_expect     : "Auto Provisioning: Off"
</custom_item>

<report type:"WARNING">
  description : "3.1.10 Ensure that Microsoft Defender Recommendation for 'Apply system updates' status is 'Completed'"
  info        : "Ensure that the latest OS patches for all virtual machines are applied.

Rationale:

Windows and Linux virtual machines should be kept updated to:

Address a specific bug or flaw

Improve an OS or application's general stability

Fix a security vulnerability

Microsoft Defender for Cloud retrieves a list of available security and critical updates from Windows Update or Windows Server Update Services (WSUS), depending on which service is configured on a Windows VM. The security center also checks for the latest updates in Linux systems. If a VM is missing a system update, the security center will recommend system updates be applied.

Impact:

Running Microsoft Defender for Cloud incurs additional charges for each resource monitored. Please see attached reference for exact charges per hour.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Follow Microsoft Azure documentation to apply security patches from the security center. Alternatively, you can employ your own patch assessment and management tool to periodically assess, report, and install the required security patches for your OS.

Default Value:

By default, patches are not automatically deployed."
  reference   : "800-171|3.11.2,800-171|3.11.3,800-171|3.14.1,800-53|RA-5,800-53|SI-2,800-53|SI-2(2),800-53r5|RA-5,800-53r5|RA-7,800-53r5|SI-2,800-53r5|SI-2(2),CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSCv8|7.3,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,CSF2.0|GV.SC-10,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|ID.RA-01,CSF2.0|ID.RA-08,CSF2.0|PR.PS-02,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.1,ITSG-33|RA-5,ITSG-33|SI-2,ITSG-33|SI-2(2),LEVEL|1A,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.1,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,PCI-DSSv4.0|6.3.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.2,SWIFT-CSCv1|2.7"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<report type:"WARNING">
  description : "3.1.11 Ensure that Microsoft Cloud Security Benchmark policies are not set to 'Disabled'"
  info        : "The Microsoft Cloud Security Benchmark (or 'MCSB') is an Azure Policy Initiative containing many security policies to evaluate resource configuration against best practice recommendations. If a policy in the MCSB is set with effect type Disabled, it is not evaluated and may prevent administrators from being informed of valuable security recommendations.

Rationale:

A security policy defines the desired configuration of resources in your environment and helps ensure compliance with company or regulatory security requirements. The MCSB Policy Initiative a set of security recommendations based on best practices and is associated with every subscription by default. When a policy 'Effect' is set to Audit, policies in the MCSB ensure that Defender for Cloud evaluates relevant resources for supported recommendations. To ensure that policies within the MCSB are not being missed when the Policy Initiative is evaluated, none of the policies should have an Effect of Disabled.

Impact:

Policies within the MCSB default to an effect of Audit and will evaluate - but not enforce - policy recommendations. Ensuring these policies are set to Audit simply ensures that the evaluation occurs to allow administrators to understand where an improvement may be possible. Administrators will need to determine if the recommendations are relevant and desirable for their environment, then manually take action to resolve the status if desired.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Remediate from Azure Portal
Part A - List all disabled policies

From Azure Home select the Portal Menu

Select Microsoft Defender for Cloud

Under Management, select Environment Settings

Select the appropriate Subscription

Click on Security policies in the left column

Click on Microsoft cloud security benchmark

Click Add Filter and select Effect

Check the Disabled box to search for all disabled policies

Click Apply

Part B - Remediate Policy Effect
For each policy that remains in the list:

Click the blue ellipses ... to the right of the policy name

Click Manage effect and parameters

Under Policy effect, select the Audit radio button

Click Save

Click Refresh

Repeat 'Part B - Remediate Policy Effect' until no more policies are listed.

Default Value:

By default, the MCSB policy initiative is associated to all subscriptions and most policies will have an effect of Audit. Some policies will have a default effect of Disabled."
  reference   : "800-171|3.1.16,800-171|3.1.17,800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|AC-18,800-53|AC-18(1),800-53|AC-18(3),800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|AC-18,800-53r5|AC-18(1),800-53r5|AC-18(3),800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv7|5.5,CSCv8|4.1,CSCv8|4.2,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,CSF|PR.PT-4,CSF2.0|DE.CM-09,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|ID.RA-09,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-03,CSF2.0|PR.PS-01,CSF2.0|PR.PS-06,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|AC-18(1),ITSG-33|AC-18(3),ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1M,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T5.4.2,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|NS33,NIAv2|NS34,NIAv2|NS38,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<custom_item>
  description    : "3.1.12 Ensure That 'All users with the following roles' is set to 'Owner'"
  info           : "Enable security alert emails to subscription owners.

Rationale:

Enabling security alert emails to subscription owners ensures that they receive security alert emails from Microsoft. This ensures that they are aware of any potential security issues and can mitigate the risk in a timely fashion."
  solution       : "Remediate from Azure Portal

From Azure Home select the Portal Menu

Select Microsoft Defender for Cloud

Under Management, select Environment Settings

Click on the appropriate Management Group, Subscription, or Workspace

Click on Email notifications

In the drop down of the All users with the following roles field select Owner

Click Save

Remediate from Azure CLI
Use the below command to set Send email also to subscription owners to On.

az account get-access-token --query '{subscription:subscription,accessToken:accessToken}' --out tsv | xargs -L1 bash -c 'curl -X PUT -H 'Authorization: Bearer $1' -H 'Content-Type: application/json' https://management.azure.com/subscriptions/$0/providers/Microsoft.Security/securityContacts/default1?api-version=2017-08-01-preview -d@'input.json''

Where input.json contains the data below, replacing validEmailAddress with a single email address or multiple comma-separated email addresses:

    {
      'id': '/subscriptions/<Your_Subscription_Id>/providers/Microsoft.Security/securityContacts/default1',
      'name': 'default1',
      'type': 'Microsoft.Security/securityContacts',
      'properties': {
        'email': '<validEmailAddress>',
        'alertNotifications': 'On',
        'alertsToAdmins': 'On',
'notificationsByRole': 'Owner'
      }
    }

Default Value:

By default, Owner is selected"
  reference      : "800-171|3.6.1,800-171|3.6.2,800-53|IR-6,800-53|IR-6(3),800-53r5|IR-6,800-53r5|IR-6(3),CSCv7|19.5,CSCv8|17.2,CSF|RS.CO-2,CSF2.0|RC.CO-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,CSF2.0|RS.CO-02,CSF2.0|RS.CO-03,CSF2.0|RS.MA-01,CSF2.0|RS.MA-02,CSF2.0|RS.MA-03,CSF2.0|RS.MA-04,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ITSG-33|IR-6,LEVEL|1A,NESA|M1.3.3,QCSC-v1|10.2.1,QCSC-v1|11.2"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listSecurityContacts"
  json_transform : '.[]|.subscriptionId as $id| .value[]| .name as $name| "Subscription ID: \($id), Name: \($name), State: \(.properties.notificationsByRole.state), Roles: \(.properties.notificationsByRole.roles)"'
  regex          : "State:"
  expect         : "State: On, Roles: .*Owner"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "3.1.13 Ensure 'Additional email addresses' is Configured with a Security Contact Email"
  info           : "Microsoft Defender for Cloud emails the subscription owners whenever a high-severity alert is triggered for their subscription. You should provide a security contact email address as an additional email address.

Rationale:

Microsoft Defender for Cloud emails the Subscription Owner to notify them about security alerts. Adding your Security Contact's email address to the 'Additional email addresses' field ensures that your organization's Security Team is included in these alerts. This ensures that the proper people are aware of any potential compromise in order to mitigate the risk in a timely fashion.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution       : "Remediate from Azure Portal

From Azure Home select the Portal Menu.

Select Microsoft Defender for Cloud.

Under Management, select Environment Settings.

Click on the appropriate Management Group, Subscription, or Workspace.

Click on Email notifications.

Enter a valid security contact email address (or multiple addresses separated by commas) in the Additional email addresses field.

Click Save.

Remediate from Azure CLI
Use the below command to set Security contact emails to On.

az account get-access-token --query '{subscription:subscription,accessToken:accessToken}' --out tsv | xargs -L1 bash -c 'curl -X PUT -H 'Authorization: Bearer $1' -H 'Content-Type: application/json' https://management.azure.com/subscriptions/$0/providers/Microsoft.Security/securityContacts/default?api-version=2020-01-01-preview -d@'input.json''

Where input.json contains the data below, replacing validEmailAddress with a single email address or multiple comma-separated email addresses:

    {
      'id': '/subscriptions/<Your_Subscription_Id>/providers/Microsoft.Security/securityContacts/default',
      'name': 'default',
      'type': 'Microsoft.Security/securityContacts',
      'properties': {
        'email': '<validEmailAddress>',
        'alertNotifications': 'On',
        'alertsToAdmins': 'On'
      }
    }

Default Value:

By default, there are no additional email addresses entered."
  reference      : "800-171|3.6.1,800-171|3.6.2,800-53|IR-6,800-53|IR-6(3),800-53r5|IR-6,800-53r5|IR-6(3),CSCv7|19.5,CSCv8|17.2,CSF|RS.CO-2,CSF2.0|RC.CO-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,CSF2.0|RS.CO-02,CSF2.0|RS.CO-03,CSF2.0|RS.MA-01,CSF2.0|RS.MA-02,CSF2.0|RS.MA-03,CSF2.0|RS.MA-04,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ITSG-33|IR-6,LEVEL|1A,NESA|M1.3.3,QCSC-v1|10.2.1,QCSC-v1|11.2"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listSecurityContacts"
  json_transform : '.[]|.subscriptionId as $id| .value[]| .name as $name| "Subscription ID: \($id), Name: \($name), Email: \(.properties.email)"'
  regex          : "Email:"
  expect         : "MANUAL_REVIEW"
  match_all      : YES
  severity       : MEDIUM
</custom_item>

<custom_item>
  description    : "3.1.14 Ensure That 'Notify about alerts with the following severity' is Set to 'High'"
  info           : "Enables emailing security alerts to the subscription owner or other designated security contact.

Rationale:

Enabling security alert emails ensures that security alert emails are received from Microsoft. This ensures that the right people are aware of any potential security issues and are able to mitigate the risk."
  solution       : "Remediate from Azure Portal

From Azure Home select the Portal Menu

Select Microsoft Defender for Cloud

Under Management, select Environment Settings

Click on the appropriate Management Group, Subscription, or Workspace

Click on Email notifications

Under Notification types, check the check box next to Notify about alerts with the following severity (or higher): and select High from the drop down menu

Click Save

Remediate from Azure CLI
Use the below command to set Send email notification for high severity alerts to On.

az account get-access-token --query '{subscription:subscription,accessToken:accessToken}' --out tsv | xargs -L1 bash -c 'curl -X PUT -H 'Authorization: Bearer $1' -H 'Content-Type: application/json' https://management.azure.com/subscriptions/<$0>/providers/Microsoft.Security/securityContacts/default1?api-version=2017-08-01-preview -d@'input.json''

Where input.json contains the data below, replacing validEmailAddress with a single email address or multiple comma-separated email addresses:

       {
      'id': '/subscriptions/<Your_Subscription_Id>/providers/Microsoft.Security/securityContacts/default1',
      'name': 'default1',
      'type': 'Microsoft.Security/securityContacts',
      'properties': {
        'email': '<validEmailAddress>',
        'alertNotifications': 'On',
        'alertsToAdmins': 'On'
      }
    }

Default Value:

By default, Notify about alerts with the following severity (or higher): is set to High."
  reference      : "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv7|6.8,CSCv8|13.11,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,CSF2.0|DE.AE-02,CSF2.0|DE.AE-03,CSF2.0|DE.CM-01,CSF2.0|DE.CM-06,CSF2.0|DE.CM-09,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|ID.RA-01,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|1A,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listSecurityContacts"
  json_transform : '.[]|.subscriptionId as $id| .value[]| .name as $name | "Subscription ID: \($id), Name: \($name), State: \(.properties.alertNotifications.state), Minimal Severity: \(.properties.alertNotifications.minimalSeverity)"'
  regex          : "State:"
  expect         : "State: On, Minimal Severity: High"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "3.3.1 Ensure that the Expiration Date is set for all Keys in RBAC Key Vaults"
  info           : "Ensure that all Keys in Role Based Access Control (RBAC) Azure Key Vaults have an expiration date set.

Rationale:

Azure Key Vault enables users to store and use cryptographic keys within the Microsoft Azure environment. The exp (expiration date) attribute identifies the expiration date on or after which the key MUST NOT be used for encryption of new data, wrapping of new keys, and signing. By default, keys never expire. It is thus recommended that keys be rotated in the key vault and set an explicit expiration date for all keys to help enforce the key rotation. This ensures that the keys cannot be used beyond their assigned lifetimes.

Impact:

Keys cannot be used beyond their assigned expiration dates respectively. Keys need to be rotated periodically wherever they are used.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution       : "Remediate from Azure Portal

Go to Key vaults.

For each Key vault, click on Keys.

In the main pane, ensure that an appropriate Expiration date is set for any keys that are Enabled.

Remediate from Azure CLI
Update the Expiration date for the key using the below command:

az keyvault key set-attributes --name <keyName> --vault-name <vaultName> --expires Y-m-d'T'H:M:S'Z'

Note: To view the expiration date on all keys in a Key Vault using Microsoft API, the 'List' Key permission is required.
To update the expiration date for the keys:

Go to the Key vault, click on Access Control (IAM).

Click on Add role assignment and assign the role of Key Vault Crypto Officer to the appropriate user.

Remediate from PowerShell

Set-AzKeyVaultKeyAttribute -VaultName <VaultName> -Name <KeyName> -Expires <DateTime>

Default Value:

By default, keys do not expire."
  reference      : "800-171|3.1.1,800-53|AC-1,800-53|AC-2,800-53|AC-2(1),800-53|AU-11,800-53|SI-12,800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),800-53r5|AU-11,800-53r5|CM-12,800-53r5|SI-12,CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.6(c),CSCv7|16.7,CSCv8|3.1,CSCv8|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|GV.OC-03,CSF2.0|GV.OV-01,CSF2.0|GV.PO-01,CSF2.0|GV.PO-02,CSF2.0|GV.SC-03,CSF2.0|ID.AM-07,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.PS-04,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|AC-2(1),ITSG-33|AU-11,ITSG-33|SI-12,ITSG-33|SI-12a.,LEVEL|1A,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.2.4,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|DR1,NIAv2|DR1a,NIAv2|DR1b,NIAv2|DR1c,NIAv2|DR2,NIAv2|DR3,NIAv2|DR4,NIAv2|DR5,NIAv2|DR6,NIAv2|NS5j,NIAv2|SM7,NIAv2|SS14e,PCI-DSSv3.2.1|3.1,PCI-DSSv3.2.1|10.7,PCI-DSSv4.0|3.2.1,PCI-DSSv4.0|10.5.1,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listVaultsByResourceGroup"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgn|.vaults[]|"Subscription ID: \($subid), Resource Group: \($rgn), Vault Name: \(.name)"'
  not_expect     : ".+"
  severity       : MEDIUM
</custom_item>

<custom_item>
  description    : "3.3.2 Ensure that the Expiration Date is set for all Keys in Non-RBAC Key Vaults."
  info           : "Ensure that all Keys in Non Role Based Access Control (RBAC) Azure Key Vaults have an expiration date set.

Rationale:

Azure Key Vault enables users to store and use cryptographic keys within the Microsoft Azure environment. The exp (expiration date) attribute identifies the expiration date on or after which the key MUST NOT be used for a cryptographic operation. By default, keys never expire. It is thus recommended that keys be rotated in the key vault and set an explicit expiration date for all keys. This ensures that the keys cannot be used beyond their assigned lifetimes.

Impact:

Keys cannot be used beyond their assigned expiration dates respectively. Keys need to be rotated periodically wherever they are used.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution       : "Remediate from Azure Portal

Go to Key vaults.

For each Key vault, click on Keys.

In the main pane, ensure that the status of the key is Enabled.

For each enabled key, ensure that an appropriate Expiration date is set.

Remediate from Azure CLI
Update the Expiration date for the key using the below command:

az keyvault key set-attributes --name <keyName> --vault-name <vaultName> --expires Y-m-d'T'H:M:S'Z'

Note:
To view the expiration date on all keys in a Key Vault using Microsoft API, the 'List' Key permission is required.
To update the expiration date for the keys:

Go to Key vault, click on Access policies.

Click on Create and add an access policy with the Update permission (in the Key Permissions - Key Management Operations section).

Remediate from PowerShell

Set-AzKeyVaultKeyAttribute -VaultName <Vault Name> -Name <Key Name> -Expires <DateTime>

Default Value:

By default, keys do not expire."
  reference      : "800-171|3.1.1,800-53|AC-1,800-53|AC-2,800-53|AC-2(1),800-53|AU-11,800-53|SI-12,800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),800-53r5|AU-11,800-53r5|CM-12,800-53r5|SI-12,CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.6(c),CSCv7|16.7,CSCv8|3.1,CSCv8|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|GV.OC-03,CSF2.0|GV.OV-01,CSF2.0|GV.PO-01,CSF2.0|GV.PO-02,CSF2.0|GV.SC-03,CSF2.0|ID.AM-07,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.PS-04,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|AC-2(1),ITSG-33|AU-11,ITSG-33|SI-12,ITSG-33|SI-12a.,LEVEL|1A,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.2.4,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|DR1,NIAv2|DR1a,NIAv2|DR1b,NIAv2|DR1c,NIAv2|DR2,NIAv2|DR3,NIAv2|DR4,NIAv2|DR5,NIAv2|DR6,NIAv2|NS5j,NIAv2|SM7,NIAv2|SS14e,PCI-DSSv3.2.1|3.1,PCI-DSSv3.2.1|10.7,PCI-DSSv4.0|3.2.1,PCI-DSSv4.0|10.5.1,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listVaultsByResourceGroup"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgn|.vaults[]|"Subscription ID: \($subid), Resource Group: \($rgn), Vault Name: \(.name)"'
  not_expect     : ".+"
  severity       : MEDIUM
</custom_item>

<custom_item>
  description    : "3.3.3 Ensure that the Expiration Date is set for all Secrets in RBAC Key Vaults"
  info           : "Ensure that all Secrets in Role Based Access Control (RBAC) Azure Key Vaults have an expiration date set.

Rationale:

The Azure Key Vault enables users to store and keep secrets within the Microsoft Azure environment. Secrets in the Azure Key Vault are octet sequences with a maximum size of 25k bytes each. The exp (expiration date) attribute identifies the expiration date on or after which the secret MUST NOT be used. By default, secrets never expire. It is thus recommended to rotate secrets in the key vault and set an explicit expiration date for all secrets. This ensures that the secrets cannot be used beyond their assigned lifetimes.

Impact:

Secrets cannot be used beyond their assigned expiry date respectively. Secrets need to be rotated periodically wherever they are used.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution       : "Remediate from Azure Portal

Go to Key vaults.

For each Key vault, click on Secrets.

In the main pane, ensure that the status of the secret is Enabled.

For each enabled secret, ensure that an appropriate Expiration date is set.

Remediate from Azure CLI
Update the Expiration date for the secret using the below command:

az keyvault secret set-attributes --name <secret_name> --vault-name <vault_name> --expires Y-m-d'T'H:M:S'Z'

Note: To view the expiration date on all secrets in a Key Vault using Microsoft API, the List Secret permission is required.
To update the expiration date for the secrets:

Go to the Key vault, click on Access Control (IAM).

Click on Add role assignment and assign the role of Key Vault Secrets Officer to the appropriate user.

Remediate from PowerShell

Set-AzKeyVaultSecretAttribute -VaultName <vault_name> -Name <secret_name> -Expires <date_time>

Default Value:

By default, secrets do not expire."
  reference      : "800-171|3.1.1,800-53|AC-1,800-53|AC-2,800-53|AC-2(1),800-53|AU-11,800-53|SI-12,800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),800-53r5|AU-11,800-53r5|CM-12,800-53r5|SI-12,CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.6(c),CSCv7|16.7,CSCv8|3.1,CSCv8|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|GV.OC-03,CSF2.0|GV.OV-01,CSF2.0|GV.PO-01,CSF2.0|GV.PO-02,CSF2.0|GV.SC-03,CSF2.0|ID.AM-07,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.PS-04,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|AC-2(1),ITSG-33|AU-11,ITSG-33|SI-12,ITSG-33|SI-12a.,LEVEL|1A,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.2.4,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|DR1,NIAv2|DR1a,NIAv2|DR1b,NIAv2|DR1c,NIAv2|DR2,NIAv2|DR3,NIAv2|DR4,NIAv2|DR5,NIAv2|DR6,NIAv2|NS5j,NIAv2|SM7,NIAv2|SS14e,PCI-DSSv3.2.1|3.1,PCI-DSSv3.2.1|10.7,PCI-DSSv4.0|3.2.1,PCI-DSSv4.0|10.5.1,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listVaultsByResourceGroup"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgn|.vaults[]|"Subscription ID: \($subid), Resource Group: \($rgn), Vault Name: \(.name)"'
  not_expect     : ".+"
  severity       : MEDIUM
</custom_item>

<custom_item>
  description    : "3.3.4 Ensure that the Expiration Date is set for all Secrets in Non-RBAC Key Vaults"
  info           : "Ensure that all Secrets in Non Role Based Access Control (RBAC) Azure Key Vaults have an expiration date set.

Rationale:

The Azure Key Vault enables users to store and keep secrets within the Microsoft Azure environment. Secrets in the Azure Key Vault are octet sequences with a maximum size of 25k bytes each. The exp (expiration date) attribute identifies the expiration date on or after which the secret MUST NOT be used. By default, secrets never expire. It is thus recommended to rotate secrets in the key vault and set an explicit expiration date for all secrets. This ensures that the secrets cannot be used beyond their assigned lifetimes.

Impact:

Secrets cannot be used beyond their assigned expiry date respectively. Secrets need to be rotated periodically wherever they are used.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution       : "Remediate from Azure Portal

Go to Key vaults.

For each Key vault, click on Secrets.

In the main pane, ensure that the status of the secret is Enabled.

Set an appropriate Expiration date on all secrets.

Remediate from Azure CLI
Update the Expiration date for the secret using the below command:

az keyvault secret set-attributes --name <secret_name> --vault-name <vault_name> --expires Y-m-d'T'H:M:S'Z'

Note:
To view the expiration date on all secrets in a Key Vault using Microsoft API, the List Secret permission is required.
To update the expiration date for the secrets:

Go to Key vault, click on Access policies.

Click on Create and add an access policy with the Update permission (in the Secret Permissions - Secret Management Operations section).

Remediate from PowerShell
For each Key vault with the EnableRbacAuthorization setting set to False or empty, run the following command.

Set-AzKeyVaultSecret -VaultName <vault_name> -Name <secret_name> -Expires <date_time>

Default Value:

By default, secrets do not expire."
  reference      : "800-171|3.1.1,800-53|AC-1,800-53|AC-2,800-53|AC-2(1),800-53|AU-11,800-53|SI-12,800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),800-53r5|AU-11,800-53r5|CM-12,800-53r5|SI-12,CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.6(c),CSCv7|16.7,CSCv8|3.1,CSCv8|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|GV.OC-03,CSF2.0|GV.OV-01,CSF2.0|GV.PO-01,CSF2.0|GV.PO-02,CSF2.0|GV.SC-03,CSF2.0|ID.AM-07,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.PS-04,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|AC-2(1),ITSG-33|AU-11,ITSG-33|SI-12,ITSG-33|SI-12a.,LEVEL|1A,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.2.4,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|DR1,NIAv2|DR1a,NIAv2|DR1b,NIAv2|DR1c,NIAv2|DR2,NIAv2|DR3,NIAv2|DR4,NIAv2|DR5,NIAv2|DR6,NIAv2|NS5j,NIAv2|SM7,NIAv2|SS14e,PCI-DSSv3.2.1|3.1,PCI-DSSv3.2.1|10.7,PCI-DSSv4.0|3.2.1,PCI-DSSv4.0|10.5.1,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listVaultsByResourceGroup"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgn|.vaults[]|"Subscription ID: \($subid), Resource Group: \($rgn), Vault Name: \(.name)"'
  not_expect     : ".+"
  severity       : MEDIUM
</custom_item>

<custom_item>
  description    : "3.3.5 Ensure the Key Vault is Recoverable"
  info           : "The Key Vault contains object keys, secrets, and certificates. Accidental unavailability of a Key Vault can cause immediate data loss or loss of security functions (authentication, validation, verification, non-repudiation, etc.) supported by the Key Vault objects.

It is recommended the Key Vault be made recoverable by enabling the 'Do Not Purge' and 'Soft Delete' functions. This is in order to prevent loss of encrypted data, including storage accounts, SQL databases, and/or dependent services provided by Key Vault objects (Keys, Secrets, Certificates) etc. This may happen in the case of accidental deletion by a user or from disruptive activity by a malicious user.

NOTE: In February 2025, Microsoft will enable soft-delete protection on all key vaults, and users will no longer be able to opt out of or turn off soft-delete.

WARNING: A current limitation is that role assignments disappearing when Key Vault is deleted. All role assignments will need to be recreated after recovery.

Rationale:

There could be scenarios where users accidentally run delete/purge commands on Key Vault or an attacker/malicious user deliberately does so in order to cause disruption. Deleting or purging a Key Vault leads to immediate data loss, as keys encrypting data and secrets/certificates allowing access/services will become non-accessible.

There is a Key Vault property that plays a role in permanent unavailability of a Key Vault:

enablePurgeProtection: Setting this parameter to 'true' for a Key Vault ensures that even if Key Vault is deleted, Key Vault itself or its objects remain recoverable for the next 90 days. Key Vault/objects can either be recovered or purged (permanent deletion) during those 90 days. If no action is taken, the key vault and its objects will subsequently be purged.

Enabling the enablePurgeProtection parameter on Key Vaults ensures that Key Vaults and their objects cannot be deleted/purged permanently.

Impact:

Once purge-protection and soft-delete are enabled for a Key Vault, the action is irreversible."
  solution       : "To enable 'Do Not Purge' and 'Soft Delete' for a Key Vault:
Remediate from Azure Portal

Go to Key Vaults.

For each Key Vault.

Click Properties.

Ensure the status of Purge protection reads Enable purge protection (enforce a mandatory retention period for deleted vaults and vault objects).
Note, once enabled you cannot disable it.

Remediate from Azure CLI

az resource update --id /subscriptions/xxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/<resourceGroupName>/providers/Microsoft.KeyVault
/vaults/<keyVaultName> --set properties.enablePurgeProtection=true

Remediate from PowerShell

Update-AzKeyVault -VaultName <vaultName -ResourceGroupName <resourceGroupName -EnablePurgeProtection

Default Value:

When a new Key Vault is created,

enableSoftDelete is enabled by default, and

enablePurgeProtection is disabled by default.

NOTE: In February 2025, Microsoft will enable soft-delete protection on all key vaults, and users will no longer be able to opt out of or turn off soft-delete."
  reference      : "800-53|CP-2,800-53|CP-10,800-53r5|CP-2,800-53r5|CP-10,CSCv7|10.2,CSCv8|11.1,CSF|DE.AE-4,CSF|ID.AM-5,CSF|ID.AM-6,CSF|ID.BE-1,CSF|ID.BE-5,CSF|PR.DS-4,CSF|PR.IP-7,CSF|PR.IP-9,CSF|RC.CO-3,CSF|RC.IM-1,CSF|RC.IM-2,CSF|RC.RP-1,CSF|RS.AN-2,CSF|RS.AN-4,CSF|RS.CO-1,CSF|RS.CO-3,CSF|RS.CO-4,CSF|RS.IM-1,CSF|RS.IM-2,CSF|RS.RP-1,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|ID.IM-04,CSF2.0|PR.IR-02,CSF2.0|RC.CO-04,CSF2.0|RC.RP,CSF2.0|RC.RP-01,CSF2.0|RC.RP-02,CSF2.0|RC.RP-03,CSF2.0|RC.RP-05,GDPR|32.1.b,GDPR|32.1.c,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(ii),ITSG-33|CP-2,ITSG-33|CP-10,ITSG-33|CP-10a.,LEVEL|1A,NESA|T2.2.4,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listVaultsByResourceGroup"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgn|.vaults[]|"Subscription ID: \($subid), Resource Group: \($rgn), Vault Name: \(.name), Enable Soft Delete: \(.properties.enableSoftDelete), Enable Purge Protection: \(.properties.enablePurgeProtection)"'
  expect         : "Enable Soft Delete: true, Enable Purge Protection: true"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "4.1 Ensure that 'Secure transfer required' is set to 'Enabled'"
  info           : "Enable data encryption in transit.

Rationale:

The secure transfer option enhances the security of a storage account by only allowing requests to the storage account by a secure connection. For example, when calling REST APIs to access storage accounts, the connection must use HTTPS. Any requests using HTTP will be rejected when 'secure transfer required' is enabled. When using the Azure files service, connection without encryption will fail, including scenarios using SMB 2.1, SMB 3.0 without encryption, and some flavors of the Linux SMB client. Because Azure storage doesn't support HTTPS for custom domain names, this option is not applied when using a custom domain name."
  solution       : "Remediate from Azure Portal

Go to Storage Accounts.

For each storage account, under Settings, click Configuration.

Set Secure transfer required to Enabled.

Click Save.

Remediate from Azure CLI
Use the below command to enable Secure transfer required for a Storage Account

az storage account update --name <storageAccountName> --resource-group <resourceGroupName> --https-only true

Default Value:

By default, Secure transfer required is set to Disabled."
  reference      : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listStorageAccounts"
  json_transform : '.[]|.subscriptionId as $id| .value[]| .name as $name| "Subscription ID: \($id), Name: \($name), Secure Transfer Required: \(.properties.supportsHttpsTrafficOnly)"'
  not_expect     : "Secure Transfer Required: false"
</custom_item>

<custom_item>
  description    : "4.3 Ensure that 'Enable key rotation reminders' is enabled for each Storage Account"
  info           : "Access Keys authenticate application access requests to data contained in Storage Accounts. A periodic rotation of these keys is recommended to ensure that potentially compromised keys cannot result in a long-term exploitable credential. The 'Rotation Reminder' is an automatic reminder feature for a manual procedure.

Rationale:

Reminders such as those generated by this recommendation will help maintain a regular and healthy cadence for activities which improve the overall efficacy of a security program.

Cryptographic key rotation periods will vary depending on your organization's security requirements and the type of data which is being stored in the Storage Account. For example, PCI DSS mandates that cryptographic keys be replaced or rotated 'regularly,' and advises that keys for static data stores be rotated every 'few months.'

For the purposes of this recommendation, 90 days will prescribed for the reminder. Review and adjustment of the 90 day period is recommended, and may even be necessary. Your organization's security requirements should dictate the appropriate setting.

Impact:

This recommendation only creates a periodic reminder to regenerate access keys. Regenerating access keys can affect services in Azure as well as the organization's applications that are dependent on the storage account. All clients that use the access key to access the storage account must be updated to use the new key.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution       : "Remediate from Azure Portal

Go to Storage Accounts

For each Storage Account that is not compliant, under Security + networking, go to Access keys

Click Set rotation reminder

Check Enable key rotation reminders

In the Send reminders field select Custom, then set the Remind me every field to 90 and the period drop down to Days

Click Save

Remediate from Powershell

$rgName = <resource group name for the storage>
$accountName = <storage account name>
$account = Get-AzStorageAccount -ResourceGroupName $rgName -Name $accountName
if ($account.KeyCreationTime.Key1 -eq $null -or $account.KeyCreationTime.Key2 -eq $null){
Write-output ('You must regenerate both keys at least once before setting expiration policy')
} else {
$account = Set-AzStorageAccount -ResourceGroupName $rgName -Name $accountName -KeyExpirationPeriodInDay 90
}
$account.KeyPolicy.KeyExpirationPeriodInDays

Default Value:

By default, Key rotation reminders is not configured."
  reference      : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-171|3.14.6,800-171|3.14.7,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53|SI-4,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv7|6.8,CSCv7|11.3,CSCv8|4.1,CSCv8|13.11,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.IP-8,CSF|PR.PT-3,CSF|RS.AN-1,CSF|RS.CO-3,CSF2.0|DE.AE-02,CSF2.0|DE.AE-03,CSF2.0|DE.CM-01,CSF2.0|DE.CM-06,CSF2.0|DE.CM-09,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|ID.RA-01,CSF2.0|ID.RA-09,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-03,CSF2.0|PR.PS-01,CSF2.0|PR.PS-06,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,ITSG-33|SI-4,LEVEL|1M,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.3"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listStorageAccounts"
  json_transform : '.[]|.subscriptionId as $id| .value[]| .name as $name| "Subscription ID: \($id), Name: \($name), Key Creation Time: \(.properties.keyCreationTime)"'
  not_expect     : "Key Creation Time: .+"
  severity       : MEDIUM
</custom_item>

<custom_item>
  description    : "4.4 Ensure that Storage Account Access Keys are Periodically Regenerated"
  info           : "For increased security, regenerate storage account access keys periodically.

Rationale:

When a storage account is created, Azure generates two 512-bit storage access keys which are used for authentication when the storage account is accessed. Rotating these keys periodically ensures that any inadvertent access or exposure does not result from the compromise of these keys.

Cryptographic key rotation periods will vary depending on your organization's security requirements and the type of data which is being stored in the Storage Account. For example, PCI DSS mandates that cryptographic keys be replaced or rotated 'regularly,' and advises that keys for static data stores be rotated every 'few months.'

For the purposes of this recommendation, 90 days will prescribed for the reminder. Review and adjustment of the 90 day period is recommended, and may even be necessary. Your organization's security requirements should dictate the appropriate setting.

Impact:

Regenerating access keys can affect services in Azure as well as the organization's applications that are dependent on the storage account. All clients who use the access key to access the storage account must be updated to use the new key.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution       : "Remediate from Azure Portal

Go to Storage Accounts.

For each Storage Account with outdated keys, under Security + networking, go to Access keys.

Click Rotate key next to the outdated key, then click Yes to the prompt confirming that you want to regenerate the access key.

After Azure regenerates the Access Key, you can confirm that Access keys reflects a Last rotated date of (0 days ago).

Default Value:

By default, access keys are not regenerated periodically."
  reference      : "800-171|3.1.1,800-171|3.4.6,800-171|3.4.7,800-171|3.7.5,800-53|AC-1,800-53|AC-2,800-53|AC-2(1),800-53|CM-7,800-53|MA-4,800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),800-53r5|CM-7,800-53r5|MA-4,CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.6(c),CSCv7|16.7,CSCv8|4.6,CSCv8|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.IP-1,CSF|PR.MA-2,CSF|PR.PT-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|GV.OC-03,CSF2.0|GV.OV-01,CSF2.0|GV.PO-01,CSF2.0|GV.PO-02,CSF2.0|GV.SC-03,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|AC-2(1),ITSG-33|CM-7,ITSG-33|MA-4,LEVEL|1M,NESA|M1.2.2,NESA|T2.3.4,NESA|T5.4.4,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|NS5j,NIAv2|SS14e,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|2.3,TBA-FIISB|45.2.3"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listStorageAccounts"
  json_transform : '.[]|.subscriptionId as $id| .value[]| .name as $name| "Subscription ID: \($id), Name: \($name), Key Creation Time: \(.properties.keyCreationTime)"'
  not_expect     : "Key Creation Time: .+"
  severity       : MEDIUM
</custom_item>

<report type:"WARNING">
  description : "4.5 Ensure that Shared Access Signature Tokens Expire Within an Hour"
  info        : "Expire shared access signature tokens within an hour.

Rationale:

A shared access signature (SAS) is a URI that grants restricted access rights to Azure Storage resources. A shared access signature can be provided to clients who should not be trusted with the storage account key but for whom it may be necessary to delegate access to certain storage account resources. Providing a shared access signature URI to these clients allows them access to a resource for a specified period of time. This time should be set as low as possible and preferably no longer than an hour.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "When generating shared access signature tokens, use start and end time such that it falls within an hour.
Remediate from Azure Portal

Go to Storage Accounts

For each storage account where a shared access signature is required, under Security + networking, go to Shared access signature

Select the appropriate Allowed resource types

Set the Start and expiry date/time to be within one hour

Click Generate SAS and connection string

Default Value:

By default, expiration for shared access signature is set to 8 hours."
  reference   : "800-171|3.1.1,800-53|AC-1,800-53|AC-2,800-53|AC-2(1),800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.6(c),CSCv7|16.7,CSCv8|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|GV.OC-03,CSF2.0|GV.OV-01,CSF2.0|GV.PO-01,CSF2.0|GV.PO-02,CSF2.0|GV.SC-03,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|AC-2(1),LEVEL|1M,NESA|M1.2.2,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<custom_item>
  description    : "4.6 Ensure that 'Public Network Access' is 'Disabled' for storage accounts"
  info           : "Disallowing public network access for a storage account overrides the public access settings for individual containers in that storage account for Azure Resource Manager Deployment Model storage accounts. Azure Storage accounts that use the classic deployment model will be retired on August 31, 2024.

Rationale:

The default network configuration for a storage account permits a user with appropriate permissions to configure public network access to containers and blobs in a storage account. Keep in mind that public access to a container is always turned off by default and must be explicitly configured to permit anonymous requests. It grants read-only access to these resources without sharing the account key, and without requiring a shared access signature. It is recommended not to provide public network access to storage accounts until, and unless, it is strongly desired. A shared access signature token or Azure AD RBAC should be used for providing controlled and timed access to blob containers.

Impact:

Access will have to be managed using shared access signatures or via Azure AD RBAC."
  solution       : "Remediate from Azure Portal
First, follow Microsoft documentation and create shared access signature tokens for your blob containers. Then,

Go to Storage Accounts.

For each storage account, under the Security + networking section, click Networking.

Set Public network access to Disabled.

Click Save.

Remediate from Azure CLI
Set 'Public Network Access' to Disabled on the storage account

az storage account update --name <storage-account> --resource-group <resource-group> --public-network-access Disabled

Remediate from PowerShell
For each Storage Account, run the following to set the PublicNetworkAccess setting to Disabled

Set-AzStorageAccount -ResourceGroupName <resource group name> -Name <storage account name> -PublicNetworkAccess Disabled

Default Value:

By default, Public Network Access is set to Enabled from all networks for the Storage Account."
  reference      : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listStorageAccounts"
  json_transform : '.[]|.subscriptionId as $id | .value[] | .name as $name |"Subscription ID: \($id), Storage account: \($name), Public Network Access: \(.properties.publicNetworkAccess)"'
  expect         : "Public Network Access: Disabled"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "4.7 Ensure Default Network Access Rule for Storage Accounts is Set to Deny"
  info           : "Restricting default network access helps to provide a new layer of security, since storage accounts accept connections from clients on any network. To limit access to selected networks, the default action must be changed.

Rationale:

Storage accounts should be configured to deny access to traffic from all networks (including internet traffic). Access can be granted to traffic from specific Azure Virtual networks, allowing a secure network boundary for specific applications to be built. Access can also be granted to public internet IP address ranges to enable connections from specific internet or on-premises clients. When network rules are configured, only applications from allowed networks can access a storage account. When calling from an allowed network, applications continue to require proper authorization (a valid access key or SAS token) to access the storage account.

Impact:

All allowed networks will need to be whitelisted on each specific network, creating administrative overhead. This may result in loss of network connectivity, so do not turn on for critical resources during business hours."
  solution       : "Remediate from Azure Portal

Go to Storage Accounts.

For each storage account, under Security + networking, click Networking.

Click the Firewalls and virtual networks heading.

Set Public network access to Enabled from selected virtual networks and IP addresses.

Add rules to allow traffic from specific networks and IP addresses.

Click Save.

Remediate from Azure CLI
Use the below command to update default-action to Deny.

    az storage account update --name <StorageAccountName> --resource-group <resourceGroupName> --default-action Deny

Default Value:

By default, Storage Accounts will accept connections from clients on any network."
  reference      : "800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-171|3.13.5,800-53|CM-7,800-53|CP-6,800-53|CP-7,800-53|PL-8,800-53|PM-7,800-53|SA-8,800-53|SC-7,800-53r5|CM-7,800-53r5|CP-6,800-53r5|CP-7,800-53r5|PL-8,800-53r5|PM-7,800-53r5|SA-8,800-53r5|SC-7,CN-L3|8.1.10.6(j),CSCv7|13.3,CSCv8|12.2,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-4,CSF|PR.PT-3,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|ID.AM-03,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.DS-11,CSF2.0|PR.IR-01,CSF2.0|PR.IR-03,CSF2.0|PR.IR-04,CSF2.0|PR.PS-01,CSF2.0|PR.PS-06,GDPR|32.1.b,GDPR|32.1.c,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|CM-7,ITSG-33|CP-6,ITSG-33|CP-7,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SC-7,LEVEL|1A,NESA|T2.2.4,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|SS3,NIAv2|SS15a,NIAv2|VL2,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,SWIFT-CSCv1|2.3,TBA-FIISB|43.1"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listStorageAccounts"
  json_transform : '.[]|.subscriptionId as $id| .value[]| .name as $name| "Subscription ID: \($id), Name: \($name), Default Action: \(.properties.networkAcls.defaultAction)"'
  not_expect     : "Default Action: Allow"
</custom_item>

<custom_item>
  description    : "4.10 Ensure Soft Delete is Enabled for Azure Containers and Blob Storage"
  info           : "The Azure Storage blobs contain data like ePHI or Financial, which can be secret or personal. Data that is erroneously modified or deleted by an application or other storage account user will cause data loss or unavailability.

It is recommended that both Azure Containers with attached Blob Storage and standalone containers with Blob Storage be made recoverable by enabling the soft delete configuration. This is to save and recover data when blobs or blob snapshots are deleted.

Rationale:

Containers and Blob Storage data can be incorrectly deleted. An attacker/malicious user may do this deliberately in order to cause disruption. Deleting an Azure Storage blob causes immediate data loss. Enabling this configuration for Azure storage ensures that even if blobs/data were deleted from the storage account, Blobs/data objects are recoverable for a particular time which is set in the 'Retention policies,' ranging from 7 days to 365 days.

Impact:

Additional storage costs may be incurred as snapshots are retained.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution       : "Remediate from Azure Portal

Go to Storage Accounts.

For each Storage Account, under Data management, go to Data protection.

Check the box next to Enable soft delete for blobs.

Check the box next to Enable soft delete for containers.

Set the retention period for both to a sufficient length for your organization.

Click Save.

Remediate from Azure CLI
Update blob storage retention days in below command

az storage blob service-properties delete-policy update --days-retained <RetentionDaysValue> --account-name <StorageAccountName> --account-key <AccountKey> --enable true

Update container retention with the below command

az storage account blob-service-properties update
    --enable-container-delete-retention true
    --container-delete-retention-days <days>
    --account-name <storageAccount>
    --resource-group <resourceGroup>

Default Value:

Soft delete for containers and blob storage is enabled by default on storage accounts created via the Azure Portal, and disabled by default on storage accounts created via Azure CLI or PowerShell."
  reference      : "800-53|CP-2,800-53|CP-10,800-53r5|CP-2,800-53r5|CP-10,CSCv7|10.4,CSCv8|11.1,CSF|DE.AE-4,CSF|ID.AM-5,CSF|ID.AM-6,CSF|ID.BE-1,CSF|ID.BE-5,CSF|PR.DS-4,CSF|PR.IP-7,CSF|PR.IP-9,CSF|RC.CO-3,CSF|RC.IM-1,CSF|RC.IM-2,CSF|RC.RP-1,CSF|RS.AN-2,CSF|RS.AN-4,CSF|RS.CO-1,CSF|RS.CO-3,CSF|RS.CO-4,CSF|RS.IM-1,CSF|RS.IM-2,CSF|RS.RP-1,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|ID.IM-04,CSF2.0|PR.IR-02,CSF2.0|RC.CO-04,CSF2.0|RC.RP,CSF2.0|RC.RP-01,CSF2.0|RC.RP-02,CSF2.0|RC.RP-03,CSF2.0|RC.RP-05,GDPR|32.1.b,GDPR|32.1.c,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(ii),ITSG-33|CP-2,ITSG-33|CP-10,ITSG-33|CP-10a.,LEVEL|1A,NESA|T2.2.4,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listStorageAccounts"
  json_transform : '.[]|.subscriptionId as $id|.value[] | "Subscription ID: \($id), Name: \(.name)"'
  not_expect     : ".+"
  severity       : MEDIUM
</custom_item>

<custom_item>
  description    : "4.15 Ensure the 'Minimum TLS version' for storage accounts is set to 'Version 1.2'"
  info           : "In some cases, Azure Storage sets the minimum TLS version to be version 1.0 by default. TLS 1.0 is a legacy version and has known vulnerabilities. This minimum TLS version can be configured to be later protocols such as TLS 1.2.

Rationale:

TLS 1.0 has known vulnerabilities and has been replaced by later versions of the TLS protocol. Continued use of this legacy protocol affects the security of data in transit.

Impact:

When set to TLS 1.2 all requests must leverage this version of the protocol. Applications leveraging legacy versions of the protocol will fail."
  solution       : "Remediate from Azure Portal

Go to Storage Accounts.

For each storage account, under Settings, click Configuration.

Set the Minimum TLS version to Version 1.2.

Click Save.

Remediate from Azure CLI

az storage account update \
    --name <storage-account> \
    --resource-group <resource-group> \
    --min-tls-version TLS1_2

Remediate from PowerShell
To set the minimum TLS version, run the following command:

Set-AzStorageAccount -AccountName <STORAGEACCOUNTNAME> '
                     -ResourceGroupName <RESOURCEGROUPNAME> '
                     -MinimumTlsVersion TLS1_2

Default Value:

If a storage account is created through the portal, the MinimumTlsVersion property for that storage account will be set to TLS 1.2.

If a storage account is created through PowerShell or CLI, the MinimumTlsVersion property for that storage account will not be set, and defaults to TLS 1.0."
  reference      : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listStorageAccounts"
  json_transform : '.[]|.subscriptionId as $id| .value[]| .name as $name| "Subscription ID: \($id), Name: \($name), Minimum TLS Version: \(.properties.minimumTlsVersion)"'
  expect         : "Minimum TLS Version: TLS1_2"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "4.16 Ensure 'Cross Tenant Replication' is not enabled"
  info           : "Cross Tenant Replication in Azure allows data to be replicated across multiple Azure tenants. While this feature can be beneficial for data sharing and availability, it also poses a significant security risk if not properly managed. Unauthorized data access, data leakage, and compliance violations are potential risks. Disabling Cross Tenant Replication ensures that data is not inadvertently replicated across different tenant boundaries without explicit authorization.

Rationale:

Disabling Cross Tenant Replication minimizes the risk of unauthorized data access and ensures that data governance policies are strictly adhered to. This control is especially critical for organizations with stringent data security and privacy requirements, as it prevents the accidental sharing of sensitive information.

Impact:

Disabling Cross Tenant Replication may affect data availability and sharing across different Azure tenants. Ensure that this change aligns with your organizational data sharing and availability requirements."
  solution       : "Remediate from Azure Portal

Go to Storage Accounts.

For each storage account, under Data management, click Object replication.

Click Advanced settings.

Uncheck Allow cross-tenant replication.

Click OK.

Remediate from Azure CLI
Replace the information within <> with appropriate values:

az storage account update --name <storageAccountName> --resource-group <resourceGroupName> --allow-cross-tenant-replication false

Default Value:

For new storage accounts created after Dec 15, 2023 cross tenant replication is not enabled."
  reference      : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|13.4,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listStorageAccounts"
  json_transform : '.[]|.subscriptionId as $id| .value[]| .name as $name| "Subscription ID: \($id), Name: \($name), Cross Tenant Replication: \(.properties.allowCrossTenantReplication)"'
  expect         : "Cross Tenant Replication: false"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "4.17 Ensure that 'Allow Blob Anonymous Access' is set to 'Disabled'"
  info           : "The Azure Storage setting 'Allow Blob Anonymous Access' (aka 'allowBlobPublicAccess') controls whether anonymous access is allowed for blob data in a storage account. When this property is set to True, it enables public read access to blob data, which can be convenient for sharing data but may carry security risks. When set to False, it disallows public access to blob data, providing a more secure storage environment.

Rationale:

If 'Allow Blob Anonymous Access' is enabled, blobs can be accessed by adding the blob name to the URL to see the contents. An attacker can enumerate a blob using methods, such as brute force, and access them.

Exfiltration of data by brute force enumeration of items from a storage account may occur if this setting is set to 'Enabled'.

Impact:

Additional consideration may be required for exceptional circumstances where elements of a storage account require public accessibility. In these circumstances, it is highly recommended that all data stored in the public facing storage account be reviewed for sensitive or potentially compromising data, and that sensitive or compromising data is never stored in these storage accounts."
  solution       : "Remediate from Azure Portal

Go to Storage Accounts.

For each storage account, under Settings, click Configuration.

Set Allow Blob Anonymous Access to Disabled.

Click Save.

Remediate from Powershell
For every storage account in scope, run the following:

$storageAccount = Get-AzStorageAccount -ResourceGroupName '<yourResourceGroup>' -Name '<yourStorageAccountName>'
$storageAccount.AllowBlobPublicAccess = $false
Set-AzStorageAccount -InputObject $storageAccount

Default Value:

Disabled"
  reference      : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listStorageAccounts"
  json_transform : '.[]|.subscriptionId as $id| .value[]| .name as $name| "Subscription ID: \($id), Name: \($name), Allow Blob Anonymous Access: \(.properties.allowBlobPublicAccess)"'
  expect         : "Allow Blob Anonymous Access: false"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "5.1.1 Ensure that 'Auditing' is set to 'On'"
  info           : "Enable auditing on SQL Servers.

Rationale:

The Azure platform allows a SQL server to be created as a service. Enabling auditing at the server level ensures that all existing and newly created databases on the SQL server instance are audited. Auditing policy applied on the SQL database does not override auditing policy and settings applied on the particular SQL server where the database is hosted.

Auditing tracks database events and writes them to an audit log in the Azure storage account. It also helps to maintain regulatory compliance, understand database activity, and gain insight into discrepancies and anomalies that could indicate business concerns or suspected security violations."
  solution       : "Remediate from Azure Portal

Go to SQL servers

Select the SQL server instance

Under Security, click Auditing

Click the toggle next to Enable Azure SQL Auditing

Select an Audit log destination

Click Save

Remediate from PowerShell
Get the list of all SQL Servers

Get-AzSqlServer

For each Server, enable auditing and set the retention for at least 90 days.
Log Analytics Example

Set-AzSqlServerAudit -ResourceGroupName <resource group name> -ServerName <SQL Server name> -RetentionInDays <Number of Days to retain the audit logs, should be 90days minimum> -LogAnalyticsTargetState Enabled -WorkspaceResourceId '/subscriptions/<subscription ID>/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/<workspace name>

Event Hub Example

Set-AzSqlServerAudit -ResourceGroupName '<resource group name>' -ServerName '<SQL Server name>' -EventHubTargetState Enabled -EventHubName
    '<Event Hub name>' -EventHubAuthorizationRuleResourceId '<Event Hub Authorization Rule Resource ID>'

Blob Storage Example

Set-AzSqlServerAudit -ResourceGroupName '<resource group name>' -ServerName '<SQL Server name>' -BlobStorageTargetState Enabled
    -StorageAccountResourceId '/subscriptions/<subscription_ID>/resourceGroups/<Resource_Group>/providers/Microsoft.Stora
    ge/storageAccounts/<Storage Account name>'

Default Value:

By default, Enable Azure SQL Auditing is set to Off."
  reference      : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "getSQLServerBlobAuditingPolicies"
  json_transform : '.[]|.subscriptionId as $id|.resourceGroups[]| .name as $name|.SQLServers[]|.name as $sqlServerName|.SQLDBs[]|"Subscription ID: \($id), Resource Group: \($name), SQL Server: \($sqlServerName), DB Name \(.name), Auditing State: \(.value.properties.state)"'
  regex          : "Auditing State:"
  not_expect     : "Auditing State: Disabled"
</custom_item>

<custom_item>
  description    : "5.1.2 Ensure no Azure SQL Databases allow ingress from 0.0.0.0/0 (ANY IP)"
  info           : "Ensure that no SQL Databases allow ingress from 0.0.0.0/0 (ANY IP).

Rationale:

Azure SQL Server includes a firewall to block access to unauthorized connections. More granular IP addresses can be defined by referencing the range of addresses available from specific datacenters.

By default, for a SQL server, a Firewall exists with StartIp of 0.0.0.0 and EndIP of 0.0.0.0 allowing access to all the Azure services.

Additionally, a custom rule can be set up with StartIp of 0.0.0.0 and EndIP of 255.255.255.255 allowing access from ANY IP over the Internet.

In order to reduce the potential attack surface for a SQL server, firewall rules should be defined with more granular IP addresses by referencing the range of addresses available from specific datacenters.

If Allow Azure services and resources to access this server is 'Checked', this will allow resources outside of the subscription/tenant/organization boundary, within any region of Azure, to effectively bypass the defined SQL Server Network ACL on public endpoint. A malicious attacker can successfully launch a SQL server password bruteforce attack by creating a virtual machine in any Azure subscription/region, from outside of the subscription boundary where the SQL Server is residing.

Impact:

Disabling Allow Azure services and resources to access this server will break all connections to SQL server and Hosted Databases unless custom IP specific rules are added in Firewall Policy."
  solution       : "Remediate from Azure Portal

Go to SQL servers

For each SQL server

Under Security, click Networking

Uncheck Allow Azure services and resources to access this server

Set firewall rules to limit access to only authorized connections

Click Save

Remediate from Azure CLI
Disable default firewall rule Allow access to Azure services:

az sql server firewall-rule delete --resource-group <resource group> --server <sql server name> --name 'AllowAllWindowsAzureIps'

Remove a custom firewall rule:

az sql server firewall-rule delete --resource-group <resource group> --server <sql server name> --name <firewall rule name>

Create a firewall rule:

az sql server firewall-rule create --resource-group <resource group> --server <sql server name> --name <firewall rule name> --start-ip-address '<IP Address other than 0.0.0.0>' --end-ip-address '<IP Address other than 0.0.0.0 or 255.255.255.255>'

Update a firewall rule:

az sql server firewall-rule update --resource-group <resource group> --server <sql server name> --name <firewall rule name> --start-ip-address '<IP Address other than 0.0.0.0>' --end-ip-address '<IP Address other than 0.0.0.0 or 255.255.255.255>'

Remediate from PowerShell
Disable Default Firewall Rule Allow access to Azure services :

Remove-AzSqlServerFirewallRule -FirewallRuleName 'AllowAllWindowsAzureIps' -ResourceGroupName <resource group name> -ServerName <server name>

Remove a custom Firewall rule:

Remove-AzSqlServerFirewallRule -FirewallRuleName '<firewall rule name>' -ResourceGroupName <resource group name> -ServerName <server name>

Set the appropriate firewall rules:

Set-AzSqlServerFirewallRule -ResourceGroupName <resource group name> -ServerName <server name> -FirewallRuleName '<firewall rule name>' -StartIpAddress '<IP Address other than 0.0.0.0>' -EndIpAddress '<IP Address other than 0.0.0.0 or 255.255.255.255>'

Default Value:

By default, Allow access to Azure Services is set to NO."
  reference      : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listSQLServerFirewallRules"
  json_transform : '.[]|.subscriptionId as $id| .resourceGroups[]|.name as $name|.SQLServers[]|.name as $servername|.value[]|.name as $fwrname| "Subscription ID: \($id), Resource Group Name: \($name), Server Name: \($servername), Firewall Rule Name: \($fwrname), Start Address: \(.properties.startIpAddress), End IP Address: \(.properties.endIpAddress)"'
  not_expect     : '(Start Address: 0\.0\.0\.0|End IP Address: 0\.0\.0\.0|Firewall Rule Name: AllowAllWindowsAzureIps)'
</custom_item>

<custom_item>
  description    : "5.1.4 Ensure that Microsoft Entra authentication is Configured for SQL Servers"
  info           : "Use Microsoft Entra authentication for authentication with SQL Database to manage credentials in a single place.

Rationale:

Microsoft Entra authentication is a mechanism to connect to Microsoft Azure SQL Database and SQL Data Warehouse by using identities in the Microsoft Entra ID directory. With Entra ID authentication, identities of database users and other Microsoft services can be managed in one central location. Central ID management provides a single place to manage database users and simplifies permission management.

It provides an alternative to SQL Server authentication.

Helps stop the proliferation of user identities across database servers.

Allows password rotation in a single place.

Customers can manage database permissions using external (Entra ID) groups.

It can eliminate storing passwords by enabling integrated Windows authentication and other forms of authentication supported by Microsoft Entra.

Entra ID authentication uses contained database users to authenticate identities at the database level.

Entra ID supports token-based authentication for applications connecting to SQL Database.

Entra ID authentication supports ADFS (domain federation) or native user/password authentication for a local Active Directory without domain synchronization.

Entra ID supports connections from SQL Server Management Studio that use Active Directory Universal Authentication, which includes Multi-Factor Authentication (MFA). MFA includes strong authentication with a range of easy verification options - phone call, text message, smart cards with pin, or mobile app notification.

Impact:

This will create administrative overhead with user account and permission management. For further security on these administrative accounts, you may want to consider licensing which supports features like Multi Factor Authentication."
  solution       : "Remediate from Azure Portal

Go to SQL servers

For each SQL server, under Settings, click Microsoft Entra ID

Click Set admin

Select an admin

Click Select

Click Save

Remediate from Azure CLI

az ad user show --id

For each Server, set AD Admin

az sql server ad-admin create --resource-group <resource group name> --server <server name> --display-name <display name> --object-id <object id of user>

Remediate from PowerShell
For each Server, set Entra ID Admin

Set-AzSqlServerActiveDirectoryAdministrator -ResourceGroupName <resource group name> -ServerName <server name> -DisplayName '<Display name of AD account to set as DB administrator>'

Default Value:

Entra ID Authentication for SQL Database/Server is not enabled by default"
  reference      : "800-171|3.1.1,800-53|AC-2(1),800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CSCv7|16.2,CSCv8|5.6,CSF|PR.AC-1,CSF|PR.AC-4,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2(1),LEVEL|1A,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listSQLServerAdmins"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgname|.SQLServers[]| .name as $server | (.value|length > 0) as $admin | "Subscription ID: \($subid), Resource Group: \($rgname), SQL Server: \($server), AD Admin: \($admin)"'
  expect         : 'AD Admin: true'
  match_all      : YES
</custom_item>

<custom_item>
  description    : "5.1.5 Ensure that 'Data encryption' is set to 'On' on a SQL Database"
  info           : "Enable Transparent Data Encryption on every SQL server.

Rationale:

Azure SQL Database transparent data encryption helps protect against the threat of malicious activity by performing real-time encryption and decryption of the database, associated backups, and transaction log files at rest without requiring changes to the application."
  solution       : "Remediate from Azure Portal

Go to SQL databases

For each DB instance, under Security, click Data Encryption

Under Transparent data encryption, set Data encryption to On

Click Save

Remediate from Azure CLI
Use the below command to enable Transparent data encryption for SQL DB instance.

az sql db tde set --resource-group <resourceGroup> --server <dbServerName> --database <dbName> --status Enabled

Remediate from PowerShell
Use the below command to enable Transparent data encryption for SQL DB instance.

Set-AzSqlDatabaseTransparentDataEncryption -ResourceGroupName <Resource Group Name> -ServerName <SQL Server Name> -DatabaseName <Database Name> -State 'Enabled'

Note:

TDE cannot be used to encrypt the logical master database in SQL Database. The master database contains objects that are needed to perform the TDE operations on the user databases.

Azure Portal does not show master databases per SQL server. However, CLI/API responses will show master databases.

Default Value:

By default, Data encryption is set to On."
  reference      : "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|14.8,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.DS-01,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "getSQLDBTransparentDataEncryptions"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgname|.SQLServers[]|.name as $sname|.SQLDBs[]|.name as $sdbname|"Subscription ID: \($subid), Resource Group: \($rgname), SQLServer: \($sname), SQL DBs: \($sdbname), Data Encryption Status: \(if ($sdbname) == "master" then "Not Applicable" else .value.properties.status end)"'
  expect         : 'Data Encryption Status: (Enabled|Not Applicable)'
  match_all      : YES
</custom_item>

<custom_item>
  description    : "5.1.6 Ensure that 'Auditing' Retention is 'greater than 90 days'"
  info           : "SQL Server Audit Retention should be configured to be greater than 90 days.

Rationale:

Audit Logs can be used to check for anomalies and give insight into suspected breaches or misuse of information and access."
  solution       : "Remediate from Azure Portal

Go to SQL servers.

For each SQL server, under Security, click Auditing.

If Storage is checked, expand Advanced properties.

Set Retention (days) to a value greater than 90, or 0 for unlimited retention.

Click Save.

Remediate from PowerShell
For each Server, set retention policy to more than 90 days
Log Analytics Example

Set-AzSqlServerAudit -ResourceGroupName <resource group name> -ServerName <SQL Server name> -RetentionInDays <Number of Days to retain the audit logs, should be more than 90 days> -LogAnalyticsTargetState Enabled -WorkspaceResourceId '/subscriptions/<subscription ID>/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/<workspace name>

Event Hub Example

Set-AzSqlServerAudit -ResourceGroupName '<resource group name>' -ServerName '<SQL Server name>' -EventHubTargetState Enabled -EventHubName
    '<Event Hub name>' -EventHubAuthorizationRuleResourceId '<Event Hub Authorization Rule Resource ID>'

Blob Storage Example

Set-AzSqlServerAudit -ResourceGroupName '<resource group name>' -ServerName '<SQL Server name>' -BlobStorageTargetState Enabled
    -StorageAccountResourceId '/subscriptions/<subscription_ID>/resourceGroups/<Resource_Group>/providers/Microsoft.Stora
    ge/storageAccounts/<Storage Account name>'

Default Value:

By default, SQL Server audit storage is disabled."
  reference      : "800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|1A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "getSQLServerAuditingPolicies"
  json_transform : '.[]|.subscriptionId as $id|.resourceGroups[]| .name as $name|.SQLServers[]|.name as $sqlServerName|"Subscription ID: \($id), Resource Group: \($name), Server Name: \($sqlServerName), Retention: \(.value.properties.retentionDays)"'
  not_expect     : 'Retention: ([1-9]|[1-8][0-9]|90)$'
</custom_item>

<report type:"WARNING">
  description : "5.1.7 Ensure Public Network Access is Disabled"
  info        : "Disabling public network access restricts the service from accessing public networks.

Rationale:

A secure network architecture requires carefully constructed network segmentation. Public Network Access tends to be overly permissive and introduces unintended vectors for threat activity.

Impact:

Some architectural consideration may be necessary to ensure that required network connectivity is still made available. No additional cost or performance impact is required to deploy this recommendation.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "From Azure Portal

Go to SQL servers.

For each SQL server, under Security, click Networking.

Set Public network access to Disable.

Click Save.

Default Value:

By default, Azure SQL Server's Public network access is set to Disable."
  reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|ID.AM-03,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<custom_item>
  description    : "5.2.1 Ensure server parameter 'require_secure_transport' is set to 'ON' for PostgreSQL flexible server"
  info           : "Enable require_secure_transport on PostgreSQL flexible servers.

Rationale:

SSL connectivity helps to provide a new layer of security by connecting database server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between database server and client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and application."
  solution       : "Remediate from Azure Portal

Login to Azure Portal using https://portal.azure.com.

Go to Azure Database for PostgreSQL flexible servers.

For each database, under Settings, click Server parameters.

In the filter bar, type require_secure_transport.

Set the VALUE for require_secure_transport to ON.

Click Save.

Remediate from Azure CLI
Use the below command to enable require_secure_transport:

az postgres flexible-server parameter set --resource-group <resourceGroup> --server-name <serverName> --name require_secure_transport --value on

Remediate from PowerShell

Update-AzPostgreSqlFlexibleServerConfiguration -ResourceGroupName <resourceGroup> -ServerName <serverName> -Name require_secure_transport -Value on

Default Value:

By default, secure connectivity is enforced, but some application frameworks may not enable it during deployment."
  reference      : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listPostgreSQLFlexibleServerConfigurations"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgname|.PostgreSQLFlexibleServers[]|.name as $pgname|.value[]|select(.name == "require_secure_transport")|"Subscription ID: \($subid), Resource Group: \($rgname), PostgreSQLServer: \($pgname), require_secure_transport: \(.properties.value)"'
  expect         : 'require_secure_transport: on'
  match_all      : YES
</custom_item>

<custom_item>
  description    : "5.2.2 Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL flexible server"
  info           : "Enable log_checkpoints on PostgreSQL flexible servers.

Rationale:

Enabling log_checkpoints helps the PostgreSQL Database to Log each checkpoint, which in turn generates query and error logs. However, access to transaction logs is not supported. Query and error logs can be used to identify, troubleshoot, and repair configuration errors and sub-optimal performance."
  solution       : "Remediate from Azure Portal

From Azure Home select the Portal Menu.

Go to Azure Database for PostgreSQL flexible servers.

For each database, under Settings, click Server parameters.

In the filter bar, type log_checkpoints.

Set the VALUE for log_checkpoints to ON.

Click Save.

Remediate from Azure CLI
Use the below command to enable log_checkpoints:

az postgres flexible-server parameter set --resource-group <resourceGroup> --server-name <serverName> --name log_checkpoints --value on

Remediate from PowerShell

Update-AzPostgreSqlFlexibleServerConfiguration -ResourceGroupName <resourceGroup> -ServerName <serverName> -Name log_checkpoints -Value on

Default Value:

By default log_checkpoints is enabled (set to on)."
  reference      : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listPostgreSQLFlexibleServerConfigurations"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgname|.PostgreSQLFlexibleServers[]|.name as $pgname|.value[]|select(.name == "log_checkpoints")|"Subscription ID: \($subid), Resource Group: \($rgname), PostgreSQLServer: \($pgname), log_checkpoints: \(.properties.value)"'
  expect         : 'log_checkpoints: on'
  match_all      : YES
</custom_item>

<custom_item>
  description    : "5.2.3 Ensure server parameter 'connection_throttle.enable' is set to 'ON' for PostgreSQL flexible server"
  info           : "Enable connection throttling on PostgreSQL flexible servers.

Rationale:

Enabling connection throttling helps the PostgreSQL Database to Set the verbosity of logged messages. This in turn generates query and error logs with respect to concurrent connections that could lead to a successful Denial of Service (DoS) attack by exhausting connection resources. A system can also fail or be degraded by an overload of legitimate users. Query and error logs can be used to identify, troubleshoot, and repair configuration errors and sub-optimal performance."
  solution       : "Remediate from Azure Portal

Login to Azure Portal using https://portal.azure.com.

Go to Azure Database for PostgreSQL flexible servers.

For each database, under Settings, click Server parameters.

In the filter bar, type connection_throttle.enable.

Set connection_throttle.enable to ON.

Click Save.

Remediate from Azure CLI
Use the below command to enable connection_throttle.enable:

az postgres flexible-server parameter set --resource-group <resourceGroup> --server-name <serverName> --name connection_throttle.enable --value on

Remediate from PowerShell
Use the below command to update connection_throttling configuration.

Update-AzPostgreSqlFlexibleServerConfiguration -ResourceGroupName <resourceGroup> -ServerName <serverName> -Name connection_throttle.enable -Value on

Default Value:

By default, connection_throttle.enable is disabled (set to off)."
  reference      : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listPostgreSQLFlexibleServerConfigurations"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgname|.PostgreSQLFlexibleServers[]|.name as $pgname|.value[]|select(.name == "connection_throttle.enable")|"Subscription ID: \($subid), Resource Group: \($rgname), PostgreSQLServer: \($pgname), connection_throttle.enable: \(.properties.value)"'
  expect         : 'connection_throttle\.enable: on$'
  match_all      : YES
</custom_item>

<custom_item>
  description    : "5.2.4 Ensure server parameter 'logfiles.retention_days' is greater than 3 days for PostgreSQL flexible server"
  info           : "Ensure logfiles.retention_days on PostgreSQL flexible servers is set to an appropriate value.

Rationale:

Configuring logfiles.retention_days determines the duration in days that Azure Database for PostgreSQL retains log files. Query and error logs can be used to identify, troubleshoot, and repair configuration errors and sub-optimal performance.

Impact:

Configuring this setting will result in logs being retained for the specified number of days. If this is configured on a high traffic server, the log may grow quickly to occupy a large amount of disk space. In this case you may want to set this to a lower number."
  solution       : "Remediate from Azure Portal

From Azure Home select the Portal Menu.

Go to Azure Database for PostgreSQL flexible servers.

For each database, under Settings, click Server parameters.

In the filter bar, type logfiles.retention_days.

Input a value between 4 and 7 (inclusive).

Click Save.

Remediate from Azure CLI
Use the below command to update logfiles.retention_days configuration:

az postgres flexible-server parameter set --resource-group <resourceGroup> --server-name <serverName> --name logfiles.retention_days --value <4-7>

Remediate from Powershell
Use the below command to update logfiles.retention_days configuration:

Update-AzPostgreSqlFlexibleServerConfiguration -ResourceGroupName <resourceGroup> -ServerName <serverName> -Name logfiles.retention_days -Value <4-7>

Default Value:

By default logfiles.retention_days is set to 3."
  reference      : "800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|1A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listPostgreSQLFlexibleServerConfigurations"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgname|.PostgreSQLFlexibleServers[]|.name as $pgname|.value[]|select(.name == "logfiles.retention_days")|"Subscription ID: \($subid), Resource Group: \($rgname), PostgreSQLServer: \($pgname), logfiles.retention_days: \(.properties.value)"'
  expect         : 'logfiles\.retention_days: [4-7]$'
  match_all      : YES
</custom_item>

<custom_item>
  description    : "5.2.5 Ensure 'Allow public access from any Azure service within Azure to this server' for PostgreSQL flexible server is disabled"
  info           : "Disable access from Azure services to PostgreSQL flexible server.

Rationale:

If access from Azure services is enabled, the server's firewall will accept connections from all Azure resources, including resources not in your subscription. This is usually not a desired configuration. Instead, set up firewall rules to allow access from specific network ranges or VNET rules to allow access from specific virtual networks."
  solution       : "Remediate from Azure Portal

Login to Azure Portal using https://portal.azure.com.

Go to Azure Database for PostgreSQL flexible servers.

For each database, under Settings, click Networking.

Under Firewall rules, uncheck Allow public access from any Azure service within Azure to this server.

Click Save.

Remediate from Azure CLI
Using the firewall rule name from the Audit from Azure CLI steps, use the below command to delete the AllowAllAzureServicesAndResourcesWithinAzureIps rule for PostgreSQL flexible server:

az postgres flexible-server firewall-rule delete --resource-group <resourceGroup> --name <serverName> --rule-name <ruleName>

Type y and press enter to confirm.
Remediate from PowerShell
Using the firewall rule name from the Audit from PowerShell steps, use the below command to delete the AllowAllAzureServicesAndResourcesWithinAzureIps rule for PostgreSQL flexible server:

Remove-AzPostgreSqlFlexibleServerFirewallRule -ResourceGroupName <resourceGroup> -ServerName <serverName> -Name <ruleName>

Default Value:

The Azure Postgres firewall is set to block all access by default."
  reference      : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|ID.AM-03,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listSQLServerFirewallRules"
  json_transform : '.[]|.subscriptionId as $id| .resourceGroups[]|.name as $name|.PostgreSQLFlexibleServers[]|.name as $servername|.value[]|.name as $fwrname| "Subscription ID: \($id), Resource Group Name: \($name), Server Name: \($servername), Firewall Rule Name: \($fwrname), Start Address: \(.properties.startIpAddress), End IP Address: \(.properties.endIpAddress)"'
  not_expect     : '(Start Address: 0\.0\.0\.0|End IP Address: 0\.0\.0\.0|Firewall Rule Name: AllowAllAzureServicesAndResourcesWithinAzureIps)'
</custom_item>

<custom_item>
  description    : "5.2.6 [LEGACY] Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL single server"
  info           : "Enable log_connections on PostgreSQL single servers.

NOTE: This recommendation currently only applies to Single Server, not Flexible Server. See additional information below for details about the planned retirement of Azure PostgreSQL Single Server.

Rationale:

Enabling log_connections helps PostgreSQL Database to log attempted connection to the server, as well as successful completion of client authentication. Log data can be used to identify, troubleshoot, and repair configuration errors and suboptimal performance."
  solution       : "Remediate from Azure Portal

Login to Azure Portal using https://portal.azure.com.

Go to Azure Database for PostgreSQL servers.

For each database, under Settings, click Server parameters.

In the filter bar, type log_connections.

Set log_connections to ON.

Click Save.

Remediate from Azure CLI
Use the below command to update log_connections configuration.

az postgres server configuration set --resource-group <resourceGroupName> --server-name <serverName> --name log_connections --value on

Remediate from PowerShell
Use the below command to update log_connections configuration.

Update-AzPostgreSqlConfiguration -ResourceGroupName <ResourceGroupName> -ServerName <ServerName> -Name log_connections -Value on

Default Value:

By default log_connections is enabled (set to on)."
  reference      : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listPostgreSQLServerConfigurations"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgname|.PostgreSQLServers[]|.name as $pgname|.value[]|select(.name == "log_connections")|"Subscription ID: \($subid), Resource Group: \($rgname), PostgreSQLServer: \($pgname), log_connections: \(.properties.value)"'
  expect         : 'log_connections: on'
  match_all      : YES
</custom_item>

<custom_item>
  description    : "5.2.7 [LEGACY] Ensure server parameter 'log_disconnections' is set to 'ON' for PostgreSQL single server"
  info           : "Enable log_disconnections on PostgreSQL Servers.

NOTE: This recommendation currently only applies to Single Server, not Flexible Server. See additional information below for details about the planned retirement of Azure PostgreSQL Single Server.

Rationale:

Enabling log_disconnections helps PostgreSQL Database to Logs end of a session, including duration, which in turn generates query and error logs. Query and error logs can be used to identify, troubleshoot, and repair configuration errors and sub-optimal performance.

Impact:

Enabling this setting will enable a log of all disconnections. If this is enabled for a high traffic server, the log may grow exponentially."
  solution       : "Remediate from Azure Portal

From Azure Home select the Portal Menu.

Go to Azure Database for PostgreSQL servers.

For each database, under Settings, click Server parameters.

Search for log_disconnections.

Set log_disconnections to ON.

Click Save.

Remediate from Azure CLI
Use the below command to update log_disconnections configuration.

az postgres server configuration set --resource-group <resourceGroupName> --server-name <serverName> --name log_disconnections --value on

Remediate from PowerShell
Use the below command to update log_disconnections configuration.

Update-AzPostgreSqlConfiguration -ResourceGroupName <ResourceGroupName> -ServerName <ServerName> -Name log_disconnections -Value on

Default Value:

By default log_disconnections is disabled (set to off)."
  reference      : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listPostgreSQLServerConfigurations"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgname|.PostgreSQLServers[]|.name as $pgname|.value[]|select(.name == "log_disconnections")|"Subscription ID: \($subid), Resource Group: \($rgname), PostgreSQLServer: \($pgname), log_disconnections: \(.properties.value)"'
  expect         : 'log_disconnections: on'
  match_all      : YES
</custom_item>

<custom_item>
  description    : "5.2.8 [LEGACY] Ensure 'Infrastructure double encryption' for PostgreSQL single server is 'Enabled'"
  info           : "Azure Database for PostgreSQL servers should be created with 'infrastructure double encryption' enabled.

NOTE: This recommendation currently only applies to Single Server, not Flexible Server. See additional information below for details about the planned retirement of Azure PostgreSQL Single Server.

Rationale:

If Double Encryption is enabled, another layer of encryption is implemented at the hardware level before the storage or network level. Information will be encrypted before it is even accessed, preventing both interception of data in motion if the network layer encryption is broken and data at rest in system resources such as memory or processor cache. Encryption will also be in place for any backups taken of the database, so the key will secure access the data in all forms. For the most secure implementation of key based encryption, it is recommended to use a Customer Managed asymmetric RSA 2048 Key in Azure Key Vault.

Impact:

The read and write speeds to the database will be impacted if both default encryption and Infrastructure Encryption are checked, as a secondary form of encryption requires more resource overhead for the cryptography of information. This cost is justified for information security. Customer managed keys are recommended for the most secure implementation, leading to overhead of key management. The key will also need to be backed up in a secure location, as loss of the key will mean loss of the information in the database."
  solution       : "It is not possible to enable 'infrastructure double encryption' on an existing Azure Database for PostgreSQL server.
The remediation steps detail the creation of a new Azure Database for PostgreSQL server with 'infrastructure double encryption' enabled.
Remediate from Azure Portal

Go through the normal process of database creation.

On step 2 titled Additional settings ensure that Infrastructure double encryption enabled is checked.

Acknowledge that you understand this will impact database performance.

Finish database creation as normal.

Remediate from Azure CLI

az postgres server create --resource-group <resourcegroup> --name <servername>  --location <location> --admin-user <adminusername> --admin-password <server_admin_password> --sku-name GP_Gen4_2 --version 11 --infrastructure-encryption Enabled

Default Value:

By Default, Double Encryption is disabled."
  reference      : "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|14.8,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.DS-01,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listPostgreSQLServersByResourceGroup"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgname|.PostgreSQLServers[] | "Subscription ID: \($subid), Resource Group: \($rgname), PostgreSQLServer: \(.name), Infrastructure Encryption: \(.properties.infrastructureEncryption)"'
  expect         : 'Infrastructure Encryption: Enabled'
  match_all      : YES
</custom_item>

<custom_item>
  description    : "5.3.1 Ensure server parameter 'require_secure_transport' is set to 'ON' for MySQL flexible server"
  info           : "Enable require_secure_transport on MySQL flexible servers.

Rationale:

SSL connectivity helps to provide a new layer of security by connecting database server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between database server and client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and application."
  solution       : "Remediate from Azure Portal

Login to Azure Portal using https://portal.azure.com.

Go to Azure Database for MySQL flexible servers.

For each database, under Settings, click Server parameters.

In the filter bar, type require_secure_transport.

Set the VALUE for require_secure_transport to ON.

Click Save.

Remediate from Azure CLI
Use the below command to enable require_secure_transport:

az mysql flexible-server parameter set --resource-group <resourceGroup> --server-name <serverName> --name require_secure_transport --value on

Remediate from PowerShell
Use the below command to enable require_secure_transport:

Update-AzMySqlFlexibleServerConfiguration -ResourceGroupName <resourceGroup> -ServerName <serverName> -Name require_secure_transport -Value on

Default Value:

Azure Database for MySQL when provisioned through the Azure portal or CLI will require SSL connections by default."
  reference      : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listMYSQLFlexibleServersConfigurations"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgname | .MYSQLFlexibleServers[] | .name as $name | .value[] | select(.name == "require_secure_transport") |"Subscription ID: \($subid), Resource Group: \($rgname), MySQLServer: \($name), Require Secure Transport: \(.properties.value)"'
  expect         : "Require Secure Transport: ON"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "5.3.2 Ensure server parameter 'tls_version' is set to 'TLSv1.2' (or higher) for MySQL flexible server"
  info           : "Ensure tls_version on MySQL flexible servers is set to use TLS version 1.2 or higher.

Rationale:

TLS connectivity helps to provide a new layer of security by connecting database server to client applications using Transport Layer Security (TLS). Enforcing TLS connections between database server and client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and application."
  solution       : "Remediate from Azure Portal

Login to Azure Portal using https://portal.azure.com.

Go to Azure Database for MySQL flexible servers.

For each database, under Settings, click Server parameters.

In the filter bar, type tls_version.

Click on the VALUE dropdown next to tls_version, and check TLSv1.2 (or higher).

Uncheck anything lower than TLSv1.2.

Click Save.

Remediate from Azure CLI
Use the below command to update MySQL flexible servers to use TLS version 1.2:

az mysql flexible-server parameter set --resource-group <resourceGroup> --server-name <serverName> --name tls_version --value TLSv1.2

Remediate from PowerShell
Use the below command to update MySQL flexible servers to use TLS version 1.2:

Update-AzMySqlFlexibleServerConfiguration -ResourceGroupName <resourceGroup> -ServerName <serverName> -Name tls_version -Value TLSv1.2

Default Value:

By default, TLS is set to v1.2 for MySQL Flexible servers."
  reference      : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listMYSQLFlexibleServersConfigurations"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgname | .MYSQLFlexibleServers[] | .name as $name | .value[] | select(.name == "tls_version") |"Subscription ID: \($subid), Resource Group: \($rgname), MySQLServer: \($name), TLS Version: \(.properties.value)"'
  expect         : "TLS Version: (TLSv1.2|TLSv1.2,TLSv1.3|TLSv1.3)$"
  match_all      : YES
</custom_item>

<report type:"WARNING">
  description : "5.4.3 Use Entra ID Client Authentication and Azure RBAC where possible"
  info        : "Cosmos DB can use tokens or Entra ID for client authentication which in turn will use Azure RBAC for authorization. Using Entra ID is significantly more secure because Entra ID handles the credentials and allows for MFA and centralized management, and the Azure RBAC is better integrated with the rest of Azure.

Rationale:

Entra ID client authentication is considerably more secure than token-based authentication because the tokens must be persistent at the client. Entra ID does not require this.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Map all the resources that currently have access to the Azure Cosmos DB account with keys or access tokens.
Create an Entra ID identity for each of these resources:

For Azure resources, you can create a managed identity. You may choose between system-assigned and user-assigned managed identities.

For non-Azure resources, create an Entra ID identity. Grant each Entra ID identity the minimum permission it requires. When possible, we recommend you use one of the 2 built-in role definitions: Cosmos DB Built-in Data Reader or Cosmos DB Built-in Data Contributor. Validate that the new resource is functioning correctly. After new permissions are granted to identities, it may take a few hours until they propagate. When all resources are working correctly with the new identities, continue to the next step.

Remediate from PowerShell

$cosmosdbname = '<your-cosmos-db-account-name>'
$resourcegroup = '<your-resource-group-name>'
az cosmosdb show --name $cosmosdbname --resource-group $resourcegroup | ConvertFrom-Json
az resource update --ids $cosmosdb.id --set properties.disableLocalAuth=true --latest-include-preview

Default Value:

The default is to use tokens/keys for client authentication."
  reference   : "800-171|3.1.1,800-53|AC-2(1),800-53|AC-3,800-53r5|AC-2(1),800-53r5|AC-3,CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|16.2,CSCv8|6.7,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-2(1),ITSG-33|AC-3,LEVEL|1M,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|31.1"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<report type:"WARNING">
  description : "6.1.1 Ensure that a 'Diagnostic Setting' exists for Subscription Activity Logs"
  info        : "Enable Diagnostic settings for exporting activity logs. Diagnostic settings are available for each individual resource within a subscription. Settings should be configured for all appropriate resources for your environment.

Rationale:

A diagnostic setting controls how a diagnostic log is exported. By default, logs are retained only for 90 days. Diagnostic settings should be defined so that logs can be exported and stored for a longer duration in order to analyze security activities within an Azure subscription.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Remediate from Azure Portal
To enable Diagnostic Settings on a Subscription:

Go to Monitor

Click on Activity log

Click on Export Activity Logs

Click + Add diagnostic setting

Enter a Diagnostic setting name

Select Categories for the diagnostic setting

Select the appropriate Destination details (this may be Log Analytics, Storage Account, Event Hub, or Partner solution)

Click Save

To enable Diagnostic Settings on a specific resource:

Go to Monitoring

Click Diagnostic settings

Select Add diagnostic setting

Enter a Diagnostic setting name

Select the appropriate log, metric, and destination (this may be Log Analytics, Storage Account, Event Hub, or Partner solution)

Click Save

Repeat these step for all resources as needed.

Remediate from Azure CLI
To configure Diagnostic Settings on a Subscription:

az monitor diagnostic-settings subscription create --subscription <subscription id> --name <diagnostic settings name> --location <location> <[--event-hub <event hub ID> --event-hub-auth-rule <event hub auth rule ID>] [--storage-account <storage account ID>] [--workspace <log analytics workspace ID>] --logs '<JSON encoded categories>' (e.g. [{category:Security,enabled:true},{category:Administrative,enabled:true},{category:Alert,enabled:true},{category:Policy,enabled:true}])

To configure Diagnostic Settings on a specific resource:

az monitor diagnostic-settings create --subscription <subscription ID> --resource <resource ID> --name <diagnostic settings name> <[--event-hub <event hub ID> --event-hub-rule <event hub auth rule ID>] [--storage-account <storage account ID>] [--workspace <log analytics workspace ID>] --logs <resource specific JSON encoded log settings> --metrics <metric settings (shorthand|json-file|yaml-file)>

Remediate from PowerShell
To configure Diagnostic Settings on a subscription:

$logCategories = @();
$logCategories += New-AzDiagnosticSettingSubscriptionLogSettingsObject -Category Administrative -Enabled $true
$logCategories += New-AzDiagnosticSettingSubscriptionLogSettingsObject -Category Security -Enabled $true
$logCategories += New-AzDiagnosticSettingSubscriptionLogSettingsObject -Category ServiceHealth -Enabled $true
$logCategories += New-AzDiagnosticSettingSubscriptionLogSettingsObject -Category Alert -Enabled $true
$logCategories += New-AzDiagnosticSettingSubscriptionLogSettingsObject -Category Recommendation -Enabled $true
$logCategories += New-AzDiagnosticSettingSubscriptionLogSettingsObject -Category Policy -Enabled $true
$logCategories += New-AzDiagnosticSettingSubscriptionLogSettingsObject -Category Autoscale -Enabled $true
$logCategories += New-AzDiagnosticSettingSubscriptionLogSettingsObject -Category ResourceHealth -Enabled $true

New-AzSubscriptionDiagnosticSetting -SubscriptionId <subscription ID> -Name <Diagnostic settings name> <[-EventHubAuthorizationRule <event hub auth rule ID> -EventHubName <event hub name>] [-StorageAccountId <storage account ID>] [-WorkSpaceId <log analytics workspace ID>] [-MarketplacePartner ID <full ARM Marketplace resource ID>]> -Log $logCategories

To configure Diagnostic Settings on a specific resource:

$logCategories = @()
$logCategories +=  New-AzDiagnosticSettingLogSettingsObject -Category <resource specific log category> -Enabled $true

Repeat command and variable assignment for each Log category specific to the resource where this Diagnostic Setting will get configured.

$metricCategories = @()
$metricCategories += New-AzDiagnosticSettingMetricSettingsObject -Enabled $true [-Category <resource specific metric category | AllMetrics>] [-RetentionPolicyDay <Integer>] [-RetentionPolicyEnabled $true]

Repeat command and variable assignment for each Metric category or use the 'AllMetrics' category.

New-AzDiagnosticSetting -ResourceId <resource ID> -Name <Diagnostic settings name> -Log $logCategories -Metric $metricCategories [-EventHubAuthorizationRuleId <event hub auth rule ID> -EventHubName <event hub name>] [-StorageAccountId <storage account ID>] [-WorkspaceId <log analytics workspace ID>] [-MarketplacePartnerId <full ARM marketplace resource ID>]>

Default Value:

By default, diagnostic setting is not set."
  reference   : "800-171|3.3.1,800-171|3.3.5,800-53|AU-6(3),800-53r5|AU-6(3),CN-L3|7.1.3.3(d),CSCv7|6.5,CSCv8|8.9,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.DP-4,CSF|PR.PT-1,CSF|RS.AN-1,CSF|RS.CO-2,CSF2.0|DE.AE-02,CSF2.0|DE.AE-03,CSF2.0|PR.PS-04,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-6(3),LEVEL|1M,NESA|M5.2.5,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<custom_item>
  description    : "6.1.2 Ensure Diagnostic Setting captures appropriate categories"
  info           : "Prerequisite: A Diagnostic Setting must exist. If a Diagnostic Setting does not exist, the navigation and options within this recommendation will not be available. Please review the recommendation at the beginning of this subsection titled: 'Ensure that a 'Diagnostic Setting' exists.'

The diagnostic setting should be configured to log the appropriate activities from the control/management plane.

Rationale:

A diagnostic setting controls how the diagnostic log is exported. Capturing the diagnostic setting categories for appropriate control/management plane activities allows proper alerting."
  solution       : "Remediate from Azure Portal

Go to Monitor.

Click Activity log.

Click on Export Activity Logs.

Select the Subscription from the drop down menu.

Click Edit setting next to a diagnostic setting.

Check the following categories: Administrative, Alert, Policy, and Security.

Choose the destination details according to your organization's needs.

Click Save.

Remediate from Azure CLI

az monitor diagnostic-settings subscription create --subscription <subscription id> --name <diagnostic settings name> --location <location> <[--event-hub <event hub ID> --event-hub-auth-rule <event hub auth rule ID>] [--storage-account <storage account ID>] [--workspace <log analytics workspace ID>] --logs '[{category:Security,enabled:true},{category:Administrative,enabled:true},{category:Alert,enabled:true},{category:Policy,enabled:true}]'

Remediate from PowerShell

$logCategories = @();
$logCategories += New-AzDiagnosticSettingSubscriptionLogSettingsObject -Category Administrative -Enabled $true
$logCategories += New-AzDiagnosticSettingSubscriptionLogSettingsObject -Category Security -Enabled $true
$logCategories += New-AzDiagnosticSettingSubscriptionLogSettingsObject -Category Alert -Enabled $true
$logCategories += New-AzDiagnosticSettingSubscriptionLogSettingsObject -Category Policy -Enabled $true

New-AzSubscriptionDiagnosticSetting -SubscriptionId <subscription ID> -Name <Diagnostic settings name> <[-EventHubAuthorizationRule <event hub auth rule ID> -EventHubName <event hub name>] [-StorageAccountId <storage account ID>] [-WorkSpaceId <log analytics workspace ID>] [-MarketplacePartner ID <full ARM Marketplace resource ID>]> -Log $logCategories

Default Value:

When the diagnostic setting is created using Azure Portal, by default no categories are selected."
  reference      : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listDiagnosticSetting"
  json_transform : '.[] | .subscriptionId as $id | if ((.value | length) == 0) then "Subscription ID: \($id) - no diagnostic settings" else ( .value[] | .name as $name | "Subscription ID: \($id), Diagnostic Settings: \($name), Administrative: \(.properties.logs[] | select(.category == "Administrative").enabled ), Alert: \(.properties.logs[] | select(.category == "Alert").enabled ), Policy: \(.properties.logs[] | select(.category == "Policy").enabled ), Security: \(.properties.logs[] | select(.category == "Security").enabled )" ) end'
  regex          : "Subscription ID:"
  expect         : "Administrative: true, Alert: true, Policy: true, Security: true"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "6.1.4 Ensure that logging for Azure Key Vault is 'Enabled'"
  info           : "Enable AuditEvent logging for key vault instances to ensure interactions with key vaults are logged and available.

Rationale:

Monitoring how and when key vaults are accessed, and by whom, enables an audit trail of interactions with confidential information, keys, and certificates managed by Azure Key Vault. Enabling logging for Key Vault saves information in a user provided destination of either an Azure storage account or Log Analytics workspace. The same destination can be used for collecting logs for multiple Key Vaults."
  solution       : "Remediate from Azure Portal

Go to Key vaults.

Select a Key vault.

Under Monitoring, select Diagnostic settings.

Click Edit setting to update an existing diagnostic setting, or Add diagnostic setting to create a new one.

If creating a new diagnostic setting, provide a name.

Configure an appropriate destination.

Under Category groups, check audit and allLogs.

Click Save.

Remediate from Azure CLI
To update an existing Diagnostic Settings

az monitor diagnostic-settings update --name '<diagnostic_setting_name>' --resource <key_vault_id>

To create a new Diagnostic Settings

az monitor diagnostic-settings create --name '<diagnostic_setting_name>' --resource <key_vault_id> --logs '[{category:audit,enabled:true},{category:allLogs,enabled:true}]' --metrics '[{category:AllMetrics,enabled:true}]' <[--event-hub <event_hub_ID> --event-hub-rule <event_hub_auth_rule_ID> | --storage-account <storage_account_ID> |--workspace <log_analytics_workspace_ID> | --marketplace-partner-id <solution_resource_ID>]>

Remediate from PowerShell
Create the Log settings object

$logSettings = @()
$logSettings += New-AzDiagnosticSettingLogSettingsObject -Enabled $true -Category audit
$logSettings += New-AzDiagnosticSettingLogSettingsObject -Enabled $true -Category allLogs

Create the Metric settings object

$metricSettings = @()
$metricSettings += New-AzDiagnosticSettingMetricSettingsObject -Enabled $true -Category AllMetrics

Create the Diagnostic Settings for each Key Vault

New-AzDiagnosticSetting -Name '<diagnostic_setting_name>' -ResourceId <key_vault_id> -Log $logSettings -Metric $metricSettings [-StorageAccountId <storage_account_ID> | -EventHubName <event_hub_name> -EventHubAuthorizationRuleId <event_hub_auth_rule_ID> | -WorkSpaceId <log analytics workspace ID> | -MarketPlacePartnerId <full resource ID for third-party solution>]

Default Value:

By default, Diagnostic AuditEvent logging is not enabled for Key Vault instances."
  reference      : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listVaultDiagnosticSetting"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgn|.vaults[] | (if (.value | length) > 0 then [.value[].properties.logs[]] else [] end) as $logs | (if ($logs | length) > 0 then ($logs[] | select(.categoryGroup == "audit" and .enabled == true) | length > 0) else false end) as $audit | (if ($logs | length) > 0 then ($logs[] | select(.categoryGroup == "allLogs" and .enabled == true) | length > 0) else false end) as $allLogs |"Subscription ID: \($subid), Resource Group: \($rgn), Vault Name: \(.name), Audit: \($audit), All Logs: \($allLogs)"'
  expect         : "Audit: true, All Logs: true"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "6.2.1 Ensure that Activity Log Alert exists for Create Policy Assignment"
  info           : "Create an activity log alert for the Create Policy Assignment event.

Rationale:

Monitoring for create policy assignment events gives insight into changes done in 'Azure policy - assignments' and can reduce the time it takes to detect unsolicited changes."
  solution       : "Remediate from Azure Portal

Navigate to the Monitor blade.

Select Alerts.

Select Create.

Select Alert rule.

Choose a subscription.

Select Apply.

Select the Condition tab.

Click See all signals.

Select Create policy assignment (Policy assignment).

Click Apply.

Select the Actions tab.

Click Select action groups to select an existing action group, or Create action group to create a new action group.

Follow the prompts to choose or create an action group.

Select the Details tab.

Select a Resource group, provide an Alert rule name and an optional Alert rule description.

Click Review + create.

Click Create.

Remediate from Azure CLI

az monitor activity-log alert create --resource-group '<resource group name>' --condition category=Administrative and operationName=Microsoft.Authorization/policyAssignments/write and level=<verbose | information | warning | error | critical> --scope '/subscriptions/<subscription ID>' --name '<activity log rule name>' --subscription <subscription ID> --action-group <action group ID>

Remediate from PowerShell
Create the conditions object.

$conditions = @()
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Administrative -Field category
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Microsoft.Authorization/policyAssignments/write -Field operationName
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Verbose -Field level

Get the Action Group information and store it in a variable, then create a new Action object.

$actionGroup = Get-AzActionGroup -ResourceGroupName <resource group name> -Name <action group name>
$actionObject = New-AzActivityLogAlertActionGroupObject -Id $actionGroup.Id

Create the Scope variable.

$scope = '/subscriptions/<subscription ID>'

Create the Activity Log Alert Rule for Microsoft.Authorization/policyAssignments/write

New-AzActivityLogAlert -Name '<activity alert rule name>' -ResourceGroupName '<resource group name>' -Condition $conditions -Scope $scope -Location global -Action $actionObject -Subscription <subscription ID> -Enabled $true

Default Value:

By default, no monitoring alerts are created."
  reference      : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listActivityLogAlertBySubscription"
  json_transform : '.[] | .subscriptionId as $id | [ .value[] | .name as $name | select(.properties.enabled == true) | .properties.condition.allOf[] | select(.equals == "Microsoft.Authorization/policyAssignments/write") | $name ] as $names | "Subscription ID: \($id), Names: \($names)"'
  regex          : "Subscription ID:"
  expect         : "Names: \[.+\]"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "6.2.2 Ensure that Activity Log Alert exists for Delete Policy Assignment"
  info           : "Create an activity log alert for the Delete Policy Assignment event.

Rationale:

Monitoring for delete policy assignment events gives insight into changes done in 'azure policy - assignments' and can reduce the time it takes to detect unsolicited changes."
  solution       : "Remediate from Azure Portal

Navigate to the Monitor blade.

Select Alerts.

Select Create.

Select Alert rule.

Choose a subscription.

Select Apply.

Select the Condition tab.

Click See all signals.

Select Delete policy assignment (Policy assignment).

Click Apply.

Select the Actions tab.

Click Select action groups to select an existing action group, or Create action group to create a new action group.

Follow the prompts to choose or create an action group.

Select the Details tab.

Select a Resource group, provide an Alert rule name and an optional Alert rule description.

Click Review + create.

Click Create.

Remediate from Azure CLI

az monitor activity-log alert create --resource-group '<resource group name>' --condition category=Administrative and operationName=Microsoft.Authorization/policyAssignments/delete and level=<verbose | information | warning | error | critical> --scope '/subscriptions/<subscription ID>' --name '<activity log rule name>' --subscription <subscription id> --action-group <action group ID>

Remediate from PowerShell
Create the conditions object

$conditions = @()
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Administrative -Field category
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Microsoft.Authorization/policyAssignments/delete -Field operationName
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Verbose -Field level

Retrieve the Action Group information and store in a variable, then create the Action object.

$actionGroup = Get-AzActionGroup -ResourceGroupName <resource group name> -Name <action group name>
$actionObject = New-AzActivityLogAlertActionGroupObject -Id $actionGroup.Id

Create the Scope variable.

$scope = '/subscriptions/<subscription id>'

Create the Activity Log Alert Rule for Microsoft.Authorization/policyAssignments/delete.

New-AzActivityLogAlert -Name '<activity log alert rule name>' -ResourceGroupName '<resource group name>' -Condition $conditions -Scope $scope -Location global -Action $actionObject -Subscription <subscription ID> -Enabled $true

Default Value:

By default, no monitoring alerts are created."
  reference      : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listActivityLogAlertBySubscription"
  json_transform : '.[] | .subscriptionId as $id | [ .value[] | .name as $name | select(.properties.enabled == true) | .properties.condition.allOf[] | select(.equals == "Microsoft.Authorization/policyAssignments/delete") | $name ] as $names | "Subscription ID: \($id), Names: \($names)"'
  regex          : "Subscription ID:"
  expect         : "Names: \[.+\]"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "6.2.3 Ensure that Activity Log Alert exists for Create or Update Network Security Group"
  info           : "Create an Activity Log Alert for the Create or Update Network Security Group event.

Rationale:

Monitoring for Create or Update Network Security Group events gives insight into network access changes and may reduce the time it takes to detect suspicious activity."
  solution       : "Remediate from Azure Portal

Navigate to the Monitor blade.

Select Alerts.

Select Create.

Select Alert rule.

Choose a subscription.

Select Apply.

Select the Condition tab.

Click See all signals.

Select Create or Update Network Security Group (Network Security Group).

Click Apply.

Select the Actions tab.

Click Select action groups to select an existing action group, or Create action group to create a new action group.

Follow the prompts to choose or create an action group.

Select the Details tab.

Select a Resource group, provide an Alert rule name and an optional Alert rule description.

Click Review + create.

Click Create.

Remediate from Azure CLI

az monitor activity-log alert create --resource-group '<resource group name>' --condition category=Administrative and operationName=Microsoft.Network/networkSecurityGroups/write and level=verbose --scope '/subscriptions/<subscription ID>' --name '<activity log rule name>' --subscription <subscription id> --action-group <action group ID>

Remediate from PowerShell
Create the Conditions object.

$conditions = @()
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Administrative -Field category
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Microsoft.Network/networkSecurityGroups/write -Field operationName
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Verbose -Field level

Retrieve the Action Group information and store in a variable, then create the Actions object.

$actionGroup = Get-AzActionGroup -ResourceGroupName <resource group name> -Name <action group name>
$actionObject = New-AzActivityLogAlertActionGroupObject -Id $actionGroup.Id

Create the Scope object

$scope = '/subscriptions/<subscription id>'

Create the Activity Log Alert Rule for Microsoft.Network/networkSecurityGroups/write

New-AzActivityLogAlert -Name '<activity log alert rule name>' -ResourceGroupName '<resource group name>' -Condition $conditions -Scope $scope -Location global -Action $actionObject -Subscription <subscription ID> -Enabled $true

Default Value:

By default, no monitoring alerts are created."
  reference      : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listActivityLogAlertBySubscription"
  json_transform : '.[] | .subscriptionId as $id | [ .value[] | .name as $name | select(.properties.enabled == true) | .properties.condition.allOf[] | select(.equals == "Microsoft.Network/networkSecurityGroups/write") | $name ] as $names | "Subscription ID: \($id), Names: \($names)"'
  regex          : "Subscription ID:"
  expect         : "Names: \[.+\]"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "6.2.4 Ensure that Activity Log Alert exists for Delete Network Security Group"
  info           : "Create an activity log alert for the Delete Network Security Group event.

Rationale:

Monitoring for 'Delete Network Security Group' events gives insight into network access changes and may reduce the time it takes to detect suspicious activity."
  solution       : "Remediate from Azure Portal

Navigate to the Monitor blade.

Select Alerts.

Select Create.

Select Alert rule.

Choose a subscription.

Select Apply.

Select the Condition tab.

Click See all signals.

Select Delete Network Security Group (Network Security Group).

Click Apply.

Select the Actions tab.

Click Select action groups to select an existing action group, or Create action group to create a new action group.

Follow the prompts to choose or create an action group.

Select the Details tab.

Select a Resource group, provide an Alert rule name and an optional Alert rule description.

Click Review + create.

Click Create.

Remediate from Azure CLI

az monitor activity-log alert create --resource-group '<resource group name>' --condition category=Administrative and operationName=Microsoft.Network/networkSecurityGroups/delete and level=<verbose | information | warning | error | critical> --scope '/subscriptions/<subscription ID>' --name '<activity log rule name>' --subscription <subscription id> --action-group <action group ID>

Remediate from PowerShell
Create the Conditions object.

$conditions = @()
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Administrative -Field category
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Microsoft.Network/networkSecurityGroups/delete -Field operationName
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Verbose -Field level

Retrieve the Action Group information and store in a variable, then create the Actions object.

$actionGroup = Get-AzActionGroup -ResourceGroupName <resource group name> -Name <action group name>
$actionObject = New-AzActivityLogAlertActionGroupObject -Id $actionGroup.Id

Create the Scope object

$scope = '/subscriptions/<subscription id>'

Create the Activity Log Alert Rule for Microsoft.Network/networkSecurityGroups/delete

New-AzActivityLogAlert -Name '<activity log alert rule name>' -ResourceGroupName '<resource group name>' -Condition $conditions -Scope $scope -Location global -Action $actionObject -Subscription <subscription ID> -Enabled $true

Default Value:

By default, no monitoring alerts are created."
  reference      : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listActivityLogAlertBySubscription"
  json_transform : '.[] | .subscriptionId as $id | [ .value[] | .name as $name | select(.properties.enabled == true) | .properties.condition.allOf[] | select(.equals == "Microsoft.Network/networkSecurityGroups/delete") | $name ] as $names | "Subscription ID: \($id), Names: \($names)"'
  regex          : "Subscription ID:"
  expect         : "Names: \[.+\]"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "6.2.5 Ensure that Activity Log Alert exists for Create or Update Security Solution"
  info           : "Create an activity log alert for the Create or Update Security Solution event.

Rationale:

Monitoring for Create or Update Security Solution events gives insight into changes to the active security solutions and may reduce the time it takes to detect suspicious activity."
  solution       : "Remediate from Azure Portal

Navigate to the Monitor blade.

Select Alerts.

Select Create.

Select Alert rule.

Choose a subscription.

Select Apply.

Select the Condition tab.

Click See all signals.

Select Create or Update Security Solutions (Security Solutions).

Click Apply.

Select the Actions tab.

Click Select action groups to select an existing action group, or Create action group to create a new action group.

Follow the prompts to choose or create an action group.

Select the Details tab.

Select a Resource group, provide an Alert rule name and an optional Alert rule description.

Click Review + create.

Click Create.

Remediate from Azure CLI

az monitor activity-log alert create --resource-group '<resource group name>' --condition category=Administrative and operationName=Microsoft.Security/securitySolutions/write and level=<verbose | information | warning | error | critical> --scope '/subscriptions/<subscription ID>' --name '<activity log rule name>' --subscription <subscription id> --action-group <action group ID>

Remediate from PowerShell
Create the Conditions object.

$conditions = @()
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Administrative -Field category
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Microsoft.Security/securitySolutions/write -Field operationName
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Verbose -Field level

Retrieve the Action Group information and store in a variable, then create the Actions object.

$actionGroup = Get-AzActionGroup -ResourceGroupName <resource group name> -Name <action group name>
$actionObject = New-AzActivityLogAlertActionGroupObject -Id $actionGroup.Id

Create the Scope object

$scope = '/subscriptions/<subscription ID>'

Create the Activity Log Alert Rule for Microsoft.Security/securitySolutions/write

New-AzActivityLogAlert -Name '<activity log alert rule name>' -ResourceGroupName '<resource group name>' -Condition $conditions -Scope $scope -Location global -Action $actionObject -Subscription <subscription ID> -Enabled $true

Default Value:

By default, no monitoring alerts are created."
  reference      : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listActivityLogAlertBySubscription"
  json_transform : '.[] | .subscriptionId as $id | [ .value[] | .name as $name | select(.properties.enabled == true) | .properties.condition.allOf[] | select(.equals == "Microsoft.Security/securitySolutions/write") | $name ] as $names | "Subscription ID: \($id), Names: \($names)"'
  regex          : "Subscription ID:"
  expect         : "Names: \[.+\]"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "6.2.6 Ensure that Activity Log Alert exists for Delete Security Solution"
  info           : "Create an activity log alert for the Delete Security Solution event.

Rationale:

Monitoring for Delete Security Solution events gives insight into changes to the active security solutions and may reduce the time it takes to detect suspicious activity."
  solution       : "Remediate from Azure Portal

Navigate to the Monitor blade.

Select Alerts.

Select Create.

Select Alert rule.

Choose a subscription.

Select Apply.

Select the Condition tab.

Click See all signals.

Select Delete Security Solutions (Security Solutions).

Click Apply.

Select the Actions tab.

Click Select action groups to select an existing action group, or Create action group to create a new action group.

Follow the prompts to choose or create an action group.

Select the Details tab.

Select a Resource group, provide an Alert rule name and an optional Alert rule description.

Click Review + create.

Click Create.

Remediate from Azure CLI

az monitor activity-log alert create --resource-group '<resource group name>' --condition category=Administrative and operationName=Microsoft.Security/securitySolutions/delete and level=<verbose | information | warning | error | critical> --scope '/subscriptions/<subscription ID>' --name '<activity log rule name>' --subscription <subscription id> --action-group <action group ID>

Remediate from PowerShell
Create the Conditions object.

$conditions = @()
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Administrative -Field category
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Microsoft.Security/securitySolutions/delete -Field operationName
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Verbose -Field level

Retrieve the Action Group information and store in a variable, then create the Actions object.

$actionGroup = Get-AzActionGroup -ResourceGroupName <resource group name> -Name <action group name>
$actionObject = New-AzActivityLogAlertActionGroupObject -Id $actionGroup.Id

Create the Scope object

$scope = '/subscriptions/<subscription ID>'

Create the Activity Log Alert Rule for Microsoft.Security/securitySolutions/delete

New-AzActivityLogAlert -Name '<activity log alert rule name>' -ResourceGroupName '<resource group name>' -Condition $conditions -Scope $scope -Location global -Action $actionObject -Subscription <subscription ID> -Enabled $true

Default Value:

By default, no monitoring alerts are created."
  reference      : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listActivityLogAlertBySubscription"
  json_transform : '.[] | .subscriptionId as $id | [ .value[] | .name as $name | select(.properties.enabled == true) | .properties.condition.allOf[] | select(.equals == "Microsoft.Security/securitySolutions/delete") | $name ] as $names | "Subscription ID: \($id), Names: \($names)"'
  regex          : "Subscription ID:"
  expect         : "Names: \[.+\]"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "6.2.7 Ensure that Activity Log Alert exists for Create or Update SQL Server Firewall Rule"
  info           : "Create an activity log alert for the Create or Update SQL Server Firewall Rule event.

Rationale:

Monitoring for Create or Update SQL Server Firewall Rule events gives insight into network access changes and may reduce the time it takes to detect suspicious activity.

Impact:

There will be a substantial increase in log size if there are a large number of administrative actions on a server."
  solution       : "Remediate from Azure Portal

Navigate to the Monitor blade.

Select Alerts.

Select Create.

Select Alert rule.

Choose a subscription.

Select Apply.

Select the Condition tab.

Click See all signals.

Select Create/Update server firewall rule (Server Firewall Rule).

Click Apply.

Select the Actions tab.

Click Select action groups to select an existing action group, or Create action group to create a new action group.

Follow the prompts to choose or create an action group.

Select the Details tab.

Select a Resource group, provide an Alert rule name and an optional Alert rule description.

Click Review + create.

Click Create.

Remediate from Azure CLI

az monitor activity-log alert create --resource-group '<resource group name>' --condition category=Administrative and operationName=Microsoft.Sql/servers/firewallRules/write and level=<verbose | information | warning | error | critical> --scope '/subscriptions/<subscription ID>' --name '<activity log rule name>' --subscription <subscription id> --action-group <action group ID>

Remediate from PowerShell
Create the Conditions object.

$conditions = @()
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Administrative -Field category
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Microsoft.Sql/servers/firewallRules/write -Field operationName
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Verbose -Field level

Retrieve the Action Group information and store in a variable, then create the Actions object.

$actionGroup = Get-AzActionGroup -ResourceGroupName <resource group name> -Name <action group name>
$actionObject = New-AzActivityLogAlertActionGroupObject -Id $actionGroup.Id

Create the Scope object

$scope = '/subscriptions/<subscription ID>'

Create the Activity Log Alert Rule for Microsoft.Sql/servers/firewallRules/write

New-AzActivityLogAlert -Name '<activity log alert rule name>' -ResourceGroupName '<resource group name>' -Condition $conditions -Scope $scope -Location global -Action $actionObject -Subscription <subscription ID> -Enabled $true

Default Value:

By default, no monitoring alerts are created."
  reference      : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listActivityLogAlertBySubscription"
  json_transform : '.[] | .subscriptionId as $id | [ .value[] | .name as $name | select(.properties.enabled == true) | .properties.condition.allOf[] | select(.equals == "Microsoft.Sql/servers/firewallRules/write") | $name ] as $names | "Subscription ID: \($id), Names: \($names)"'
  regex          : "Subscription ID:"
  expect         : "Names: \[.+\]"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "6.2.8 Ensure that Activity Log Alert exists for Delete SQL Server Firewall Rule"
  info           : "Create an activity log alert for the 'Delete SQL Server Firewall Rule.'

Rationale:

Monitoring for Delete SQL Server Firewall Rule events gives insight into SQL network access changes and may reduce the time it takes to detect suspicious activity.

Impact:

There will be a substantial increase in log size if there are a large number of administrative actions on a server."
  solution       : "Remediate from Azure Portal

Navigate to the Monitor blade.

Select Alerts.

Select Create.

Select Alert rule.

Choose a subscription.

Select Apply.

Select the Condition tab.

Click See all signals.

Select Delete server firewall rule (Server Firewall Rule).

Click Apply.

Select the Actions tab.

Click Select action groups to select an existing action group, or Create action group to create a new action group.

Follow the prompts to choose or create an action group.

Select the Details tab.

Select a Resource group, provide an Alert rule name and an optional Alert rule description.

Click Review + create.

Click Create.

Remediate from Azure CLI

az monitor activity-log alert create --resource-group '<resource group name>' --condition category=Administrative and operationName=Microsoft.Sql/servers/firewallRules/delete and level=<verbose | information | warning | error | critical> --scope '/subscriptions/<subscription ID>' --name '<activity log rule name>' --subscription <subscription id> --action-group <action group ID>

Remediate from PowerShell
Create the Conditions object.

$conditions = @()
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Administrative -Field category
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Microsoft.Sql/servers/firewallRules/delete -Field operationName
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Verbose -Field level

Retrieve the Action Group information and store in a variable, then create the Actions object.

$actionGroup = Get-AzActionGroup -ResourceGroupName <resource group name> -Name <action group name>
$actionObject = New-AzActivityLogAlertActionGroupObject -Id $actionGroup.Id

Create the Scope object

$scope = '/subscriptions/<subscription ID>'

Create the Activity Log Alert Rule for Microsoft.Sql/servers/firewallRules/delete

New-AzActivityLogAlert -Name '<activity log alert rule name>' -ResourceGroupName '<resource group name>' -Condition $conditions -Scope $scope -Location global -Action $actionObject -Subscription <subscription ID> -Enabled $true

Default Value:

By default, no monitoring alerts are created."
  reference      : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listActivityLogAlertBySubscription"
  json_transform : '.[] | .subscriptionId as $id | [ .value[] | .name as $name | select(.properties.enabled == true) | .properties.condition.allOf[] | select(.equals == "Microsoft.Sql/servers/firewallRules/delete") | $name ] as $names | "Subscription ID: \($id), Names: \($names)"'
  regex          : "Subscription ID:"
  expect         : "Names: \[.+\]"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "6.2.9 Ensure that Activity Log Alert exists for Create or Update Public IP Address rule"
  info           : "Create an activity log alert for the Create or Update Public IP Addresses rule.

Rationale:

Monitoring for Create or Update Public IP Address events gives insight into network access changes and may reduce the time it takes to detect suspicious activity.

Impact:

There will be a substantial increase in log size if there are a large number of administrative actions on a server."
  solution       : "Remediate from Azure Portal

Navigate to the Monitor blade.

Select Alerts.

Select Create.

Select Alert rule.

Choose a subscription.

Select Apply.

Select the Condition tab.

Click See all signals.

Select Create or Update Public Ip Address (Public Ip Address).

Click Apply.

Select the Actions tab.

Click Select action groups to select an existing action group, or Create action group to create a new action group.

Follow the prompts to choose or create an action group.

Select the Details tab.

Select a Resource group, provide an Alert rule name and an optional Alert rule description.

Click Review + create.

Click Create.

Remediate from Azure CLI

az monitor activity-log alert create --resource-group '<resource group name>' --condition category=Administrative and operationName=Microsoft.Network/publicIPAddresses/write and level=<verbose | information | warning | error | critical> --scope '/subscriptions/<subscription ID>' --name '<activity log rule name>' --subscription <subscription id> --action-group <action group ID>

Remediate from PowerShell
Create the Conditions object.

$conditions = @()
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Administrative -Field category
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Microsoft.Network/publicIPAddresses/write -Field operationName
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Verbose -Field level

Retrieve the Action Group information and store in a variable, then create the Actions object.

$actionGroup = Get-AzActionGroup -ResourceGroupName <resource group name> -Name <action group name>
$actionObject = New-AzActivityLogAlertActionGroupObject -Id $actionGroup.Id

Create the Scope object

$scope = '/subscriptions/<subscription ID>'

Create the Activity Log Alert Rule for Microsoft.Network/publicIPAddresses/write

New-AzActivityLogAlert -Name '<activity log alert rule name>' -ResourceGroupName '<resource group name>' -Condition $conditions -Scope $scope -Location global -Action $actionObject -Subscription <subscription ID> -Enabled $true

Default Value:

By default, no monitoring alerts are created."
  reference      : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listActivityLogAlertBySubscription"
  json_transform : '.[] | .subscriptionId as $id | [ .value[] | .name as $name | select(.properties.enabled == true) | .properties.condition.allOf[] | select(.equals == "Microsoft.Network/publicIPAddresses/write") | $name ] as $names | "Subscription ID: \($id), Names: \($names)"'
  regex          : "Subscription ID:"
  expect         : "Names: \[.+\]"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "6.2.10 Ensure that Activity Log Alert exists for Delete Public IP Address rule"
  info           : "Create an activity log alert for the Delete Public IP Address rule.

Rationale:

Monitoring for Delete Public IP Address events gives insight into network access changes and may reduce the time it takes to detect suspicious activity.

Impact:

There will be a substantial increase in log size if there are a large number of administrative actions on a server."
  solution       : "Remediate from Azure Portal

Navigate to the Monitor blade.

Select Alerts.

Select Create.

Select Alert rule.

Choose a subscription.

Select Apply.

Select the Condition tab.

Click See all signals.

Select Delete Public Ip Address (Public Ip Address).

Click Apply.

Select the Actions tab.

Click Select action groups to select an existing action group, or Create action group to create a new action group.

Follow the prompts to choose or create an action group.

Select the Details tab.

Select a Resource group, provide an Alert rule name and an optional Alert rule description.

Click Review + create.

Click Create.

Remediate from Azure CLI

az monitor activity-log alert create --resource-group '<resource group name>' --condition category=Administrative and operationName=Microsoft.Network/publicIPAddresses/delete and level=<verbose | information | warning | error | critical> --scope '/subscriptions/<subscription ID>' --name '<activity log rule name>' --subscription <subscription id> --action-group <action group ID>

Remediate from PowerShell
Create the Conditions object.

$conditions = @()
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Administrative -Field category
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Microsoft.Network/publicIPAddresses/delete -Field operationName
$conditions += New-AzActivityLogAlertAlertRuleAnyOfOrLeafConditionObject -Equal Verbose -Field level

Retrieve the Action Group information and store in a variable, then create the Actions object.

$actionGroup = Get-AzActionGroup -ResourceGroupName <resource group name> -Name <action group name>
$actionObject = New-AzActivityLogAlertActionGroupObject -Id $actionGroup.Id

Create the Scope object

$scope = '/subscriptions/<subscription ID>'

Create the Activity Log Alert Rule for Microsoft.Network/publicIPAddresses/delete

New-AzActivityLogAlert -Name '<activity log alert rule name>' -ResourceGroupName '<resource group name>' -Condition $conditions -Scope $scope -Location global -Action $actionObject -Subscription <subscription ID> -Enabled $true

Default Value:

By default, no monitoring alerts are created."
  reference      : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listActivityLogAlertBySubscription"
  json_transform : '.[] | .subscriptionId as $id | [ .value[] | .name as $name | select(.properties.enabled == true) | .properties.condition.allOf[] | select(.equals == "Microsoft.Network/publicIPAddresses/delete") | $name ] as $names | "Subscription ID: \($id), Names: \($names)"'
  regex          : "Subscription ID:"
  expect         : "Names: \[.+\]"
  match_all      : YES
</custom_item>

<report type:"WARNING">
  description : "6.4 Ensure that Azure Monitor Resource Logging is Enabled for All Services that Support it"
  info        : "Resource Logs capture activity to the data access plane while the Activity log is a subscription-level log for the control plane. Resource-level diagnostic logs provide insight into operations that were performed within that resource itself; for example, reading or updating a secret from a Key Vault. Currently, 95 Azure resources support Azure Monitoring (See the more information section for a complete list), including Network Security Groups, Load Balancers, Key Vault, AD, Logic Apps, and CosmosDB. The content of these logs varies by resource type.

A number of back-end services were not configured to log and store Resource Logs for certain activities or for a sufficient length. It is crucial that monitoring is correctly configured to log all relevant activities and retain those logs for a sufficient length of time. Given that the mean time to detection in an enterprise is 240 days, a minimum retention period of two years is recommended.

Rationale:

A lack of monitoring reduces the visibility into the data plane, and therefore an organization's ability to detect reconnaissance, authorization attempts or other malicious activity. Unlike Activity Logs, Resource Logs are not enabled by default. Specifically, without monitoring it would be impossible to tell which entities had accessed a data store that was breached. In addition, alerts for failed attempts to access APIs for Web Services or Databases are only possible when logging is enabled.

Impact:

Costs for monitoring varies with Log Volume. Not every resource needs to have logging enabled. It is important to determine the security classification of the data being processed by the given resource and adjust the logging based on which events need to be tracked. This is typically determined by governance and compliance requirements.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Azure Subscriptions should log every access and operation for all resources.
Logs should be sent to Storage and a Log Analytics Workspace or equivalent third-party system. Logs should be kept in readily accessible storage for a minimum of one year, and then moved to inexpensive cold storage for a duration of time as necessary. If retention policies are set but storing logs in a Storage Account is disabled (for example, if only Event Hubs or Log Analytics options are selected), the retention policies have no effect. Enable all monitoring at first, and then be more aggressive moving data to cold storage if the volume of data becomes a cost concern.
Remediate from Azure Portal
The specific steps for configuring resources within the Azure console vary depending on resource, but typically the steps are:

Go to the resource

Click on Diagnostic settings

In the blade that appears, click 'Add diagnostic setting'

Configure the diagnostic settings

Click on Save

Remediate from Azure CLI
For each resource, run the following making sure to use a resource appropriate JSON encoded category for the --logs option.

az monitor diagnostic-settings create --name <diagnostic settings name> --resource <resource ID> --logs '[{category:<resource specific category>,enabled:true,rentention-policy:{enabled:true,days:180}}]' --metrics '[{category:AllMetrics,enabled:true,retention-policy:{enabled:true,days:180}}]' <[--event-hub <event hub ID> --event-hub-rule <event hub auth rule ID> | --storage-account <storage account ID> |--workspace <log analytics workspace ID> | --marketplace-partner-id <full resource ID of third-party solution>]>

Remediate from PowerShell
Create the log settings object

$logSettings = @()
$logSettings += New-AzDiagnosticSettingLogSettingsObject -Enabled $true -RetentionPolicyDay 180 -RetentionPolicyEnabled $true -Category <resource specific category>
$logSettings += New-AzDiagnosticSettingLogSettingsObject -Enabled $true -RetentionPolicyDay 180 -RetentionPolicyEnabled $true -Category <resource specific category number 2>

Create the metric settings object

$metricSettings = @()
$metricSettings += New-AzDiagnosticSettingMetricSettingsObject -Enabled $true -RetentionPolicyDay 180 -RetentionPolicyEnabled $true -Category AllMetrics

Create the diagnostic setting for a specific resource

New-AzDiagnosticSetting -Name '<diagnostic settings name>' -ResourceId <resource ID> -Log $logSettings -Metric $metricSettings

Default Value:

By default, Azure Monitor Resource Logs are 'Disabled' for all resources."
  reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.5,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-6(3),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-6(3),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(d),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv7|6.5,CSCv8|8.5,CSCv8|8.9,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|DE.DP-4,CSF|PR.PT-1,CSF|RS.AN-1,CSF|RS.AN-3,CSF|RS.CO-2,CSF2.0|DE.AE-02,CSF2.0|DE.AE-03,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-6(3),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M5.2.5,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<custom_item>
  description    : "7.1 Ensure that RDP access from the Internet is evaluated and restricted"
  info           : "Network security groups should be periodically evaluated for port misconfigurations. Where certain ports and protocols may be exposed to the Internet, they should be evaluated for necessity and restricted wherever they are not explicitly required.

Rationale:

The potential security problem with using RDP over the Internet is that attackers can use various brute force techniques to gain access to Azure Virtual Machines. Once the attackers gain access, they can use a virtual machine as a launch point for compromising other machines on an Azure Virtual Network or even attack networked devices outside of Azure."
  solution       : "Where RDP is not explicitly required and narrowly configured for resources attached to the Network Security Group, Internet-level access to your Azure resources should be restricted or eliminated.
For internal access to relevant resources, configure an encrypted network tunnel such as:
ExpressRoute
Site-to-site VPN
Point-to-site VPN

Default Value:

By default, RDP access from internet is not enabled."
  reference      : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.2,CSCv8|4.4,CSCv8|4.5,CSCv8|13.4,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|ID.AM-03,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listNetworkSecurityGroups"
  json_transform : '.[]|.subscriptionId as $id|.value[]|.name as $name| .properties.securityRules[]|"Subscription ID: \($id), Network Security Group Name: \($name), Rule Name: \(.name), Access: \(.properties.access), Destination Port Range: \(.properties.destinationPortRange), Direction: \(.properties.direction), Protocol: \(.properties.protocol), Source Address Prefix: \(.properties.sourceAddressPrefix)"'
  not_expect     : 'Access: Allow, Destination Port Range: (3389|\*|(([0-9]|[0-9][0-9]|[0-9][0-9][0-9]|[1-2][0-9][0-9][0-9]|3[0-2][0-9][0-9]|33[0-8][0-9])-(3389|339[0-9]|3[4-9][0-9][0-9]|[4-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]))), Direction: Inbound, Protocol: (TCP|\*), Source Address Prefix: (\*|0\.0\.0\.0|<nw>/0|/0|internet|any)'
</custom_item>

<custom_item>
  description    : "7.2 Ensure that SSH access from the Internet is evaluated and restricted"
  info           : "Network security groups should be periodically evaluated for port misconfigurations. Where certain ports and protocols may be exposed to the Internet, they should be evaluated for necessity and restricted wherever they are not explicitly required.

Rationale:

The potential security problem with using SSH over the Internet is that attackers can use various brute force techniques to gain access to Azure Virtual Machines. Once the attackers gain access, they can use a virtual machine as a launch point for compromising other machines on the Azure Virtual Network or even attack networked devices outside of Azure."
  solution       : "Where SSH is not explicitly required and narrowly configured for resources attached to the Network Security Group, Internet-level access to your Azure resources should be restricted or eliminated.
For internal access to relevant resources, configure an encrypted network tunnel such as:
ExpressRoute
Site-to-site VPN
Point-to-site VPN

Default Value:

By default, SSH access from internet is not enabled."
  reference      : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.2,CSCv8|4.4,CSCv8|4.5,CSCv8|13.4,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|ID.AM-03,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listNetworkSecurityGroups"
  json_transform : '.[]|.subscriptionId as $id|.value[]|.name as $name| .properties.securityRules[]|"Subscription ID: \($id), Name: \(.name), Access: \(.properties.access), Destination Port Range: \(.properties.destinationPortRange), Direction: \(.properties.direction), Protocol: \(.properties.protocol), Source Address Prefix: \(.properties.sourceAddressPrefix)"'
  not_expect     : 'Access: Allow, Destination Port Range: (22|\*|(([0-9]|1[0-9]|2[0-2])-(2[2-9][3-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-6][0-9][0-9][0-9][0-9]))), Direction: Inbound, Protocol: (TCP|\*), Source Address Prefix: (\*|0\.0\.0\.0|<nw>/0|/0|internet|any)'
</custom_item>

<custom_item>
  description    : "7.3 Ensure that UDP access from the Internet is evaluated and restricted"
  info           : "Network security groups should be periodically evaluated for port misconfigurations. Where certain ports and protocols may be exposed to the Internet, they should be evaluated for necessity and restricted wherever they are not explicitly required.

Rationale:

The potential security problem with broadly exposing UDP services over the Internet is that attackers can use DDoS amplification techniques to reflect spoofed UDP traffic from Azure Virtual Machines. The most common types of these attacks use exposed DNS, NTP, SSDP, SNMP, CLDAP and other UDP-based services as amplification sources for disrupting services of other machines on the Azure Virtual Network or even attack networked devices outside of Azure."
  solution       : "Where UDP is not explicitly required and narrowly configured for resources attached to the Network Security Group, Internet-level access to your Azure resources should be restricted or eliminated.
For internal access to relevant resources, configure an encrypted network tunnel such as:
ExpressRoute
Site-to-site VPN
Point-to-site VPN

Default Value:

By default, UDP access from internet is not enabled."
  reference      : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.2,CSCv8|4.4,CSCv8|4.5,CSCv8|13.4,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|ID.AM-03,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listNetworkSecurityGroups"
  json_transform : '.[]|.subscriptionId as $id|.value[]|.name as $name| .properties.securityRules[]|"Subscription ID: \($id), Name: \(.name), Protocol: \(.properties.protocol), Direction: \(.properties.direction), Access: \(.properties.access), Source Address Prefix: \(.properties.sourceAddressPrefix)"'
  not_expect     : 'Protocol: (UDP|\*), Direction: Inbound, Access: Allow, Source Address Prefix: (\*|0\.0\.0\.0|<nw>/0|/0|internet|any)'
</custom_item>

<custom_item>
  description    : "7.4 Ensure that HTTP(S) access from the Internet is evaluated and restricted"
  info           : "Network security groups should be periodically evaluated for port misconfigurations. Where certain ports and protocols may be exposed to the Internet, they should be evaluated for necessity and restricted wherever they are not explicitly required and narrowly configured.

Rationale:

The potential security problem with using HTTP(S) over the Internet is that attackers can use various brute force techniques to gain access to Azure resources. Once the attackers gain access, they can use the resource as a launch point for compromising other resources within the Azure tenant."
  solution       : "Remediate from Azure Portal

Go to Virtual machines.

For each VM, open the Networking blade.

Click on Inbound port rules.

Delete the rule with:

Port = 80/443 OR [port range containing 80/443]

Protocol = TCP OR Any

Source = Any (*) OR IP Addresses(0.0.0.0/0) OR Service Tag(Internet)

Action = Allow

Remediate from Azure CLI

Run below command to list network security groups:

az network nsg list --subscription <subscription-id> --output table

For each network security group, run below command to list the rules associated with the specified port:

az network nsg rule list --resource-group <resource-group> --nsg-name <nsg-name> --query '[?destinationPortRange=='80 or 443']'

Run the below command to delete the rule with:

Port = 80/443 OR [port range containing 80/443]

Protocol = TCP OR '*'

Source = Any (*) OR IP Addresses(0.0.0.0/0) OR Service Tag(Internet)

Action = Allow

az network nsg rule delete --resource-group <resource-group> --nsg-name <nsg-name> --name <rule-name>"
  reference      : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.2,CSCv8|4.4,CSCv8|4.5,CSCv8|13.4,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|ID.AM-03,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listNetworkSecurityGroups"
  json_transform : '.[]|.subscriptionId as $id|.value[]|.name as $name| .properties.securityRules[]|"Subscription ID: \($id), Name: \(.name), Access: \(.properties.access), Destination Port Range: \(.properties.destinationPortRange), Direction: \(.properties.direction), Protocol: \(.properties.protocol), Source Address Prefix: \(.properties.sourceAddressPrefix)"'
  not_expect     : 'Access: Allow, Destination Port Range: (80|443|\*|(([0-9]|1[0-9]|80)-([8-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-6][0-9][0-9][0-9][0-9]))|(([0-9]|[1-9][0-9]|[1-3][0-9][0-9]|4[0-3][0-9]|44[0-3])-(44[3-9]|4[5-9][0-9]|[5-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-6][0-9][0-9][0-9][0-9]))), Direction: Inbound, Protocol: (TCP|\*), Source Address Prefix: (\*|0\.0\.0\.0|<nw>/0|/0|internet|any)'
</custom_item>

<report type:"WARNING">
  description : "7.7 Ensure that Public IP addresses are Evaluated on a Periodic Basis"
  info        : "Public IP Addresses provide tenant accounts with Internet connectivity for resources contained within the tenant. During the creation of certain resources in Azure, a Public IP Address may be created. All Public IP Addresses within the tenant should be periodically reviewed for accuracy and necessity.

Rationale:

Public IP Addresses allocated to the tenant should be periodically reviewed for necessity. Public IP Addresses that are not intentionally assigned and controlled present a publicly facing vector for threat actors and significant risk to the tenant.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Remediation will vary significantly depending on your organization's security requirements for the resources attached to each individual Public IP address.

Default Value:

During Virtual Machine and Application creation, a setting may create and attach a public IP."
  reference   : "800-171|3.4.1,800-53|CM-8,800-53|CM-8(1),800-53r5|CM-8,800-53r5|CM-8(1),CN-L3|8.1.10.2(a),CN-L3|8.1.10.2(b),CSCv7|12.1,CSCv8|12.1,CSF|DE.CM-7,CSF|ID.AM-1,CSF|ID.AM-2,CSF|PR.DS-3,CSF2.0|ID.AM-01,CSF2.0|ID.AM-02,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-8,ITSG-33|CM-8(1),LEVEL|1M,NESA|T1.2.1,NESA|T1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<custom_item>
  description    : "8.2 Ensure Virtual Machines are utilizing Managed Disks"
  info           : "Migrate blob-based VHDs to Managed Disks on Virtual Machines to exploit the default features of this configuration. The features include:

Default Disk Encryption

Resilience, as Microsoft will managed the disk storage and move around if underlying hardware goes faulty

Reduction of costs over storage accounts

Rationale:

Managed disks are by default encrypted on the underlying hardware, so no additional encryption is required for basic protection. It is available if additional encryption is required. Managed disks are by design more resilient that storage accounts.

For ARM-deployed Virtual Machines, Azure Adviser will at some point recommend moving VHDs to managed disks both from a security and cost management perspective.

Impact:

There are additional costs for managed disks based off of disk space allocated. When converting to managed disks, VMs will be powered off and back on."
  solution       : "Remediate from Azure Portal

Using the search feature, go to Virtual Machines

Select the virtual machine you would like to convert

Select Disks in the menu for the VM

At the top select Migrate to managed disks

You may follow the prompts to convert the disk and finish by selecting Migrate to start the process

NOTE VMs will be stopped and restarted after migration is complete.

Remediate from PowerShell

Stop-AzVM -ResourceGroupName $rgName -Name $vmName -Force
ConvertTo-AzVMManagedDisk -ResourceGroupName $rgName -VMName $vmName
Start-AzVM -ResourceGroupName $rgName -Name $vmName

Default Value:

Managed disks or are an option upon the creation of VMs."
  reference      : "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|14.8,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.DS-01,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listVMs"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgn|.VMs[]|select((.properties.storageProfile.osDisk.managedDisk == null) or (.properties.storageProfile.osDisk.managedDisk != null))|"Subscription ID: \($subid), Resource Group: \($rgn), VM Name: \(.name), Managed Disks: \(.properties.storageProfile.osDisk.managedDisk)"'
  not_expect     : 'Managed Disks: null'
</custom_item>

<custom_item>
  description    : "8.5 Ensure that 'Disk Network Access' is NOT set to 'Enable public access from all networks'"
  info           : "Virtual Machine Disks and snapshots can be configured to allow access from different network resources.

Rationale:

The setting 'Enable public access from all networks' is, in many cases, an overly permissive setting on Virtual Machine Disks that presents atypical attack, data infiltration, and data exfiltration vectors. If a disk to network connection is required, the preferred setting is to 'Disable public access and enable private access.'

Impact:

The setting 'Disable public access and enable private access' will require configuring a private link (URL in references below).

The setting 'Disable public and private access' is most secure and preferred where disk network access is not needed."
  solution       : "Remediate from Azure Portal
Part A. Select the Virtual Machine to Remediate

Using the search bar, search for and open the Virtual Machines service.

Click on the name of the Virtual Machine to be remediated.

Part B. Remediate each Virtual Machine Disk individually

From the selected Virtual Machine resource window, expand the Settings menu item and click Disks.

For each disk, click the name of the disk to open the disk resource window.

From the selected Disk resource window, expand the Settings menu item, and click Networking.

Under Network access, select the radio button for either:

Disable public access and enable private access

Disable public and private access

Repeat Part B for each Disk attached to a VM.
Repeat Parts A and B to remediate all Disks in all VMs.

Remediate from PowerShell
To disable PublicNetworkAccess and to set a DenyAll setting for the disk's NetworkAccessPolicy for each managed disk, run the following command:

$disk = Get-AzDisk -ResourceGroupName '<resource group name>' -DiskName '<disk name>'
$disk.NetworkAccessPolicy = 'DenyAll'
$disk.PublicNetworkAccess = 'Disabled'
Update-AzDisk -ResourceGroup '<resource group name> -DiskName $disk.Name -Disk $disk

To disable PublicNetworkAccess and to set an AllowPrivate setting for the disk's NetworkAccessPolicy for each managed disk, run the following command:

$disk = Get-AzDisk -ResourceGroupName '<resource group name>' -DiskName '<disk name>'
$disk.NetworkAccessPolicy = 'AllowPrivate'
$disk.PublicNetworkAccess = 'Disabled'
$disk.DiskAccessId = '/subscriptions/<subscription ID>/resourceGroups/<resource group name>/providers/Microsoft.Compute/diskAccesses/<private disk access name>
Update-AzDisk -ResourceGroup '<resource group name> -DiskName $disk.Name -Disk $disk

Remediate from Azure CLI
To configure a disk to allow private access only, run the following command making sure you have the Disk Access ID from a private disk access end point.

az disk update --name <managed disk name> --resource-group <resource group name> --network-access-policy AllowPrivate --disk-access <disk access ID>

To completely disable public and private access for a disk, run the following command (still in preview) for each disk:

az disk update --name <managed disk name> --resource-group <resource group name> --public-network-access Disabled --network-access-policy DenyAll

Default Value:

By default, Disk Network access is set to Enable public access from all networks."
  reference      : "800-171|3.4.6,800-171|3.4.7,800-171|3.7.5,800-53|CM-7,800-53|MA-4,800-53r5|CM-7,800-53r5|MA-4,CSCv7|5.1,CSCv8|4.6,CSF|PR.IP-1,CSF|PR.MA-2,CSF|PR.PT-3,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7,ITSG-33|MA-4,LEVEL|1A,NESA|T2.3.4,NESA|T5.4.4,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3,TBA-FIISB|45.2.3"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listDisksBySubscription"
  json_transform : '.[]|.subscriptionId as $subid | .value[] |"Subscription ID: \($subid), Name: \(.name), Public Network Access: \(.properties.publicNetworkAccess), Network Access Policy: \(.properties.networkAccessPolicy)"'
  expect         : "Public Network Access: Disabled, Network Access Policy: (AllowPrivate|DenyAll)"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "8.6 Ensure that 'Enable Data Access Authentication Mode' is 'Checked'"
  info           : "Data Access Authentication Mode provides a method of uploading or exporting Virtual Machine Disks.

Rationale:

Enabling data access authentication mode adds a layer of protection using an Entra ID role to further restrict users from creating and using Secure Access Signature (SAS) tokens for exporting a detached managed disk or virtual machine state. Users will need the Data operator for managed disk role within Entra ID in order to download a VHD or VM Guest state using a secure URL.

Impact:

In order to apply this setting, the virtual machine to which the disk or disks are attached will need to be powered down and have their disk detached. Users without the Data operator for managed disk role within Entra ID will not be able to export VHD or VM Guest state using the secure download URL."
  solution       : "Remediate from Azure Portal
Part A. Select the Virtual Machine to Remediate

Using the search bar, search for and open the Virtual Machines service.

Click on the name of the Virtual Machine to be remediated.

Part B. Remediate each Virtual Machine Disk individually

From the selected Virtual Machine resource window, expand the Settings menu item and click Disks.

For each disk, click the name of the disk to open the disk resource window.

From the selected Disk resource window, expand the Settings menu item, and click Disk Export.

check the checkbox next to Enable Data Access Authentication Mode.
Repeat Part B for each Disk attached to a VM.
Repeat Parts A and B to remediate all Disks in all VMs.

Remediate from PowerShell
Ensure that each disk is detached from its associated Virtual Machine before proceeding. Once detached, run the following for each disk:

$disk = Get-AzDisk -ResourceGroupName '<resource_group_name>' -DiskName '<disk_name>'
$disk.DataAccessAuthMode = 'AzureActiveDirectory'
Update-AzDisk -ResourceGroup '<resource_group_name>' -DiskName $disk.Name -Disk $disk

Remediate from Azure CLI
Ensure that each disk is detached from its associated Virtual Machine before proceeding. Once detached, run the following for each disk:

az disk update --name <disk_name> --resource-group <resource_group_name> --data-access-auth-mode AzureActiveDirectory

Default Value:

By default, Data Access Authentication Mode is Disabled."
  reference      : "800-171|3.4.6,800-171|3.4.7,800-171|3.7.5,800-53|CM-7,800-53|MA-4,800-53r5|CM-7,800-53r5|MA-4,CSCv7|5.1,CSCv8|4.6,CSF|PR.IP-1,CSF|PR.MA-2,CSF|PR.PT-3,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7,ITSG-33|MA-4,LEVEL|1A,NESA|T2.3.4,NESA|T5.4.4,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3,TBA-FIISB|45.2.3"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listDisksBySubscription"
  json_transform : '.[]|.subscriptionId as $subid | .value[] |"Subscription ID: \($subid), Name: \(.name), Data Access Auth Mode: \(.properties.dataAccessAuthMode)"'
  expect         : "Data Access Auth Mode: AzureActiveDirectory"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "8.7 Ensure that Only Approved Extensions Are Installed"
  info           : "For added security, only install organization-approved extensions on VMs.

Rationale:

Azure virtual machine extensions are small applications that provide post-deployment configuration and automation tasks on Azure virtual machines. These extensions run with administrative privileges and could potentially access anything on a virtual machine. The Azure Portal and community provide several such extensions. Each organization should carefully evaluate these extensions and ensure that only those that are approved for use are actually implemented.

Impact:

Functionality by unsupported extensions will be disabled.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution       : "Remediate from Azure Portal

Go to Virtual machines.

For each virtual machine, go to Settings.

Click on Extensions + applications.

If there are unapproved extensions, uninstall them.

Remediate from Azure CLI
From the audit command identify the unapproved extensions, and use the below CLI command to remove an unapproved extension attached to VM.

az vm extension delete --resource-group <resourceGroupName> --vm-name <vmName> --name <extensionName>

Remediate from PowerShell
For each VM and each insecure extension from the Audit Procedure run the following command.

Remove-AzVMExtension -ResourceGroupName <ResourceGroupName> -Name <ExtensionName> -VMName <VirtualMachineName>

Default Value:

By default, no extensions are added to the virtual machines."
  reference      : "800-171|3.4.1,800-171|3.4.7,800-171|3.7.1,800-171|3.7.2,800-53|CM-7(1),800-53|CM-8,800-53|MA-3,800-53r5|CM-7(1),800-53r5|CM-8,800-53r5|MA-3,CN-L3|8.1.10.2(a),CN-L3|8.1.10.2(b),CSCv7|2.1,CSCv8|2.1,CSF|DE.CM-7,CSF|ID.AM-1,CSF|ID.AM-2,CSF|PR.DS-3,CSF|PR.IP-1,CSF|PR.MA-1,CSF|PR.PT-3,CSF2.0|ID.AM-01,CSF2.0|ID.AM-02,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7(1),ITSG-33|CM-8,ITSG-33|MA-3,ITSG-33|MA-3a.,LEVEL|1M,NESA|T1.2.1,NESA|T1.2.2,NESA|T2.3.4,NESA|T5.4.4,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|5.2.3,SWIFT-CSCv1|2.3"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listVMInstanceView"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgname|.VMs[]|.name as $vmname|"Subscription ID: \($subid), Resource Group: \($rgname), VM Name: \($vmname), Extension Name: \(.value.extensions[].name)"'
  not_expect     : ".+"
  severity       : MEDIUM
</custom_item>

<custom_item>
  description    : "8.11 Ensure Trusted Launch is enabled on Virtual Machines"
  info           : "When Secure Boot and vTPM are enabled together, they provide a strong foundation for protecting your VM from boot attacks. For example, if an attacker attempts to replace the bootloader with a malicious version, Secure Boot will prevent the VM from booting. If the attacker is able to bypass Secure Boot and install a malicious bootloader, vTPM can be used to detect the intrusion and alert you.

Rationale:

Secure Boot and vTPM work together to protect your VM from a variety of boot attacks, including bootkits, rootkits, and firmware rootkits. Not enabling Trusted Launch in Azure VM can lead to increased vulnerability to rootkits and boot-level malware, reduced ability to detect and prevent unauthorized changes to the boot process, and a potential compromise of system integrity and data security.

Impact:

Secure Boot and vTPM are not currently supported for Azure Generation 1 VMs.

IMPORTANT: Before enabling Secure Boot and vTPM on a Generation 2 VM which does not already have both enabled, it is highly recommended to create a restore point of the VM prior to remediation."
  solution       : "Remediate from Azure Portal

Go to Virtual Machines.

For each VM, under Settings, click on Configuration on the left blade.

Under Security Type, select 'Trusted Launch Virtual Machines'.

Make sure Enable Secure Boot & Enable vTPM are checked.

Click on Apply.

Note: Trusted launch on existing virtual machines (VMs) is currently not supported for Azure Generation 1 VMs

Default Value:

On Azure Generation 2 VMs, vTPM is enabled by default. Secure Boot is not enabled by default."
  reference      : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|ID.RA-09,CSF2.0|PR.DS-10,CSF2.0|PR.IR-03,CSF2.0|PR.PS-01,CSF2.0|PR.PS-06,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "getVM"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgname|.VMs[]|.name as $vmname|"Subscription ID: \($subid), Resource Group: \($rgname), VM Name: \($vmname), Secure Boot: \(.value.properties.securityProfile.uefiSettings.secureBootEnabled), VTPm: \(.value.properties.securityProfile.uefiSettings.vTpmEnabled)"'
  expect         : "Secure Boot: true, VTPm: true"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "9.1 Ensure 'HTTPS Only' is set to 'On'"
  info           : "Azure App Service allows apps to run under both HTTP and HTTPS by default. Apps can be accessed by anyone using non-secure HTTP links by default. Non-secure HTTP requests can be restricted and all HTTP requests redirected to the secure HTTPS port. It is recommended to enforce HTTPS-only traffic.

Rationale:

Enabling HTTPS-only traffic will redirect all non-secure HTTP requests to HTTPS ports. HTTPS uses the TLS/SSL protocol to provide a secure connection which is both encrypted and authenticated. It is therefore important to support HTTPS for the security benefits.

Impact:

When it is enabled, every incoming HTTP request is redirected to the HTTPS port. This means an extra level of security will be added to the HTTP requests made to the app."
  solution       : "Remediate from Azure Portal

Login to Azure Portal using https://portal.azure.com

Go to App Services

For each App Service

Under Setting section, click on Configuration

Under the General Settings tab, set HTTPS Only to On under Platform Settings

Remediate from Azure CLI
To set HTTPS-only traffic value for an existing app, run the following command:

az webapp update --resource-group <RESOURCE_GROUP_NAME> --name <APP_NAME> --set httpsOnly=true

Remediate from PowerShell

Set-AzWebApp -ResourceGroupName <RESOURCE_GROUP_NAME> -Name <APP_NAME> -HttpsOnly $true

Default Value:

By default, HTTPS-only feature will be disabled when a new app is created using the command-line tool or Azure Portal console."
  reference      : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listWebApps"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgname|.WebApps[]|.name as $appname|.properties|"Subscription ID: \($subid), Resource Group: \($rgname), App Name: \($appname), HTTPS Only: \(.httpsOnly)"'
  expect         : "HTTPS Only: true"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "9.3 Ensure 'FTP State' is set to 'FTPS Only' or 'Disabled'"
  info           : "By default, App Services can be deployed over FTP. If FTP is required for an essential deployment workflow, FTPS should be required for FTP login for all App Services.

If FTPS is not expressly required for the App, the recommended setting is Disabled.

Rationale:

FTP is an unencrypted network protocol that will transmit data - including passwords - in clear-text. The use of this protocol can lead to both data and credential compromise, and can present opportunities for exfiltration, persistence, and lateral movement.

Impact:

Any deployment workflows that rely on FTP or FTPs rather than the WebDeploy or HTTPs endpoints may be affected."
  solution       : "Remediate from Azure Portal

Go to the Azure Portal

Select App Services

Click on an app

Select Settings and then Configuration

Under General Settings, for the Platform Settings, the FTP state should be set to Disabled or FTPS Only

Remediate from Azure CLI
For each out of compliance application, run the following choosing either 'disabled' or 'FtpsOnly' as appropriate:

az webapp config set --resource-group <resource group name> --name <app name> --ftps-state [disabled|FtpsOnly]

Remediate from PowerShell
For each out of compliance application, run the following:

Set-AzWebApp -ResourceGroupName <resource group name> -Name <app name> -FtpsState <Disabled or FtpsOnly>

Default Value:

By default, FTP based deployment is All allowed"
  reference      : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv7|16.5,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listAppConfig"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgname|.WebApps[]|.name as $waname|.value[].properties.ftpsState as $ftpstate|"Subscription ID: \($subid), Resource Group: \($rgname), App Name: \($waname), FTP State: \($ftpstate)"'
  not_expect     : "FTP State: AllAllowed"
</custom_item>

<custom_item>
  description    : "9.4 Ensure Web App is using the latest version of TLS encryption"
  info           : "The TLS (Transport Layer Security) protocol secures transmission of data over the internet using standard encryption technology. Encryption should be set with the latest version of TLS. App service allows TLS 1.2 by default, which is the recommended TLS level by industry standards such as PCI DSS.

Rationale:

App service currently allows the web app to set TLS versions 1.0, 1.1 and 1.2. It is highly recommended to use the latest TLS 1.2 version for web app secure connections."
  solution       : "Remediate from Azure Portal

Login to Azure Portal using https://portal.azure.com

Go to App Services

Click on each App

Under Setting section, Click on SSL settings

Under the Bindings pane, set Minimum TLS Version to 1.2 under Protocol Settings section

Remediate from Azure CLI
To set TLS Version for an existing app, run the following command:

az webapp config set --resource-group <RESOURCE_GROUP_NAME> --name <APP_NAME> --min-tls-version 1.2

Remediate from PowerShell

Set-AzWebApp -ResourceGroupName <RESOURCE_GROUP_NAME> -Name <APP_NAME> -MinTlsVersion 1.2

Default Value:

By default, TLS Version feature will be set to 1.2 when a new app is created using the command-line tool or Azure Portal console."
  reference      : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listAppConfig"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgname|.WebApps[]|.name as $waname|.value[].properties.minTlsVersion as $tlsversion|"Subscription ID: \($subid), Resource Group: \($rgname), App Name: \($waname), TLS Min Version: \($tlsversion)"'
  expect         : "TLS Min Version: 1\.2"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "9.5 Ensure that Register with Entra ID is enabled on App Service"
  info           : "Managed service identity in App Service provides more security by eliminating secrets from the app, such as credentials in the connection strings. When registering an App Service with Entra ID, the app will connect to other Azure services securely without the need for usernames and passwords.

Rationale:

App Service provides a highly scalable, self-patching web hosting service in Azure. It also provides a managed identity for apps, which is a turn-key solution for securing access to Azure SQL Database and other Azure services."
  solution       : "Remediate from Azure Portal

Login to Azure Portal using https://portal.azure.com

Go to App Services

Click on each App

Under Setting section, Click on Identity

Under the System assigned pane, set Status to On

Remediate from Azure CLI
To register with Entra ID for an existing app, run the following command:

az webapp identity assign --resource-group <RESOURCE_GROUP_NAME> --name <APP_NAME>

Remediate from PowerShell
To register with Entra ID for an existing app, run the following command:

Set-AzWebApp -AssignIdentity $True -ResourceGroupName <resource_Group_Name> -Name <App_Name>

Default Value:

By default, Managed service identity via Entra ID is disabled."
  reference      : "800-171|3.1.1,800-53|AC-2(1),800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CSCv7|16.2,CSCv8|5.6,CSF|PR.AC-1,CSF|PR.AC-4,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2(1),LEVEL|1A,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listAppConfig"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgname|.WebApps[]|.name as $waname|.value[].properties.managedServiceIdentityId as $managedIdent|"Subscription ID: \($subid), Resource Group: \($rgname), App Name: \($waname), Managed Identity: \($managedIdent)"'
  not_expect     : "Managed Identity: null"
</custom_item>

<report type:"WARNING">
  description : "9.6 Ensure that 'Basic Authentication' is 'Disabled'"
  info        : "Basic Authentication provides the ability to create identities and authentication for an App Service without a centralized Identity Provider. For a more effective, capable, and secure solution for Identity, Authentication, Authorization, and Accountability, a centralized Identity Provider such as Entra ID is strongly advised.

Rationale:

Basic Authentication introduces an identity silo which can produce privileged access to a resource. This can be exploited in numerous ways and represents a significant vulnerability and attack vector.

Impact:

An Identity Provider that can be used by the App Service for authenticating users is required.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Remediate from Azure Portal

Search for, and open App Services from the search bar.

For each App Service listed:

Click on the App Service name.

Under the Settings menu item, click on Configuration

Under the General settings tab, scroll down to locate the two Basic Auth settings:

Set the SCM Basic Auth Publishing Credentials radio button to Off

Set the FTP Basic Auth Publishing Credentials radio button to Off

CAUTION: The new settings are not yet applied. Applying them may cause your App Service resource to restart - proceed with caution. Click the Save button, then click Continue to apply the updated configuration.
Repeat this procedure for each App Service.

Default Value:

Both parameters for Basic Authentication (SCM and FTP) are set to On by default."
  reference   : "800-171|3.1.1,800-53|AC-2(1),800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CSCv7|16.2,CSCv8|5.6,CSF|PR.AC-1,CSF|PR.AC-4,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2(1),LEVEL|1M,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
  see_also    : "https://workbench.cisecurity.org/benchmarks/16820"
</report>

<custom_item>
  description    : "9.7 Ensure that 'PHP version' is currently supported (if in use)"
  info           : "Periodically, older versions of PHP may be deprecated and no longer supported. Using a supported version of PHP for app services is recommended to avoid potential unpatched vulnerabilities.

Rationale:

Deprecated and unsupported versions of programming and scripting languages can present vulnerabilities which may not be addressed or may not be addressable.

Impact:

If your app is written using version-dependent features or libraries, they may not be available on more recent versions. If you wish to update, research the impact thoroughly.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution       : "Remediate from Azure Portal

From Azure Home open the Portal Menu in the top left

Go to App Services

Click on each App

Under Settings section, click on Configuration

Click on the General settings pane, ensure that for a Stack of PHP the Major Version and Minor Version reflect a currently supported release.

NOTE: No action is required If PHP version is set to Off or is set with an empty value as PHP is not used by your app.

Remediate from Azure CLI
List the available PHP runtimes:

az webapp list-runtimes

To set a currently supported PHP version for an existing app, run the following command:

az webapp config set --resource-group <RESOURCE_GROUP_NAME> --name <APP_NAME> [--linux-fx-version <PHP_RUNTIME_VERSION>][--php-version <PHP_VERSION>]

Remediate from PowerShell
To set a currently supported PHP version for an existing app, run the following command:

Set-AzWebApp -ResourceGroupName <RESOURCE_GROUP_NAME> -Name <APP_NAME> -phpVersion <PHP_VERSION>

NOTE: Currently there is no way to update an existing web app Linux FX Version setting using PowerShell, nor is there a way to create a new web app using PowerShell that configures the PHP runtime in the Linux FX Version setting.

Default Value:

The version of PHP is whatever was selected upon App creation."
  reference      : "800-53|SA-22,800-53r5|SA-22,CSCv7|2.2,CSCv8|2.2,CSF2.0|ID.AM-08,GDPR|32.1.b,HIPAA|164.306(a)(1),LEVEL|1M"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listAppConfig"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgname|.WebApps[]|.name as $waname|.value[]|"Subscription ID: \($subid), Resource Group: \($rgname), App Name: \($waname), PHP Version: \(.properties.phpVersion), Linuxfxversion: \(.properties.linuxFxVersion)"'
  expect         : "PHP Version: MANUAL_REVIEW"
  match_all      : YES
  severity       : MEDIUM
</custom_item>

<custom_item>
  description    : "9.8 Ensure that 'Python version' is currently supported (if in use)"
  info           : "Periodically, older versions of Python may be deprecated and no longer supported. Using a supported version of Python for app services is recommended to avoid potential unpatched vulnerabilities.

Rationale:

Deprecated and unsupported versions of programming and scripting languages can present vulnerabilities which may not be addressed or may not be addressable.

Impact:

If your app is written using version-dependent features or libraries, they may not be available on more recent versions. If you wish to update, research the impact thoroughly.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution       : "Remediate from Azure Portal

From Azure Home open the Portal Menu in the top left

Go to App Services

Click on each App

Under Settings section, click on Configuration

Click on the General settings pane and ensure that the Major Version and the Minor Version is set to a currently supported release.

NOTE: No action is required if Python version is set to Off, as Python is not used by your app.
Remediate from Azure CLI
To see the list of supported runtimes:

az webapp list-runtimes

To set latest Python version for an existing app, run the following command:

az webapp config set --resource-group <RESOURCE_GROUP_NAME> --name <APP_NAME> [--windows-fx-version 'PYTHON|<VERSION>'] [--linux-fx-version 'PYTHON|<VERSION>']

Remediate from PowerShell
As of this writing, there is no way to update an existing application's SiteConfig or set a new application's SiteConfig settings during creation via PowerShell.

Default Value:

The version of Python is whatever was selected upon App creation."
  reference      : "800-53|SA-22,800-53r5|SA-22,CSCv7|2.2,CSCv8|2.2,CSF2.0|ID.AM-08,GDPR|32.1.b,HIPAA|164.306(a)(1),LEVEL|1M"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listAppConfig"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgname|.WebApps[]|.name as $waname|.value[]|"Subscription ID: \($subid), Resource Group: \($rgname), App Name: \($waname), Python Version: \(.properties.pythonVersion), LinuxFxVersion: \(.properties.linuxFxVersion) WindowsFxVersion: \(.properties.windowsFxVersion)"'
  expect         : "Python Version: MANUAL_REVIEW"
  match_all      : YES
  severity       : MEDIUM
</custom_item>

<custom_item>
  description    : "9.9 Ensure that 'Java version' is currently supported (if in use)"
  info           : "Periodically, older versions of Java may be deprecated and no longer supported. Using a supported version of Java for app services is recommended to avoid potential unpatched vulnerabilities.

Rationale:

Deprecated and unsupported versions of programming and scripting languages can present vulnerabilities which may not be addressed or may not be addressable.

Impact:

If your app is written using version-dependent features or libraries, they may not be available on more recent versions. If you wish to update, research the impact thoroughly.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution       : "Remediate from Azure Portal

Login to Azure Portal using https://portal.azure.com

Go to App Services

Click on each App

Under Settings section, click on Configuration

Click on the General settings pane and ensure that for a Stack of Java the Major Version and Minor Version reflect a currently supported release, and that the Java web server version is set to the auto-update option.

NOTE: No action is required if Java version is set to Off, as Java is not used by your app.

Remediate from Azure CLI
To see the list of supported runtimes:

az webapp list-runtimes

To set a currently supported Java version for an existing app, run the following command:

az webapp config set --resource-group <RESOURCE_GROUP_NAME> --name <APP_NAME> [--java-version <JAVA_VERSION> --java-container <JAVA_CONTAINER> --java-container-version <JAVA_CONTAINER_VERSION> [--windows-fx-version <JAVA_RUNTIME_VERSION>] [--linux-fx-version <JAVA_RUNTIME_VERSION>]

If creating a new application to use a currently supported version of Java, run the following commands.
To create an app service plan:

az appservice plan create --resource-group <RESOURCE_GROUP_NAME> --name <PLAN_NAME> --location <LOCATION> [--is-linux --number-of-workers <INT> --sku <PRICING_TIER>] [--hyper-v --sku <PRICING_TIER>]

Get the app service plan ID:

az appservice plan list --query '[].{Name:name, ID:id, SKU:sku, Location:location}'

To create a new Java web application using the retrieved app service ID:

az webapp create --resource-group <RESOURCE_GROUP_NAME> --plan <APP_SERVICE_PLAN_ID> --name <app name> [--linux-fx-version <JAVA_RUNTIME_VERSION>] [--windows-fx-version <JAVA_RUNTIME_VERSION>]

Remediate from PowerShell
As of this writing, there is no way to update an existing application's SiteConfig or set a new application's SiteConfig settings during creation via PowerShell.

Default Value:

The default setting is whichever setting was chosen in the creation of the webapp."
  reference      : "800-53|SA-22,800-53r5|SA-22,CSCv7|2.2,CSCv8|2.2,CSF2.0|ID.AM-08,GDPR|32.1.b,HIPAA|164.306(a)(1),LEVEL|1M"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listAppConfig"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgname|.WebApps[]|.name as $waname|.value[]|"Subscription ID: \($subid), Resource Group: \($rgname), App Name: \($waname), Java Version: \(.properties.javaVersion), LinuxFxVersion: \(.properties.linuxFxVersion), WindowsFxVersion: \(.properties.windowsFxVersion), javaContainer: \(.properties.javaContainer), javaContainerVersion: \(.properties.javaContainerVersion)"'
  expect         : "Java Version: MANUAL_REVIEW"
  match_all      : YES
  severity       : MEDIUM
</custom_item>

<custom_item>
  description    : "9.10 Ensure that 'HTTP20enabled' is set to 'true' (if in use)"
  info           : "Periodically, newer versions are released for HTTP either due to security flaws or to include additional functionality. Using the latest HTTP version for apps to take advantage of security fixes, if any, and/or new functionalities of the newer version.

Rationale:

Newer versions may contain security enhancements and additional functionality. Using the latest version is recommended in order to take advantage of enhancements and new capabilities. With each software installation, organizations need to determine if a given update meets their requirements. They must also verify the compatibility and support provided for any additional software against the update revision that is selected.

HTTP 2.0 has additional performance improvements on the head-of-line blocking problem of old HTTP version, header compression, and prioritization of requests. HTTP 2.0 no longer supports HTTP 1.1's chunked transfer encoding mechanism, as it provides its own, more efficient, mechanisms for data streaming.

Impact:

Most modern browsers support HTTP 2.0 protocol over TLS only, while non-encrypted traffic continues to use HTTP 1.1. To ensure that client browsers connect to your app with HTTP/2, either buy an App Service Certificate for your app's custom domain or bind a third-party certificate."
  solution       : "Remediate from Azure Portal

Login to Azure Portal using https://portal.azure.com

Go to App Services

Click on each App

Under Setting section, Click on Configuration

Set HTTP version to 2.0 under General settings

NOTE: Most modern browsers support HTTP 2.0 protocol over TLS only, while non-encrypted traffic continues to use HTTP 1.1. To ensure that client browsers connect to your app with HTTP/2, either buy an App Service Certificate for your app's custom domain or bind a third-party certificate.

Remediate from Azure CLI
To set HTTP 2.0 version for an existing app, run the following command:

az webapp config set --resource-group <RESOURCE_GROUP_NAME> --name <APP_NAME> --http20-enabled true

Remediate from PowerShell
To enable HTTP 2.0 version support, run the following command:

Set-AzWebApp -ResourceGroupName <app resource group> -Name <app name> -Http20Enabled $true"
  reference      : "800-53|SA-22,800-53r5|SA-22,CSCv7|2.2,CSCv8|2.2,CSF2.0|ID.AM-08,GDPR|32.1.b,HIPAA|164.306(a)(1),LEVEL|1A"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listAppConfig"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgname|.WebApps[]|.name as $waname|.value[]|"Subscription ID: \($subid), Resource Group: \($rgname), App Name: \($waname), HTTP20enabled: \(.properties.http20Enabled)"'
  expect         : "HTTP20enabled: true"
  match_all      : YES
</custom_item>

<custom_item>
  description    : "9.12 Ensure that 'Remote debugging' is set to 'Off'"
  info           : "Remote Debugging allows Azure App Service to be debugged in real-time directly on the Azure environment. When remote debugging is enabled, it opens a communication channel that could potentially be exploited by unauthorized users if not properly secured.

Rationale:

Disabling remote debugging on Azure App Service is primarily about enhancing security.

Remote debugging opens a communication channel that can be exploited by attackers. By disabling it, you reduce the number of potential entry points for unauthorized access.

If remote debugging is enabled without proper access controls, it can allow unauthorized users to connect to your application, potentially leading to data breaches or malicious code execution.

During a remote debugging session, sensitive information might be exposed. Disabling remote debugging helps ensure that such data remains secure. This minimizes the use of remote access tools to reduce risk.

Impact:

You will not be able to connect to your application from a remote location to diagnose and fix issues in real-time. You will not be able to step through code, set breakpoints, or inspect variables and the call stack while the application is running on the server. Remote debugging is particularly useful for diagnosing issues that only occur in the production environment. Without it, you will need to rely on logs and other diagnostic tools."
  solution       : "Remediate from Azure Portal

Login to Azure Portal using https://portal.azure.com

Go to App Services

Click on each App

Under Setting section, Click on Configuration

Under the General settings tab, set the Remote debugging option to Off.

Remediate from Azure CLI
To set remote debugging status to off, run the following command

az webapp config set --resource-group <resource_group_name> --name <app_name> --remote-debugging-enabled false

Remediation from PowerShell
To set remote debugging status to off, run the following command

Set-AzWebApp -ResourceGroupName <resource_group_name> -Name <app_name> -RemoteDebuggingEnabled $false

Default Value:

By default, remote debugging is set to off"
  reference      : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.15,800-53|CM-6,800-53|CM-7,800-53|SC-23,800-53r5|CM-6,800-53r5|CM-7,800-53r5|SC-23,CSCv7|9.2,CSCv8|12.3,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|SC-23,ITSG-33|SC-23a.,LEVEL|1A,NESA|T4.5.1,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|5.2.1,SWIFT-CSCv1|2.3"
  see_also       : "https://workbench.cisecurity.org/benchmarks/16820"
  request        : "listAppConfig"
  json_transform : '.[]|.subscriptionId as $subid|.resourceGroups[]|.name as $rgname|.WebApps[]|.name as $waname|.value[]|"Subscription ID: \($subid), Resource Group: \($rgname), App Name: \($waname), Remote Debugging Enabled: \(.properties.remoteDebuggingEnabled)"'
  expect         : "Remote Debugging Enabled: false"
  match_all      : YES
</custom_item>

</check_type>
